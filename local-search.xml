<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>淘宝用户行为分析</title>
    <link href="/2023/04/11/%E6%B7%98%E5%AE%9D%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90/"/>
    <url>/2023/04/11/%E6%B7%98%E5%AE%9D%E7%94%A8%E6%88%B7%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="一、项目背景"><a href="#一、项目背景" class="headerlink" title="一、项目背景"></a>一、项目背景</h1><p>本项目以淘宝的真实用户的商品行为数据为基础，通过sql分析和tableau可视化，探索用户行为规律，寻找高价值用户；分析商品特征，寻找高贡献商品；分析产品功能，优化产品路径。</p><p>注：数据包含了抽样出来的1W用户在一个月时间（11.18~12.18）之内的移动端行为约一千两百万条数据。</p><h1 id="二、分析流程"><a href="#二、分析流程" class="headerlink" title="二、分析流程"></a>二、分析流程</h1><!-- ![分析流程]() --><ul><li>主要从以下四个维度对用户行为进行分析和建议:</li><li>用户行为间的<strong>转化情况</strong>分析<br>利用漏斗模型分析用户从商品浏览到购买整个过程中，常见的电商分析指标，确定各个环节流失率， 提出改善转化率的建议。</li><li>用户的<strong>行为习惯</strong>分析<br>利用pv、uv等指标，找出用户活跃的日期以及每天的活跃时间段。</li><li>用户<strong>类目偏好</strong>分析<br>根据商品的点击、收藏、加购、购买频率，探索用户对商品的购买偏好，找到针对不同商品的营销策略(购买 率较高的类目和产品，优化产品推荐)。</li><li>用户<strong>价值分析</strong><br>找出最具有价值的核心用户群，针对这个群体推送个性化推送，优惠券或者活动。</li><li>待续</li></ul><h2 id="确认问题"><a href="#确认问题" class="headerlink" title="确认问题"></a>确认问题</h2><p>本次分析的目的是想通过对用户行为数据进行分析，为以下问题提供解释和改进建议:</p><ul><li>基于漏斗模型的用户购买流程各环节的分析指标，分析各环节的转化率，便于找到改进的环节。</li><li>商品分析：找出热销商品，研究热销商品的特点。</li><li>基于RFM模型找出核心付费用户群，对每部分群体做精准营销。</li></ul><h1 id="三、数据读取"><a href="#三、数据读取" class="headerlink" title="三、数据读取"></a>三、数据读取</h1><ul><li><p>表结构</p><p>  <img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraGxkVF9iU3dOcE5vTzVPP2U9YW9zRUt2.png" alt="表结构说明"></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql">use user_tb;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> user_action<br>(<br>user_id <span class="hljs-type">int</span> (<span class="hljs-number">9</span>),<br>item_id <span class="hljs-type">int</span> (<span class="hljs-number">9</span>),<br>behavior_type <span class="hljs-type">int</span> (<span class="hljs-number">1</span>),<br>item_category <span class="hljs-type">int</span> (<span class="hljs-number">5</span>),<br><span class="hljs-type">time</span>  <span class="hljs-type">varchar</span> (<span class="hljs-number">13</span>)<br>);<br></code></pre></td></tr></table></figure><ul><li><p>数据导入</p><p>数据来源：<a href="https://tianchi.aliyun.com/competition/entrance/532059/information">阿里云-天池-淘宝用户购物行为数据可视化分析</a></p></li></ul><h1 id="四、数据预处理"><a href="#四、数据预处理" class="headerlink" title="四、数据预处理"></a>四、数据预处理</h1><p>数据预处理包括<strong>数据重复值</strong>、<strong>空缺值</strong>、<strong>异常值处理</strong>以及<strong>保持数据一致性</strong>。</p><h2 id="数据重复值"><a href="#数据重复值" class="headerlink" title="数据重复值"></a>数据重复值</h2><ul><li>查看数据重复值</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) <br><span class="hljs-keyword">from</span> user_action<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id,item_id,behavior_type,item_category,<span class="hljs-type">time</span><br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>)<span class="hljs-operator">&gt;</span><span class="hljs-number">1</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">desc</span>;<br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraGdQZnc4TDNQZlhZNERWP2U9ZnVsQUg0.png" alt="数据重复值"></p><ul><li><p>处理数据重复值</p><p>虽然可以看到有大量的重复数据。</p><p>但是通过实际分析，time的精确到小时，而一个小时内可以发生多个用户购买行为，所以忽略掉这些重复的数据。</p></li></ul><h2 id="数据空缺值"><a href="#数据空缺值" class="headerlink" title="数据空缺值"></a>数据空缺值</h2><ul><li><p>查看数据空缺值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(user_id),<span class="hljs-built_in">count</span>(item_id),<span class="hljs-built_in">count</span>(behavior_type),<span class="hljs-built_in">count</span>(item_category),<span class="hljs-built_in">count</span>(<span class="hljs-type">time</span>)<br><span class="hljs-keyword">from</span> user_action;<br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraVFMcUpRZW9KRVVPd2YwP2U9YU01dGxy.png" alt="数据空缺数值"></p></li></ul><h2 id="数据异常值"><a href="#数据异常值" class="headerlink" title="数据异常值"></a>数据异常值</h2><p>从范围数值内入手或者是明显不符合实际逻辑的数据。</p><ul><li><p>查看behavio type的类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> behavior_type <span class="hljs-keyword">from</span> user_action;<br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraHAxUmVfcEtVTF9qMjd5P2U9cDVUbTVq.png" alt="行为类型"></p><p>四种行为，没有异常。</p></li><li><p>查看time的范围</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">max</span>(<span class="hljs-type">time</span>),<span class="hljs-built_in">min</span>(<span class="hljs-type">time</span>) <span class="hljs-keyword">from</span> user_action;<br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraFBmUFg5MGdyOG5UaTRQP2U9dWNmUThM.png" alt="时间范围"></p><p>没有问题，符合数据集中的描述，时间是从2014年11月18号到2014年12月18号共一个月的时间。</p></li></ul><h2 id="数据一致性"><a href="#数据一致性" class="headerlink" title="数据一致性"></a>数据一致性</h2><ul><li>对time字段做处理：<ul><li>新建日期列，命名为date；新建小时列，命名为hour。</li><li>更新新增列内容后删去原time列。</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> user_action <span class="hljs-keyword">add</span> <span class="hljs-type">date</span> <span class="hljs-type">date</span>;<br><span class="hljs-keyword">update</span> user_action <span class="hljs-keyword">set</span> <span class="hljs-type">date</span><span class="hljs-operator">=</span><span class="hljs-keyword">left</span>(<span class="hljs-type">time</span>,<span class="hljs-number">10</span>);<br><br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> user_action <span class="hljs-keyword">add</span> <span class="hljs-keyword">hour</span> <span class="hljs-type">char</span>(<span class="hljs-number">255</span>);<br><span class="hljs-keyword">update</span> user_action <span class="hljs-keyword">set</span> <span class="hljs-keyword">hour</span><span class="hljs-operator">=</span><span class="hljs-keyword">right</span>(<span class="hljs-type">time</span>,<span class="hljs-number">8</span>);<br><br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> user_action <span class="hljs-keyword">drop</span> <span class="hljs-type">time</span>;<br></code></pre></td></tr></table></figure><ul><li>对behavior_type字段改为英文命名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> user_action<br><span class="hljs-keyword">set</span> behavior_type<span class="hljs-operator">=</span>(<br><span class="hljs-keyword">case</span><br><span class="hljs-keyword">when</span> behavior_type<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;look&#x27;</span><br><span class="hljs-keyword">when</span> behavior_type<span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;collect&#x27;</span><br><span class="hljs-keyword">when</span> behavior_type<span class="hljs-operator">=</span><span class="hljs-number">3</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;cart&#x27;</span><br><span class="hljs-keyword">when</span> behavior_type<span class="hljs-operator">=</span><span class="hljs-number">4</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;buy&#x27;</span><br><span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;other&#x27;</span> <span class="hljs-keyword">end</span><br>);<br></code></pre></td></tr></table></figure><h1 id="五、数据分析"><a href="#五、数据分析" class="headerlink" title="五、数据分析"></a>五、数据分析</h1><h2 id="（一）整体情况概述"><a href="#（一）整体情况概述" class="headerlink" title="（一）整体情况概述"></a>（一）整体情况概述</h2><h3 id="1-月维度-总体情况"><a href="#1-月维度-总体情况" class="headerlink" title="1.月维度-总体情况"></a>1.月维度-总体情况</h3><ul><li>11月18日至12月18日总体uv、浏览总次数、人均浏览次数、收藏量、加购量、成交数</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 整体</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> month_all_cnt <span class="hljs-keyword">as</span> <span class="hljs-comment">-- 创建月维度-指标视图</span><br><span class="hljs-keyword">select</span> <br><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) <span class="hljs-keyword">as</span> uv,<span class="hljs-comment">-- 独立访客数</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;look&#x27;</span>)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) <span class="hljs-keyword">as</span> per_view, <span class="hljs-comment">-- 人均页面访问数</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;look&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_look,<span class="hljs-comment">-- 浏览量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;collect&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_collect,<span class="hljs-comment">-- 收藏量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;cart&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_cart,<span class="hljs-comment">-- 加购量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;buy&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_buy<span class="hljs-comment">-- 成交量</span><br><span class="hljs-keyword">from</span> user_action;<br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrak5CNDRBTUpqZFZGWXhqP2U9NkVYNThS.png" alt="month_all_cnt"></p><ul><li>可以看出分析的总用户数为1万人，一个月的订单量约为12万单，并且比起收藏，人们更倾向于加购。</li></ul><h3 id="2-DNU指标"><a href="#2-DNU指标" class="headerlink" title="2.DNU指标"></a>2.DNU指标</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> day_dnu <span class="hljs-keyword">as</span> <span class="hljs-comment">-- 创建每日新用户数视图</span><br><span class="hljs-keyword">select</span> <span class="hljs-type">date</span>,<span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id)<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> user_id,<span class="hljs-type">date</span>,<span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> user_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-type">date</span>) r<br><span class="hljs-keyword">from</span> user_action)t <br><span class="hljs-keyword">where</span> r<span class="hljs-operator">=</span><span class="hljs-number">1</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> <span class="hljs-type">date</span>;<br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p>​<img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraUJNeFR5VmJDUFM4a2tBP2U9b1lCZFBM.png" alt="DNU指标"></p><ul><li><p>使用tableau将其可视化结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraUVENDVaQmZKSDJXakQ5P2U9dlk5a3pZ.png" alt="图-DNU指标"></p></li><li><p>可以看出DNU指标从首日便开始骤减，是由于数据是从11月18日开始，没有之前的数据源。故导致在11月18日中的“新增用户”极大部分是来自于此前活跃用户，并非当日新增的用户。</p></li><li><p>而次日到三日的DNU数据也出现一定程度的骤减情况，原因为这些“新增用户”也有部分来自于此前活跃用户。</p></li><li><p><strong>越到后面越呈现稳定状态，也更能代表DNU真实情况。</strong></p></li></ul><h3 id="3-整体行为数据"><a href="#3-整体行为数据" class="headerlink" title="3.整体行为数据"></a>3.整体行为数据</h3><h4 id="（1）用户行为数据频次统计"><a href="#（1）用户行为数据频次统计" class="headerlink" title="（1）用户行为数据频次统计"></a>（1）用户行为数据频次统计</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> <span class="hljs-keyword">view</span> user_cnt_all <span class="hljs-keyword">as</span> <span class="hljs-comment">-- 用户维度整体情况</span><br><span class="hljs-keyword">select</span> user_id,<br><span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">as</span> all_cnt,<span class="hljs-comment">-- 用户总点击量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;look&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_look,<span class="hljs-comment">-- 用户浏览量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;collect&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_collect,<span class="hljs-comment">-- 用户收藏量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;cart&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_cart,<span class="hljs-comment">-- 用户加购量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;buy&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_buy<span class="hljs-comment">-- 用户成交数</span><br><span class="hljs-keyword">from</span> user_action<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> cnt_all_buy;<br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraF9ZWkJzcEVYM3h6RGZqP2U9cEI2M1oy.png" alt="user_cnt_all"></p><ul><li>统计出每个用户的总点击数、浏览数、收藏数、加购数和购买数，方便后续分析出用户的复购情况和浏览页面跳出情况。</li></ul><h4 id="（2）用户整体复购情况"><a href="#（2）用户整体复购情况" class="headerlink" title="（2）用户整体复购情况"></a>（2）用户整体复购情况</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> <span class="hljs-keyword">view</span> user_again <span class="hljs-keyword">as</span> <span class="hljs-comment">-- 用户复购视图</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(cnt_all_buy<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span>) <span class="hljs-keyword">as</span> buy,<span class="hljs-comment">-- 用户月买了多少次</span><br><span class="hljs-built_in">sum</span>(cnt_all_bu<span class="hljs-operator">&gt;</span><span class="hljs-number">1</span>) <span class="hljs-keyword">as</span> again_buy,<span class="hljs-comment">-- 用户月复购多少次</span><br>concat(round((<span class="hljs-built_in">sum</span>(cnt_all_bu<span class="hljs-operator">&gt;</span><span class="hljs-number">1</span>)<span class="hljs-operator">/</span><span class="hljs-built_in">sum</span>(cnt_all_bu<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span>))<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;%&#x27;</span>) <span class="hljs-keyword">as</span> again_buy_rate<span class="hljs-comment">-- 用户月复购率</span><br><span class="hljs-keyword">from</span> user_cnt_all<br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhralZXRi05c01acDF1WjJSP2U9V3puMlY2.png" alt="user_again"></p><ul><li>用户复购率高达91.69%，说明淘宝对用户有较大的吸引力使用户停留且用户 的忠诚度非常高。可以进一步提高复购率，鼓励用户更高频次的购物。</li><li>猜测其最大的原因是双十二当天的购买人数非常多，拉高了复购率。后续还要和别的月份相比较。</li></ul><h4 id="（3）页面跳出情况"><a href="#（3）页面跳出情况" class="headerlink" title="（3）页面跳出情况"></a>（3）页面跳出情况</h4><h5 id="浏览页面跳出"><a href="#浏览页面跳出" class="headerlink" title="浏览页面跳出"></a>浏览页面跳出</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> user_lost <span class="hljs-keyword">as</span> <span class="hljs-comment">-- 用户跳出情况</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) <span class="hljs-keyword">as</span> user_lost,<br>concat(<br>round(<br>(<span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id)<span class="hljs-operator">/</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(user_id) <span class="hljs-keyword">from</span> user_cnt_all))<span class="hljs-operator">*</span><span class="hljs-number">100</span><br>,<span class="hljs-number">2</span>)<br>,<span class="hljs-string">&#x27;%&#x27;</span>) <span class="hljs-keyword">as</span> user_lost_rate<br><span class="hljs-keyword">from</span> user_cnt_all<br><span class="hljs-keyword">where</span> cnt_all_look<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span> <br><span class="hljs-keyword">and</span> cnt_all_collect<span class="hljs-operator">=</span><span class="hljs-number">0</span> <br><span class="hljs-keyword">and</span> cnt_all_cart<span class="hljs-operator">=</span><span class="hljs-number">0</span> <br><span class="hljs-keyword">and</span> cnt_all_cart<span class="hljs-operator">=</span><span class="hljs-number">0</span> <br><span class="hljs-keyword">and</span> cnt_all_buy<span class="hljs-operator">=</span><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraGNrcHZHMHJsVTdyNWNWP2U9dkEyT0RC.png" alt="user_lost"></p><h5 id="关键页面跳出"><a href="#关键页面跳出" class="headerlink" title="关键页面跳出"></a>关键页面跳出</h5><ul><li>指的是用户加购或者收藏却没有购买的行为</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> user_keylost <span class="hljs-keyword">as</span> <span class="hljs-comment">-- 用户关键跳出情况</span><br><span class="hljs-keyword">select</span> <br> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(user_id) <span class="hljs-keyword">from</span> user_cnt_all) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;总用户&#x27;</span>,<br><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;跳出用户&#x27;</span>,<br>concat(<br>round(<br>(<span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id)<span class="hljs-operator">/</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(user_id) <span class="hljs-keyword">from</span> user_cnt_all))<span class="hljs-operator">*</span><span class="hljs-number">100</span><br>,<span class="hljs-number">2</span>)<br>,<span class="hljs-string">&#x27;%&#x27;</span>) <span class="hljs-keyword">as</span> 关键跳出率<br><span class="hljs-keyword">from</span> user_cnt_all<br><span class="hljs-keyword">where</span> cnt_all_collect<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span> <span class="hljs-keyword">or</span> cnt_all_cart<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span> <br><span class="hljs-keyword">and</span> cnt_all_buy<span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhral9wOE5vVWNZcDNmazRUP2U9a1lZOWQw.png" alt="user_keylost"></p><ul><li><p>跳出情况解读：</p><ul><li><p>浏览页面跳出率为42.61%，关键页面跳出率我额70.29%。</p></li><li><p>分析：可能商品不符合用户需求，竞争力不够。</p></li><li><p>解决方法：可对比竞品网站，在商品的定价、商品陈列故事、商品详情描述等方面做出改进</p></li></ul></li></ul><h4 id="4-用户留存情况"><a href="#4-用户留存情况" class="headerlink" title="4.用户留存情况"></a>4.用户留存情况</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> user_remain <span class="hljs-keyword">as</span> <span class="hljs-comment">-- 创建用户留存表</span><br><span class="hljs-keyword">with</span> temp_remain <span class="hljs-keyword">as</span> (<br><span class="hljs-keyword">select</span> t1.date,<br><span class="hljs-built_in">sum</span>(datediff(t2.date,t1.date)<span class="hljs-operator">=</span><span class="hljs-number">0</span>) remain_0,<span class="hljs-comment">-- 当天用户数</span><br><span class="hljs-built_in">sum</span>(datediff(t2.date,t1.date)<span class="hljs-operator">=</span><span class="hljs-number">1</span>) remain_1,<span class="hljs-comment">-- 第二天剩下来的用户数</span><br><span class="hljs-built_in">sum</span>(datediff(t2.date,t1.date)<span class="hljs-operator">=</span><span class="hljs-number">2</span>) remain_2,<span class="hljs-comment">-- 第三天剩下来的用户数</span><br><span class="hljs-built_in">sum</span>(datediff(t2.date,t1.date)<span class="hljs-operator">=</span><span class="hljs-number">6</span>) remain_6<span class="hljs-comment">-- 第七天剩下来的用户数</span><br><span class="hljs-keyword">from</span> <br>(<span class="hljs-keyword">select</span> user_id,<span class="hljs-type">date</span> <span class="hljs-keyword">from</span> user_action <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id,<span class="hljs-type">date</span>)t1<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> (<span class="hljs-keyword">select</span> user_id,<span class="hljs-type">date</span> <span class="hljs-keyword">from</span> user_action <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id,<span class="hljs-type">date</span>)t2<br><span class="hljs-keyword">on</span> t1.user_id<span class="hljs-operator">=</span>t2.user_id <span class="hljs-keyword">and</span> t1.date<span class="hljs-operator">&lt;=</span>t2.date <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> <span class="hljs-type">date</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-type">date</span><br>)<br><span class="hljs-keyword">select</span> <span class="hljs-type">date</span>,remain_0 <span class="hljs-keyword">as</span> today_cnt,<br>concat(round((remain_1<span class="hljs-operator">/</span>remain_0)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;%&#x27;</span>) day_2_rate,<span class="hljs-comment">-- 第2天的留存率</span><br>concat(round((remain_2<span class="hljs-operator">/</span>remain_0)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;%&#x27;</span>) day_3_rate,<span class="hljs-comment">-- 第3天的留存率</span><br>concat(round((remain_6<span class="hljs-operator">/</span>remain_0)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;%&#x27;</span>) day_7_rate<span class="hljs-comment">-- 第7天的留存率</span><br><span class="hljs-keyword">from</span> temp_remain;<br></code></pre></td></tr></table></figure><ul><li><p>查询结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraXBpSHhTSmk5ZlNwOEZuP2U9TWpja0JS.png" alt="user_remain"></p></li><li><p>因为时间跨度只有一个月，所以直接分析次日、三日、一周留存率。</p><ul><li>可以看出次日留存率、三日留存率、一周留存率在“双十二”前留存率呈下降趋势，而“双十二”活动左右的一周时间内各项指标都出现比较大的波动而且总体是提高的趋势，可以看出<strong>活动对用户的吸引力是很强的</strong>，在12.13号当天次日留存率达到顶峰值，可能为客户在购买完商品后对商品状态的关心而进行再次访问。</li></ul></li></ul><h2 id="（二）用户转化情况分析"><a href="#（二）用户转化情况分析" class="headerlink" title="（二）用户转化情况分析"></a>（二）用户转化情况分析</h2><h3 id="1-漏斗分析"><a href="#1-漏斗分析" class="headerlink" title="1.漏斗分析"></a>1.漏斗分析</h3><h4 id="（1）流量转化分析"><a href="#（1）流量转化分析" class="headerlink" title="（1）流量转化分析"></a>（1）流量转化分析</h4><ul><li><p>对浏览量-收藏量-加购量-购买量的对比查询结果如下</p><p><img src="/" alt="转化情况">没有图</p></li><li><p>使用tableau将其可视化结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraFZ5SVh2U0tPYzQ2RGtxP2U9ZkhnQ2x2.png" alt="11月转化情况"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrakJlSjllb3BLZ0tPNFk3P2U9YWlFcXRm.png" alt="12月转化情况"></p></li><li><p>从浏览量-加购量-收藏量-购买量来看，只有1%的购买。并且无论是加购还是收藏的转化率都十分低，说明用户花费了大量时间来寻找合适产品，故我们可以从<strong>UI设计</strong>，<strong>关键词搜索优化</strong>，推荐算法等方面进行提升客户体验。</p></li><li><p>进一步用户是否也是在点击后产生了大量的流失</p></li></ul><h4 id="（2）各环节用户转化分析"><a href="#（2）各环节用户转化分析" class="headerlink" title="（2）各环节用户转化分析"></a>（2）各环节用户转化分析</h4><ul><li>基于user_cnt_all表对用户各个行为的统计，使用漏斗转化模型进行了处理，建立了用户转化漏斗图。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> user_transfor <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> <br><span class="hljs-built_in">sum</span>(cnt_all_look),<span class="hljs-built_in">sum</span>(cnt_all_collect),<span class="hljs-built_in">sum</span>(cnt_all_cart),<span class="hljs-built_in">sum</span>(cnt_all_buy)<br><span class="hljs-keyword">from</span> user_cnt_all;<br></code></pre></td></tr></table></figure><ul><li><p>查询结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraS1LVVJwSWMta21OelRJP2U9SlpjNzRx.png" alt="user_transfor"></p></li><li><p>使用tableau将其可视化结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhramd3dm9aWWRLaDlRNTJKP2U9ajVKYmdX.png" alt="用户转化漏斗图"></p><ul><li>可以看出，用户并未点击后就大量流失，并且最后付费用户比例达到了88.86%。说明用户的<strong>购买意愿较为理想</strong>。 结合用户行为数统计推断用户的点击行为远远超过了收藏和加购物车的行为，说明用户有较大的可能在购物时有“货比三家”的习惯。</li><li>所以针对大部分点击后转化到加购物车和收藏的概率较低有较大的提升空间，APP可以通过<strong>优化推荐商品的功能和筛选商品的功能</strong>，让用户不用浏览较多的网页获得心仪的商品。</li></ul></li></ul><h4 id="（3）路径分析"><a href="#（3）路径分析" class="headerlink" title="（3）路径分析"></a>（3）路径分析</h4><ul><li>那么再回到用户转化漏斗图，<strong>从浏览到购买每个环节的转化率又是多少</strong>?为什么收藏比加入购物车少?</li><li>从用户点击后到最后购买的<strong>四条不同的路径</strong>展开分析</li></ul><h5 id="点击-购买"><a href="#点击-购买" class="headerlink" title="点击-购买"></a>点击-购买</h5><p>使用tableau将其可视化结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraDI0cG5tTy1MTDZhaDhVP2U9MFJpSVl4.png" alt="浏览-购买"></p><h5 id="点击-收藏-购买"><a href="#点击-收藏-购买" class="headerlink" title="点击-收藏-购买"></a>点击-收藏-购买</h5><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraXNfVTNzdUdqSjhhRm9xP2U9VXhiM3Rp.png" alt="浏览-收藏-购买"></p><h5 id="点击-加购-购买"><a href="#点击-加购-购买" class="headerlink" title="点击-加购-购买"></a>点击-加购-购买</h5><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraHUxNk5PbHhuMWNyZGllP2U9YTBDV1Zs.png" alt="浏览-加购-购买"></p><h5 id="点击-收藏或加购-购买"><a href="#点击-收藏或加购-购买" class="headerlink" title="点击-收藏或加购-购买"></a>点击-收藏或加购-购买</h5><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraWUzSHpfbjJKOW91QlEwP2U9YTZudVp2.png" alt="浏览-收藏或加购-购买"></p><ul><li>从四种购买行为的留存，可以看出用户点击后，若存在后续行为则主要是加入购物车，其次是收藏和加购物车，再接下来是收藏；除此之外还与一部分用户是点击后直接购买的。</li><li>可以着重研究一下各类路径用户购买的什么产品以及用户的标签，通过优化商品推荐和精准运营加强这部分的转化。</li><li>推断在收藏的用户转换率较低的原因在于用户在点击时较为喜欢此商品或者说活动时间还未开始，通过提醒用户等方式精准运营提高这部分用户的购买率。</li><li>最后，对用户从收藏到购买，加购物车到购买和收藏和加购物车到购买的转化分析来看，加购物车到购买的转化率最高达到了 34.79%，说明直接加入到购物车最后购买的概率较高，故引导客户加入购物车及时购买可以提高购买转化率。</li></ul><h3 id="2-行为习惯分析"><a href="#2-行为习惯分析" class="headerlink" title="2.行为习惯分析"></a>2.行为习惯分析</h3><h4 id="行为习惯分布（周）"><a href="#行为习惯分布（周）" class="headerlink" title="行为习惯分布（周）"></a>行为习惯分布（周）</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> day_all_cnt <span class="hljs-keyword">as</span> <span class="hljs-comment">-- 创建周的指标视图</span><br><span class="hljs-keyword">select</span> date_format(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27;%W&#x27;</span>) <span class="hljs-keyword">as</span> weeks,<br><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) <span class="hljs-keyword">as</span> uv,<span class="hljs-comment">-- 独立访客数</span><br>round(<span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;look&#x27;</span>)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id),<span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> per_view, <span class="hljs-comment">-- 人均页面访问数</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;look&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_look,<span class="hljs-comment">-- 浏览量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;collect&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_collect,<span class="hljs-comment">-- 收藏量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;cart&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_cart,<span class="hljs-comment">-- 加购量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;buy&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_buy<span class="hljs-comment">-- 成交量</span><br><span class="hljs-keyword">from</span> user_action<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> weeks<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> field(weeks,<span class="hljs-string">&#x27;Monday&#x27;</span>,<span class="hljs-string">&#x27;Tuesday&#x27;</span>,<span class="hljs-string">&#x27;Wednesday&#x27;</span>,<span class="hljs-string">&#x27;Thurday&#x27;</span>,<span class="hljs-string">&#x27;Friday&#x27;</span>,<span class="hljs-string">&#x27;Saturday&#x27;</span>,<span class="hljs-string">&#x27;Sunday&#x27;</span>);<br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p>​<img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrajdsLWRTa3ZGQWRYcmpUP2U9dWVFU05F.png" alt="周维度数据"></p><ul><li><p>使用tableau将其可视化结果如下</p><p>   <img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrajJ5MjJ0ek9QT3pHaVU3P2U9bVJIRWlU.png" alt="周维度基础数据"></p></li><li><p>从星期来看，周四、周五、周六形成一个客流小高峰，在周五完成购买。</p></li></ul><h4 id="行为习惯分布（天）"><a href="#行为习惯分布（天）" class="headerlink" title="行为习惯分布（天）"></a>行为习惯分布（天）</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> day_all_cnt <span class="hljs-keyword">as</span> <span class="hljs-comment">-- 创建每天指标视图</span><br><span class="hljs-keyword">select</span> <br><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) <span class="hljs-keyword">as</span> uv,<span class="hljs-comment">-- 每日独立访客数</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;look&#x27;</span>)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) <span class="hljs-keyword">as</span> per_view, <span class="hljs-comment">-- 每日人均页面访问数</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;look&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_look,<span class="hljs-comment">-- 浏览量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;collect&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_collect,<span class="hljs-comment">-- 每日收藏量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;cart&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_cart,<span class="hljs-comment">-- 每日加购量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;buy&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_buy<span class="hljs-comment">-- 每日成交量</span><br><span class="hljs-keyword">from</span> user_action<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> <span class="hljs-type">date</span>;<br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhra0E2TmgwMmo2VUhZUGlEP2U9TFU2RXZm.png" alt="day_all_cnt"></p><ul><li><p>使用tableau将其可视化结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraW1LMHhRSEkwS2Rwa0tzP2U9ZVRraDZn.png" alt="日维度基础数据+look"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhramRGaFczTWlKWU82V3RnP2U9c3VGTzA0.png" alt="日维度基础数据"></p><ul><li>在研究日期范围内，用户活跃度均比较平稳，但是在12月2日和12月3日出现小幅度的增长，其中点击量和收藏，尤其是加购物车增幅增大，但是购买没有较大增幅。</li><li>分析其原因是由于周末空余时间较多，用户流量增大;再加上双12很多预热活动，用户提前添加收藏和加购物车，是双12批量购买的前置动作，符合常规预期。</li></ul></li></ul><h4 id="一天内用户行为习惯分布"><a href="#一天内用户行为习惯分布" class="headerlink" title="一天内用户行为习惯分布"></a>一天内用户行为习惯分布</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> hours_all_cnt <span class="hljs-keyword">as</span> <span class="hljs-comment">-- 创建每小时指标视图</span><br><span class="hljs-keyword">select</span> hours,<br><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) <span class="hljs-keyword">as</span> uv,<span class="hljs-comment">-- 每小时独立访客数</span><br>round(<span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;look&#x27;</span>)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id),<span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> per_view, <span class="hljs-comment">-- 每日人均页面访问数</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;look&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_look,<span class="hljs-comment">-- 浏览量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;collect&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_collect,<span class="hljs-comment">-- 每小时收藏量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;cart&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_cart,<span class="hljs-comment">-- 每小时加购量</span><br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;buy&#x27;</span>) <span class="hljs-keyword">as</span> cnt_all_buy<span class="hljs-comment">-- 每小时成交量</span><br><span class="hljs-keyword">from</span> user_action<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> hours;<br></code></pre></td></tr></table></figure><ul><li><p>查询结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhralQ1bW4zYUcwSGp1cEVMP2U9R3QzUkZK.png" alt="hours_all_cnt"></p></li><li><p>使用tableau将其可视化结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraGJGbHZtWWRtbTVBVFRPP2U9TUJrdUR3.png" alt="时段维度基础数据-look"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraWdlbG9uTFJwOEJveEVpP2U9UDhUOGdy.png" alt="时段维度基础数据"></p><ul><li>用户在10点到24点较为活跃。</li><li>从17点开始逐渐增高，晚上21点—22点达到最高值。原因可能为18点后处于下班高峰期，人们喜欢下班后购物，在9点左右忙完琐事后购物。</li></ul></li></ul><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="3-类目偏好分析"><a href="#3-类目偏好分析" class="headerlink" title="3.类目偏好分析"></a>3.类目偏好分析</h3><ul><li>统计所有商品的购买次数，同时找到<strong>购买次数、浏览次数、收藏次数和加入购物车次数最多的商品</strong>。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> item_action_cnt <span class="hljs-keyword">as</span> <span class="hljs-comment">--创建商品各种动作数据视图</span><br><span class="hljs-keyword">select</span> item_id,<br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;look&#x27;</span>) item_look_cnt,<br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;collect&#x27;</span>) item_collect_cnt,<br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;cart&#x27;</span>) item_cart_cnt,<br><span class="hljs-built_in">sum</span>(behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;buy&#x27;</span>) item_buy_cnt<br><span class="hljs-keyword">from</span> user_action <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> item_id<br></code></pre></td></tr></table></figure><p>查询结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhranVWVjk2OVUxazRvS3VaP2U9a3JUeTVI.png" alt="item_action_cnt"></p><h4 id="商品销售情况分析"><a href="#商品销售情况分析" class="headerlink" title="商品销售情况分析"></a>商品销售情况分析</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 统计商品购买次数情况</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> item_buy <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> item_buy_cnt,<span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">as</span> item_cnt<br><span class="hljs-keyword">from</span> item_action_cnt <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> item_buy_cnt<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> item_buy_cnt;<br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p> <img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhra0Y0SWE3S1FSeDhOSTFQP2U9UkJHTDJk.png" alt="item_buy"></p><ul><li>用户购买的商品总共有4001种，购买次数在1次的商品占绝大部分，其次是购买次数为2商品，未出现购买次数集中的商 品，说明商品的售卖主要是依靠商品的长尾效应，而非爆款商品。</li></ul><h4 id="商品品类浏览的top20"><a href="#商品品类浏览的top20" class="headerlink" title="商品品类浏览的top20"></a>商品品类浏览的top20</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> look_20 <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> item_id,item_look_cnt<br><span class="hljs-keyword">from</span> item_action_cnt<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> item_look_cnt <span class="hljs-keyword">desc</span><br>limit <span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure><ul><li><p>查询结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhram5TblZ4MGJpNFVvVEptP2U9ek1kSlpN.png" alt="look_20"></p></li><li><p>使用tableau将其可视化结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhralpqcVl4NG51OXFYajV1P2U9YkxOc29W.png" alt="tu-look_20"></p></li><li><p>可以看出商品112921337浏览次数最多，占所有浏览次数的9.5%。</p></li></ul><h4 id="商品品类收藏的top20"><a href="#商品品类收藏的top20" class="headerlink" title="商品品类收藏的top20"></a>商品品类收藏的top20</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> collect_20 <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> item_id,item_collect_cnt<br><span class="hljs-keyword">from</span> item_action_cnt<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> item_collect_cnt <span class="hljs-keyword">desc</span><br>limit <span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure><ul><li><p>查询结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraHh1STVrRTl4SEsyelIzP2U9WDV1R2Q3.png" alt="collect_20"></p></li><li><p>使用tableau将其可视化结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraTdsSnp3TC10NXZlMmVzP2U9alRxTVVV.png" alt="tu-collect_20"></p></li><li><p>可以看出商品277922302浏览次数最多，占所有浏览次数的7.6%。</p></li></ul><h4 id="商品品类加购的top20"><a href="#商品品类加购的top20" class="headerlink" title="商品品类加购的top20"></a>商品品类加购的top20</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> cart_20 <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> item_id,item_cart_cnt<br><span class="hljs-keyword">from</span> item_action_cnt<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> item_cart_cnt <span class="hljs-keyword">desc</span> <br>limit <span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure><ul><li><p>查询结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraVdIUW9zWnJ4RXhrazAtP2U9dmJuVVFL.png" alt="cart_20"></p></li><li><p>使用tableau将其可视化结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraU5fT19ob0RpOWJjRzBtP2U9M2RXWFhv.png" alt="tu-cart_20"></p></li><li><p>可以看出商品83098075浏览次数最多，占所有浏览次数的9.8%。</p></li></ul><h4 id="商品品类购买的top20"><a href="#商品品类购买的top20" class="headerlink" title="商品品类购买的top20"></a>商品品类购买的top20</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> buy_20 <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> item_id,item_buy_cnt<br><span class="hljs-keyword">from</span> item_action_cnt<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> item_buy_cnt <span class="hljs-keyword">desc</span> <br>limit <span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure><ul><li><p>查询结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraXgyQTYydXVYa01vZEp2P2U9a1YwSHJI.png" alt="buy_20"></p></li><li><p>使用tableau将其可视化结果如下</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrakk3TVZTMTlrNm5MdkY2P2U9YXlCMGFi.png" alt="tu-buy_20"></p></li><li><p>可以看出商品303205878浏览次数最多，占所有浏览次数的710.2%。</p></li></ul><h4 id="商品品类分析"><a href="#商品品类分析" class="headerlink" title="商品品类分析"></a>商品品类分析</h4><ul><li><p>查询商品在加购和收藏的top20，但不在购买类目的top20</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> cart_20.item_id<br><span class="hljs-keyword">from</span> cart_20<br><span class="hljs-keyword">where</span> item_id <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> item_id <span class="hljs-keyword">from</span> buy_20)<br><span class="hljs-keyword">and</span> item_id <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> item_id <span class="hljs-keyword">from</span> collect_20);<br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraFFLWEJHMldDajh6OUZZP2U9VWVud0VX.png" alt="cart&amp;collect&amp;buy"></p><ul><li>发现没有商品查询商品在加购和收藏的top20，但不在购买类目的top20。说明所有top20的商品的转化率都还可以。</li></ul></li></ul><h3 id="4-价值分析—RFM模型"><a href="#4-价值分析—RFM模型" class="headerlink" title="4.价值分析—RFM模型"></a>4.价值分析—RFM模型</h3><h4 id="R部分"><a href="#R部分" class="headerlink" title="R部分"></a>R部分</h4><ul><li>将客户近期购买时间进行等级划分，越接近2014-12-18号R越大。<ul><li>间隔&gt;15天为1;<br> 间隔在10-15天为2;<br> 间隔在7-9天为3;<br> 间隔在3-6天为4;<br> 间隔在0-2天为5;</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 第一步：先将每个用户最近购买时间提取出来</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> recency <span class="hljs-keyword">as</span> <span class="hljs-comment">-- 筛选出每个用户最近购买的日期</span><br><span class="hljs-keyword">select</span> user_id,<span class="hljs-built_in">max</span>(<span class="hljs-type">date</span>) <span class="hljs-keyword">as</span> recent_buy_time<br><span class="hljs-keyword">from</span> user_action <br><span class="hljs-keyword">where</span> behavior_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;buy&#x27;</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id;<br><br><span class="hljs-comment">-- 第二步：根据购买等级划分计算出得分</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> r_value <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<br><span class="hljs-keyword">case</span> <br><span class="hljs-keyword">when</span> datediff(<span class="hljs-string">&#x27;2014-12-18&#x27;</span>,recent_buy_time)<span class="hljs-operator">&gt;</span><span class="hljs-number">15</span> <span class="hljs-keyword">then</span> <span class="hljs-number">1</span><br><span class="hljs-keyword">when</span> datediff(<span class="hljs-string">&#x27;2014-12-18&#x27;</span>,recent_buy_time) <span class="hljs-keyword">between</span> <span class="hljs-number">10</span> <span class="hljs-keyword">and</span> <span class="hljs-number">15</span> <span class="hljs-keyword">then</span> <span class="hljs-number">2</span><br><span class="hljs-keyword">when</span> datediff(<span class="hljs-string">&#x27;2014-12-18&#x27;</span>,recent_buy_time)<span class="hljs-keyword">between</span> <span class="hljs-number">7</span> <span class="hljs-keyword">and</span> <span class="hljs-number">9</span> <span class="hljs-keyword">then</span> <span class="hljs-number">3</span><br><span class="hljs-keyword">when</span> datediff(<span class="hljs-string">&#x27;2014-12-18&#x27;</span>,recent_buy_time)<span class="hljs-keyword">between</span> <span class="hljs-number">3</span> <span class="hljs-keyword">and</span> <span class="hljs-number">6</span> <span class="hljs-keyword">then</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">when</span> datediff(<span class="hljs-string">&#x27;2014-12-18&#x27;</span>,recent_buy_time)<span class="hljs-keyword">between</span> <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-number">2</span> <span class="hljs-keyword">then</span> <span class="hljs-number">5</span> <br><span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> r <span class="hljs-comment">-- 计算出每个用户的r得分情况</span><br><span class="hljs-keyword">from</span> recency;<br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrakVHTXRYdHUzN3p2ekl4P2U9djBPa05h.png" alt="r_value"></p><h4 id="F部分"><a href="#F部分" class="headerlink" title="F部分"></a>F部分</h4><ul><li><p>将客户购买频次进行等级划分，越接近2014-12-18号R越大。</p></li><li><p>无购买，0分；<br>1-49次，1分；<br>50-99次，2分；<br>100-299次，3分；<br>300-499次，4分；<br>大于500次，5分。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 表user_cnt_all已经计算出每个用户购买的次数 </span><br><span class="hljs-comment">-- 接下来根据购买频次等级计算出得分即可</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> f_value <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> user_id,cnt_all_buy,<br><span class="hljs-keyword">case</span> <br><span class="hljs-keyword">when</span> cnt_all_buy<span class="hljs-operator">&gt;</span><span class="hljs-number">500</span> <span class="hljs-keyword">then</span> <span class="hljs-number">5</span><br><span class="hljs-keyword">when</span> cnt_all_buy <span class="hljs-keyword">between</span> <span class="hljs-number">300</span> <span class="hljs-keyword">and</span> <span class="hljs-number">499</span> <span class="hljs-keyword">then</span> <span class="hljs-number">4</span><br><span class="hljs-keyword">when</span> cnt_all_buy <span class="hljs-keyword">between</span> <span class="hljs-number">100</span> <span class="hljs-keyword">and</span> <span class="hljs-number">299</span> <span class="hljs-keyword">then</span> <span class="hljs-number">3</span><br><span class="hljs-keyword">when</span> cnt_all_buy <span class="hljs-keyword">between</span> <span class="hljs-number">50</span> <span class="hljs-keyword">and</span> <span class="hljs-number">99</span> <span class="hljs-keyword">then</span> <span class="hljs-number">2</span><br><span class="hljs-keyword">when</span> cnt_all_buy <span class="hljs-keyword">between</span> <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">49</span> <span class="hljs-keyword">then</span> <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span><br><span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> f <span class="hljs-comment">-- 计算出每个用户的r得分情况</span><br><span class="hljs-keyword">from</span> user_cnt_all;<br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhram9nTml0dWswUGt6N0tPP2U9Z0hpSWhj.png" alt="f_value"></p><h4 id="用户划分"><a href="#用户划分" class="headerlink" title="用户划分"></a>用户划分</h4><ul><li>由于只有R和F两个维度，所以分为以下四种，按照<strong>最近一次消费的均值</strong>和<strong>消费频率的均值</strong>定高低界限。<ul><li><strong>重要高价值客户</strong>:指最近一次消费较近而且消费频率较高的客户;<br> <strong>重要唤回客户</strong>:指最近一次消费较远且消费频率较高的客户;<br> <strong>重要深耕客户</strong>:指最近一次消费较近且消费频率较低的客户;<br> <strong>重要挽留客户</strong>:指最近一次消费较远且消费频率较低的客户。</li></ul></li></ul><ol><li>计算出r和f的均值</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(r) <span class="hljs-keyword">as</span> r_avg,<span class="hljs-built_in">avg</span>(f) <span class="hljs-keyword">as</span> f_avg<br><span class="hljs-keyword">from</span> r_value,f_value<br><span class="hljs-keyword">where</span> f<span class="hljs-operator">&lt;&gt;</span><span class="hljs-number">0</span>; <span class="hljs-comment">-- 因为在划分的时候没有购买过的用户f值给0分，故计算平均得分时去掉这类用户</span><br></code></pre></td></tr></table></figure><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraTF3cDVQcURmZk1xckI0P2U9OGhCTjdR.png" alt="avg"></p><p>r_avg&#x3D;3.8522;f_avg&#x3D;1.0396</p><ol start="2"><li><p>用户划分成四类</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> user_RF <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> user_id,<br><span class="hljs-keyword">case</span> <br><span class="hljs-keyword">when</span> r<span class="hljs-operator">&gt;</span><span class="hljs-number">3.8522</span> <span class="hljs-keyword">and</span> f<span class="hljs-operator">&gt;</span><span class="hljs-number">1.0396</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;重要高价值客户&#x27;</span><br><span class="hljs-keyword">when</span> r<span class="hljs-operator">&lt;</span><span class="hljs-number">3.8522</span> <span class="hljs-keyword">and</span> f<span class="hljs-operator">&gt;</span><span class="hljs-number">1.0396</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;重要唤回客户&#x27;</span><br><span class="hljs-keyword">when</span> r<span class="hljs-operator">&gt;</span><span class="hljs-number">3.8522</span> <span class="hljs-keyword">and</span> f<span class="hljs-operator">&lt;</span><span class="hljs-number">1.0396</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;重要深耕客户&#x27;</span><br><span class="hljs-keyword">when</span> r<span class="hljs-operator">&lt;</span><span class="hljs-number">3.8522</span> <span class="hljs-keyword">and</span> f<span class="hljs-operator">&lt;</span><span class="hljs-number">1.0396</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;重要挽留客户&#x27;</span> <br><span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;客户类型&#x27;</span><br><span class="hljs-keyword">from</span> r_value<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> f_value<br><span class="hljs-keyword">using</span>(user_id);<br><br></code></pre></td></tr></table></figure></li></ol><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraDZhdDdjQURQUzRRbzB0P2U9bnJRcEVM.png" alt="user_RF"></p><ol start="3"><li>对各种类型客户计数</li></ol><ul><li>查询结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhranlnYVR2QmRMMlo4UE9lP2U9NzRXRVJF.png" alt="客户类型计数"></p><ul><li>使用tableau将其可视化结果如下</li></ul><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraVlHb0FlV0M2S0VjWWhZP2U9NndjSlFt.png" alt="客户类型条形图"></p><ul><li>可以看出重要高价值客户在1w人中有294人，约占3.31%。重要唤回客户在1w人中有8人，约占0.09%，比重较低。</li><li>可以在后续精细化运营场景中直接使用细分用户，做差异化运营: <ul><li>对高价值客户做VIP服务设计，增加用户粘性同时通过设计优惠券提升客户消费; </li><li>对深耕客户做广告、推送刺激，提升消费频次; </li><li>对挽留客户做优惠券、签到送礼策略，增加挽留用户粘性; </li><li>对唤回客户做定向广告、短信召回策略，尝试召回用户。</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL</tag>
      
      <tag>数据分析</tag>
      
      <tag>Tableau</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode数据库题解</title>
    <link href="/2023/03/31/LeetCode%E6%95%B0%E6%8D%AE%E5%BA%93%E9%A2%98%E8%A7%A3/"/>
    <url>/2023/03/31/LeetCode%E6%95%B0%E6%8D%AE%E5%BA%93%E9%A2%98%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<blockquote><p>题目来源：<a href="https://www.leetcode.cn/">LeetCode-力扣</a>，侵删。</p></blockquote><h1 id="175-combine-two-tables"><a href="#175-combine-two-tables" class="headerlink" title="175-combine-two-tables"></a>175-combine-two-tables</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><a href="combine-two-tables.pdf" target="_blank">175-combine-two-tables</a></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> firstName, lastName ,city,state <br><span class="hljs-keyword">from</span> person <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> address<br><span class="hljs-keyword">on</span> Person.PersonId<span class="hljs-operator">=</span>Address.PersonId;<br></code></pre></td></tr></table></figure><h1 id="176-second-highest-salary"><a href="#176-second-highest-salary" class="headerlink" title="176-second-highest-salary"></a>176-second-highest-salary</h1><h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><p><a href="second-highest-salary.pdf" target="_blank">176-second-highest-salary</a></p><h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><span class="hljs-keyword">select</span> <br>    ifnull(<br>        (<span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> salary <br>        <span class="hljs-keyword">from</span> employee <br>        <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> salary <span class="hljs-keyword">desc</span> <br>        limit <span class="hljs-number">1</span>,<span class="hljs-number">1</span>) <br>        , <span class="hljs-keyword">null</span>) <br>        <span class="hljs-keyword">as</span> SecondHighestSalary <br> <br>;<br></code></pre></td></tr></table></figure><h1 id="177-nth-highest-salary"><a href="#177-nth-highest-salary" class="headerlink" title="177-nth-highest-salary"></a>177-nth-highest-salary</h1><h2 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h2><p><a href="nth-highest-salary.pdf" target="_blank">177-nth-highest-salary</a></p><h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">FUNCTION</span> getNthHighestSalary(N <span class="hljs-type">INT</span>) <span class="hljs-keyword">RETURNS</span> <span class="hljs-type">INT</span><br><span class="hljs-keyword">BEGIN</span><br><span class="hljs-keyword">set</span> n<span class="hljs-operator">=</span>n<span class="hljs-number">-1</span>;<br>  <span class="hljs-keyword">RETURN</span> (<br>      <span class="hljs-keyword">select</span> ifnull(<br>          (<span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> salary <br>          <span class="hljs-keyword">from</span> employee <br>          <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> salary <span class="hljs-keyword">desc</span><br>          limit <span class="hljs-number">1</span> <span class="hljs-keyword">offset</span> n),<span class="hljs-keyword">null</span>)<br>      <span class="hljs-keyword">as</span> getNthHighestSalary<br>      <br>  );<br><span class="hljs-keyword">END</span><br></code></pre></td></tr></table></figure><h1 id="178-rank-scores"><a href="#178-rank-scores" class="headerlink" title="178-rank-scores"></a>178-rank-scores</h1><h2 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h2><p><a href="rank-scores.pdf" target="_blank">178-rank-scores</a></p><h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> score,<span class="hljs-built_in">dense_rank</span>() <span class="hljs-keyword">over</span> (<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> score <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;rank&#x27;</span><br><span class="hljs-keyword">from</span> scores<br>;<br></code></pre></td></tr></table></figure><h1 id="180-consecutive-numbers"><a href="#180-consecutive-numbers" class="headerlink" title="180-consecutive-numbers"></a>180-consecutive-numbers</h1><h2 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h2><p><a href="consecutive-numbers.pdf" target="_blank">180-consecutive-numbers</a></p><h2 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> kk.num <span class="hljs-keyword">as</span>  ConsecutiveNums<br><span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> num,<span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)<br>    <span class="hljs-keyword">from</span>(<br>        <span class="hljs-keyword">select</span> num,<span class="hljs-built_in">row_number</span>() <span class="hljs-keyword">over</span> (<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> id) <span class="hljs-operator">-</span><span class="hljs-built_in">row_number</span>() <span class="hljs-keyword">over</span> (<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> num <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> id) <span class="hljs-keyword">as</span> <span class="hljs-keyword">new</span><br>        <span class="hljs-keyword">from</span> logs) k<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> num,<span class="hljs-keyword">new</span><br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span><br>    ) kk<br></code></pre></td></tr></table></figure><h1 id="181-employees-earning-more-than-their-managers"><a href="#181-employees-earning-more-than-their-managers" class="headerlink" title="181-employees-earning-more-than-their-managers"></a>181-employees-earning-more-than-their-managers</h1><h2 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h2><p><a href="employees-earning-more-than-their-managers.pdf" target="_blank">181-employees-earning-more-than-their-managers</a></p><h2 id="题解-5"><a href="#题解-5" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> e1.name <span class="hljs-keyword">as</span> Employee<br><span class="hljs-keyword">from</span> Employee <span class="hljs-keyword">as</span> e1, Employee <span class="hljs-keyword">as</span> e2<br><span class="hljs-keyword">where</span> e1.managerId<span class="hljs-operator">=</span>e2.id <span class="hljs-keyword">and</span> e1.salary <span class="hljs-operator">&gt;</span> e2.salary;<br><br></code></pre></td></tr></table></figure><h1 id="182-duplicate-emails"><a href="#182-duplicate-emails" class="headerlink" title="182-duplicate-emails"></a>182-duplicate-emails</h1><h2 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h2><p><a href="duplicate-emails.pdf" target="_blank">182-duplicate-emails</a></p><h2 id="题解-6"><a href="#题解-6" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> email <span class="hljs-keyword">from</span> person <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> email<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(Email)<span class="hljs-operator">&gt;</span><span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h1 id="183-customers-who-never-order"><a href="#183-customers-who-never-order" class="headerlink" title="183-customers-who-never-order"></a>183-customers-who-never-order</h1><h2 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h2><p><a href="customers-who-never-order.pdf" target="_blank">183-customers-who-never-order</a></p><h2 id="题解-7"><a href="#题解-7" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> name <span class="hljs-keyword">as</span> Customers<br><span class="hljs-keyword">from</span> Customers <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> Orders<br><span class="hljs-keyword">on</span> Orders.CustomerId<span class="hljs-operator">=</span>Customers.id<br><span class="hljs-keyword">where</span> CustomerId <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span>;<br></code></pre></td></tr></table></figure><h1 id="184-department-highest-salary"><a href="#184-department-highest-salary" class="headerlink" title="184-department-highest-salary"></a>184-department-highest-salary</h1><h2 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h2><p><a href="department-highest-salary.pdf" target="_blank">184-department-highest-salary</a></p><h2 id="题解-8"><a href="#题解-8" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> d.name Department,e.name Employee,Salary<br><span class="hljs-keyword">from</span> Department d <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> employee e<br><span class="hljs-keyword">on</span> e.Departmentid<span class="hljs-operator">=</span>d.id<br><span class="hljs-keyword">where</span> (e.Salary,Departmentid) <span class="hljs-keyword">in</span> <br>    (<span class="hljs-keyword">select</span> <span class="hljs-built_in">max</span>(Salary) Salary,Departmentid <span class="hljs-keyword">from</span> employee <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> Departmentid)<br></code></pre></td></tr></table></figure><h1 id="185-department-top-three-salaries"><a href="#185-department-top-three-salaries" class="headerlink" title="185-department-top-three-salaries"></a>185-department-top-three-salaries</h1><h2 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h2><p><a href="department-top-three-salaries.pdf" target="_blank">185-department-top-three-salaries</a></p><h2 id="题解-9"><a href="#题解-9" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> d.name <span class="hljs-keyword">as</span> Department,k.name <span class="hljs-keyword">as</span> Employee,k.Salary<br><span class="hljs-keyword">from</span> Department d<br><span class="hljs-keyword">join</span> (<span class="hljs-keyword">select</span> name,<br>    <span class="hljs-built_in">dense_rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> departmentId <br>    <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> salary <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">as</span> num,salary,departmentId <br>    <span class="hljs-keyword">from</span> employee) k<br><span class="hljs-keyword">on</span> d.Id<span class="hljs-operator">=</span>k.departmentId<br><span class="hljs-keyword">where</span> num <span class="hljs-keyword">between</span> <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure><h1 id="196-delete-duplicate-emails"><a href="#196-delete-duplicate-emails" class="headerlink" title="196-delete-duplicate-emails"></a>196-delete-duplicate-emails</h1><h2 id="题目-10"><a href="#题目-10" class="headerlink" title="题目"></a>题目</h2><p><a href="delete-duplicate-emails.pdf" target="_blank">196-delete-duplicate-emails</a></p><h2 id="题解-10"><a href="#题解-10" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Please write a <span class="hljs-keyword">DELETE</span> statement <span class="hljs-keyword">and</span> DO <span class="hljs-keyword">NOT</span> write a <span class="hljs-keyword">SELECT</span> statement.<br># Write your MySQL query statement below<br><span class="hljs-keyword">delete</span> p1.<span class="hljs-operator">*</span> <br><span class="hljs-keyword">from</span> Person p1,Person p2<br><span class="hljs-keyword">where</span> p1.email<span class="hljs-operator">=</span>p2.email <span class="hljs-keyword">and</span> p1.id <span class="hljs-operator">&gt;</span> p2.id;<br></code></pre></td></tr></table></figure><h1 id="197-rising-temperature"><a href="#197-rising-temperature" class="headerlink" title="197-rising-temperature"></a>197-rising-temperature</h1><h2 id="题目-11"><a href="#题目-11" class="headerlink" title="题目"></a>题目</h2><p><a href="rising-temperature.pdf" target="_blank">197-rising-temperature</a></p><h2 id="题解-11"><a href="#题解-11" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> w1.id <span class="hljs-keyword">from</span> weather w1,weather w2<br><span class="hljs-keyword">where</span> w1.Temperature<span class="hljs-operator">&gt;</span>w2.Temperature <span class="hljs-keyword">and</span> dateDiff(w1.RecordDate,w2.RecordDate) <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h1 id="262-trips-and-users"><a href="#262-trips-and-users" class="headerlink" title="262-trips-and-users"></a>262-trips-and-users</h1><h2 id="题目-12"><a href="#题目-12" class="headerlink" title="题目"></a>题目</h2><p><a href="trips-and-users.pdf" target="_blank">262-trips-and-users</a></p><h2 id="题解-12"><a href="#题解-12" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <br>    t.request_at <span class="hljs-keyword">as</span> <span class="hljs-keyword">day</span>,<br>    round(<span class="hljs-built_in">sum</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> status <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;cancelled%&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span> <span class="hljs-keyword">end</span>)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>),<span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> &quot;Cancellation Rate&quot;<br><span class="hljs-keyword">from</span> trips t<br><span class="hljs-keyword">join</span> users u1<br><span class="hljs-keyword">on</span> u1.users_id<span class="hljs-operator">=</span>t.client_id <span class="hljs-keyword">and</span> u1.banned<span class="hljs-operator">=</span><span class="hljs-string">&#x27;no&#x27;</span><br><span class="hljs-keyword">join</span> users u2<br><span class="hljs-keyword">on</span> u2.users_id<span class="hljs-operator">=</span>t.driver_id <span class="hljs-keyword">and</span> u2.banned<span class="hljs-operator">=</span><span class="hljs-string">&#x27;no&#x27;</span><br><span class="hljs-keyword">where</span> request_at <span class="hljs-keyword">between</span> <span class="hljs-string">&#x27;2013-10-01&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;2013-10-03&#x27;</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> request_at;<br><br></code></pre></td></tr></table></figure><h1 id="511-game-play-analysis-i"><a href="#511-game-play-analysis-i" class="headerlink" title="511-game-play-analysis-i"></a>511-game-play-analysis-i</h1><h2 id="题目-13"><a href="#题目-13" class="headerlink" title="题目"></a>题目</h2><p><a href="game-play-analysis-i.pdf" target="_blank">511-game-play-analysis-i</a></p><h2 id="题解-13"><a href="#题解-13" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span>  player_id,<span class="hljs-built_in">min</span>(event_date) <span class="hljs-keyword">as</span> first_login <span class="hljs-keyword">from</span> Activity<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> player_id<br>;<br></code></pre></td></tr></table></figure><h1 id="512-game-play-analysis-ii"><a href="#512-game-play-analysis-ii" class="headerlink" title="512-game-play-analysis-ii"></a>512-game-play-analysis-ii</h1><h2 id="题目-14"><a href="#题目-14" class="headerlink" title="题目"></a>题目</h2><p><a href="game-play-analysis-ii.pdf" target="_blank">512-game-play-analysis-ii</a></p><h2 id="题解-14"><a href="#题解-14" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> player_id,device_id<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> player_id,device_id,<span class="hljs-built_in">dense_rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> player_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> event_date <span class="hljs-keyword">asc</span>) dr <span class="hljs-keyword">from</span> activity ) k <br><span class="hljs-keyword">where</span> dr<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br><br></code></pre></td></tr></table></figure><h1 id="534-game-play-analysis-iii"><a href="#534-game-play-analysis-iii" class="headerlink" title="534-game-play-analysis-iii"></a>534-game-play-analysis-iii</h1><h2 id="题目-15"><a href="#题目-15" class="headerlink" title="题目"></a>题目</h2><p><a href="game-play-analysis-iii.pdf" target="_blank">534-game-play-analysis-iii</a></p><h2 id="题解-15"><a href="#题解-15" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> a1.player_id,a1.event_date,<br>   <span class="hljs-built_in">sum</span>(a2.games_played) games_played_so_far <br><span class="hljs-keyword">from</span> activity a1,activity a2<br><span class="hljs-keyword">where</span> a1.player_id<span class="hljs-operator">=</span>a2.player_id <span class="hljs-keyword">and</span> a1.event_date<span class="hljs-operator">&gt;=</span>a2.event_date<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> player_id,event_date<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> player_id,event_date <span class="hljs-keyword">desc</span>;<br><br><br></code></pre></td></tr></table></figure><h1 id="550-game-play-analysis-iv"><a href="#550-game-play-analysis-iv" class="headerlink" title="550-game-play-analysis-iv"></a>550-game-play-analysis-iv</h1><h2 id="题目-16"><a href="#题目-16" class="headerlink" title="题目"></a>题目</h2><p><a href="game-play-analysis-iv.pdf" target="_blank">550-game-play-analysis-iv</a></p><h2 id="题解-16"><a href="#题解-16" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> round(<span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> t.player_id)<span class="hljs-operator">/</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> player_id) <span class="hljs-keyword">from</span> activity),<span class="hljs-number">2</span>) fraction<br><span class="hljs-keyword">from</span><br>    (<span class="hljs-keyword">select</span> a.player_id,<br>        <span class="hljs-built_in">first_value</span>(a.event_date) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> a.player_id <br>        <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> a.event_date) first_date,<br>        <span class="hljs-built_in">lead</span>(a.event_date,<span class="hljs-number">1</span>) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> a.player_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> a.event_date) next_date<br>    <span class="hljs-keyword">from</span> activity a) t<br><span class="hljs-keyword">where</span> datediff(t.next_date,t.first_date)<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br> <br></code></pre></td></tr></table></figure><h1 id="569-median-employee-salary"><a href="#569-median-employee-salary" class="headerlink" title="569-median-employee-salary"></a>569-median-employee-salary</h1><h2 id="题目-17"><a href="#题目-17" class="headerlink" title="题目"></a>题目</h2><p><a href="median-employee-salary.pdf" target="_blank">569-median-employee-salary</a></p><h2 id="题解-17"><a href="#题解-17" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> id,company,salary<br><span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> id,company,salary,<br>        <span class="hljs-built_in">row_number</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> company <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> salary) <span class="hljs-keyword">as</span> rnk_asc,<br>        <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> company) <span class="hljs-keyword">as</span> n<br>    <span class="hljs-keyword">from</span> employee) k<br><span class="hljs-keyword">where</span> rnk_asc<span class="hljs-operator">&gt;=</span>n<span class="hljs-operator">/</span><span class="hljs-number">2</span> <span class="hljs-keyword">and</span> rnk_asc<span class="hljs-operator">&lt;=</span>n<span class="hljs-operator">/</span><span class="hljs-number">2</span><span class="hljs-operator">+</span><span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h1 id="570-managers-with-at-least-5-direct-reports"><a href="#570-managers-with-at-least-5-direct-reports" class="headerlink" title="570-managers-with-at-least-5-direct-reports"></a>570-managers-with-at-least-5-direct-reports</h1><h2 id="题目-18"><a href="#题目-18" class="headerlink" title="题目"></a>题目</h2><p><a href="managers-with-at-least-5-direct-reports.pdf" target="_blank">570-managers-with-at-least-5-direct-reports</a></p><h2 id="题解-18"><a href="#题解-18" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> e.name <span class="hljs-keyword">as</span> name<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> managerid,<span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> managerid) <span class="hljs-keyword">as</span> num <span class="hljs-keyword">from</span> employee) k<br><span class="hljs-keyword">join</span> employee e<br><span class="hljs-keyword">where</span> k.managerid<span class="hljs-operator">=</span>e.id <span class="hljs-keyword">and</span> num<span class="hljs-operator">&gt;=</span><span class="hljs-number">5</span>;<br><br></code></pre></td></tr></table></figure><h1 id="571-find-median-given-frequency-of-numbers"><a href="#571-find-median-given-frequency-of-numbers" class="headerlink" title="571-find-median-given-frequency-of-numbers"></a>571-find-median-given-frequency-of-numbers</h1><h2 id="题目-19"><a href="#题目-19" class="headerlink" title="题目"></a>题目</h2><p><a href="find-median-given-frequency-of-numbers.pdf" target="_blank">571-find-median-given-frequency-of-numbers</a></p><h2 id="题解-19"><a href="#题解-19" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> temp <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> num,frequency,<br>        <span class="hljs-built_in">sum</span>(frequency) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> num <span class="hljs-keyword">asc</span>) s_asc<br>        ,<span class="hljs-built_in">sum</span>(frequency) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> num <span class="hljs-keyword">desc</span>) s_desc<br>        ,<span class="hljs-built_in">sum</span>(frequency) <span class="hljs-keyword">over</span>() s<br>    <span class="hljs-keyword">from</span> numbers<br>)<br><span class="hljs-keyword">select</span> round(<span class="hljs-built_in">avg</span>(num),<span class="hljs-number">1</span>) <span class="hljs-keyword">as</span> median<br><span class="hljs-keyword">from</span> temp<br><span class="hljs-keyword">where</span> s_asc<span class="hljs-operator">&gt;=</span>s<span class="hljs-operator">/</span><span class="hljs-number">2</span> <span class="hljs-keyword">and</span> s_desc<span class="hljs-operator">&gt;=</span>s<span class="hljs-operator">/</span><span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure><h1 id="574-winning-candidate"><a href="#574-winning-candidate" class="headerlink" title="574-winning-candidate"></a>574-winning-candidate</h1><h2 id="题目-20"><a href="#题目-20" class="headerlink" title="题目"></a>题目</h2><p><a href="winning-candidate.pdf" target="_blank">574-winning-candidate</a></p><h2 id="题解-20"><a href="#题解-20" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> c.name name<br><span class="hljs-keyword">from</span> candidate c<br><span class="hljs-keyword">join</span> vote v<br><span class="hljs-keyword">on</span> v.candidateid<span class="hljs-operator">=</span>c.id<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> candidateid<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">desc</span><br>limit <span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><h1 id="577-employee-bonus"><a href="#577-employee-bonus" class="headerlink" title="577-employee-bonus"></a>577-employee-bonus</h1><h2 id="题目-21"><a href="#题目-21" class="headerlink" title="题目"></a>题目</h2><p><a href="employee-bonus.pdf" target="_blank">577-employee-bonus</a></p><h2 id="题解-21"><a href="#题解-21" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> name,bonus<br><span class="hljs-keyword">from</span> employee e <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> bonus b <br><span class="hljs-keyword">on</span> b.empid<span class="hljs-operator">=</span>e.empid<br><span class="hljs-keyword">where</span> ifnull(bonus,<span class="hljs-number">0</span>)<span class="hljs-operator">&lt;</span><span class="hljs-number">1000</span><br><br></code></pre></td></tr></table></figure><h1 id="578-get-highest-answer-rate-question"><a href="#578-get-highest-answer-rate-question" class="headerlink" title="578-get-highest-answer-rate-question"></a>578-get-highest-answer-rate-question</h1><h2 id="题目-22"><a href="#题目-22" class="headerlink" title="题目"></a>题目</h2><p><a href="get-highest-answer-rate-question.pdf" target="_blank">578-get-highest-answer-rate-question</a></p><h2 id="题解-22"><a href="#题解-22" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span>  question_id <span class="hljs-keyword">as</span> survey_log<br><span class="hljs-keyword">from</span> surveylog<br><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> question_id<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> (<span class="hljs-built_in">count</span>(answer_id))<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">desc</span>,question_id<br>limit <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h1 id="579-find-cumulative-salary-of-an-employee"><a href="#579-find-cumulative-salary-of-an-employee" class="headerlink" title="579-find-cumulative-salary-of-an-employee"></a>579-find-cumulative-salary-of-an-employee</h1><h2 id="题目-23"><a href="#题目-23" class="headerlink" title="题目"></a>题目</h2><p><a href="find-cumulative-salary-of-an-employee.pdf" target="_blank">579-find-cumulative-salary-of-an-employee</a></p><h2 id="题解-23"><a href="#题解-23" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> id,<span class="hljs-keyword">month</span>,salary  <br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> id,<span class="hljs-keyword">month</span>,<br>    <span class="hljs-built_in">row_number</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> e.id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">month</span> <span class="hljs-keyword">desc</span>) rn,<br>    <span class="hljs-built_in">sum</span>(salary) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">month</span> <span class="hljs-keyword">range</span> <span class="hljs-number">2</span> preceding) salary<br>    <span class="hljs-keyword">from</span> employee e) k<br><span class="hljs-keyword">where</span> rn<span class="hljs-operator">&gt;</span><span class="hljs-number">1</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> id,<span class="hljs-keyword">month</span> <span class="hljs-keyword">desc</span><br></code></pre></td></tr></table></figure><h1 id="580-count-student-number-in-departments"><a href="#580-count-student-number-in-departments" class="headerlink" title="580-count-student-number-in-departments"></a>580-count-student-number-in-departments</h1><h2 id="题目-24"><a href="#题目-24" class="headerlink" title="题目"></a>题目</h2><p><a href="count-student-number-in-departments.pdf" target="_blank">580-count-student-number-in-departments</a></p><h2 id="题解-24"><a href="#题解-24" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> dept_name,<span class="hljs-built_in">count</span>(student_id) student_number<br><span class="hljs-keyword">from</span> Department d<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> student a<br><span class="hljs-keyword">using</span>(dept_id)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> dept_id<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> student_number <span class="hljs-keyword">desc</span>,dept_name;<br></code></pre></td></tr></table></figure><h1 id="584-find-customer-referee"><a href="#584-find-customer-referee" class="headerlink" title="584-find-customer-referee"></a>584-find-customer-referee</h1><h2 id="题目-25"><a href="#题目-25" class="headerlink" title="题目"></a>题目</h2><p><a href="find-customer-referee.pdf" target="_blank">584-find-customer-referee</a></p><h2 id="题解-25"><a href="#题解-25" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> name <span class="hljs-keyword">from</span> customer<br><span class="hljs-keyword">where</span> referee_id<span class="hljs-operator">!=</span><span class="hljs-number">2</span> <span class="hljs-keyword">or</span> referee_id <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span>;<br></code></pre></td></tr></table></figure><h1 id="585-investments-in-2016"><a href="#585-investments-in-2016" class="headerlink" title="585-investments-in-2016"></a>585-investments-in-2016</h1><h2 id="题目-26"><a href="#题目-26" class="headerlink" title="题目"></a>题目</h2><p><a href="investments-in-2016.pdf" target="_blank">585-investments-in-2016</a></p><h2 id="题解-26"><a href="#题解-26" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> round(<span class="hljs-built_in">sum</span>(tiv_2016),<span class="hljs-number">2</span>) tiv_2016<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> pid,tiv_2016,<br>    <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> tiv_2015) <span class="hljs-keyword">as</span> cnt_2015,<br>    <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> lat,lon ) <span class="hljs-keyword">as</span> city_cnt<br>    <span class="hljs-keyword">from</span> insurance)k<br>    <span class="hljs-keyword">where</span> cnt_2015<span class="hljs-operator">&gt;</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> city_cnt<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br><br></code></pre></td></tr></table></figure><h1 id="586-customer-placing-the-largest-number-of-orders"><a href="#586-customer-placing-the-largest-number-of-orders" class="headerlink" title="586-customer-placing-the-largest-number-of-orders"></a>586-customer-placing-the-largest-number-of-orders</h1><h2 id="题目-27"><a href="#题目-27" class="headerlink" title="题目"></a>题目</h2><p><a href="customer-placing-the-largest-number-of-orders.pdf" target="_blank">586-customer-placing-the-largest-number-of-orders</a></p><h2 id="题解-27"><a href="#题解-27" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><span class="hljs-keyword">select</span> customer_number <span class="hljs-keyword">from</span> Orders<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> customer_number<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">count</span>(order_number) <span class="hljs-keyword">desc</span> limit <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h1 id="595-big-countries"><a href="#595-big-countries" class="headerlink" title="595-big-countries"></a>595-big-countries</h1><h2 id="题目-28"><a href="#题目-28" class="headerlink" title="题目"></a>题目</h2><p><a href="big-countries.pdf" target="_blank">595-big-countries</a></p><h2 id="题解-28"><a href="#题解-28" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><span class="hljs-keyword">select</span> name,population,area <span class="hljs-keyword">from</span> world<br><span class="hljs-keyword">where</span> area<span class="hljs-operator">&gt;=</span><span class="hljs-number">3000000</span> <span class="hljs-keyword">or</span> population<span class="hljs-operator">&gt;=</span><span class="hljs-number">25000000</span>;<br></code></pre></td></tr></table></figure><h1 id="596-classes-more-than-5-students"><a href="#596-classes-more-than-5-students" class="headerlink" title="596-classes-more-than-5-students"></a>596-classes-more-than-5-students</h1><h2 id="题目-29"><a href="#题目-29" class="headerlink" title="题目"></a>题目</h2><p><a href="classes-more-than-5-students.pdf" target="_blank">596-classes-more-than-5-students</a></p><h2 id="题解-29"><a href="#题解-29" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> class <span class="hljs-keyword">from</span> courses<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> class<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(student)<span class="hljs-operator">&gt;=</span><span class="hljs-number">5</span>;<br></code></pre></td></tr></table></figure><h1 id="597-friend-requests-i-overall-acceptance-rate"><a href="#597-friend-requests-i-overall-acceptance-rate" class="headerlink" title="597-friend-requests-i-overall-acceptance-rate"></a>597-friend-requests-i-overall-acceptance-rate</h1><h2 id="题目-30"><a href="#题目-30" class="headerlink" title="题目"></a>题目</h2><p><a href="friend-requests-i-overall-acceptance-rate.pdf" target="_blank">597-friend-requests-i-overall-acceptance-rate</a></p><h2 id="题解-30"><a href="#题解-30" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> round(ifnull(<span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> requester_id,accepter_id)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> sender_id,send_to_id),<span class="hljs-number">0</span>),<span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> accept_rate<br><span class="hljs-keyword">from</span> FriendRequest f,RequestAccepted r<br># <span class="hljs-keyword">on</span> f.sender_id<span class="hljs-operator">=</span>r.requester_id <span class="hljs-keyword">and</span> f.send_to_id<span class="hljs-operator">=</span>r.accepter_id<br></code></pre></td></tr></table></figure><h1 id="601-human-traffic-of-stadium"><a href="#601-human-traffic-of-stadium" class="headerlink" title="601-human-traffic-of-stadium"></a>601-human-traffic-of-stadium</h1><h2 id="题目-31"><a href="#题目-31" class="headerlink" title="题目"></a>题目</h2><p><a href="human-traffic-of-stadium.pdf" target="_blank">601-human-traffic-of-stadium</a></p><h2 id="题解-31"><a href="#题解-31" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> kk <span class="hljs-keyword">as</span> <br>    (<span class="hljs-keyword">select</span> id,visit_date,people,<br>    id<span class="hljs-operator">-</span><span class="hljs-built_in">row_number</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> id)<span class="hljs-keyword">as</span> x <br>    <span class="hljs-keyword">from</span> stadium <br>    <span class="hljs-keyword">where</span> people<span class="hljs-operator">&gt;=</span><span class="hljs-number">100</span><br>    ) <br><br><span class="hljs-keyword">select</span> id,visit_date,people<br><span class="hljs-keyword">from</span> kk<br><span class="hljs-keyword">where</span> x <span class="hljs-keyword">in</span> <br>        (<span class="hljs-keyword">select</span> x <br>        <span class="hljs-keyword">from</span> kk <br>        <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x <br>        <span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(x)<span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span><br>        );<br></code></pre></td></tr></table></figure><h1 id="602-friend-requests-ii-who-has-the-most-friends"><a href="#602-friend-requests-ii-who-has-the-most-friends" class="headerlink" title="602-friend-requests-ii-who-has-the-most-friends"></a>602-friend-requests-ii-who-has-the-most-friends</h1><h2 id="题目-32"><a href="#题目-32" class="headerlink" title="题目"></a>题目</h2><p><a href="friend-requests-ii-who-has-the-most-friends.pdf" target="_blank">602-friend-requests-ii-who-has-the-most-friends</a></p><h2 id="题解-32"><a href="#题解-32" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">select</span> id,<span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) num<br><span class="hljs-keyword">from</span><br>    (<span class="hljs-keyword">select</span> requester_id <span class="hljs-keyword">as</span> id <span class="hljs-keyword">from</span> RequestAccepted<br>    <span class="hljs-keyword">union</span> <span class="hljs-keyword">all</span><br>    <span class="hljs-keyword">select</span> accepter_id <span class="hljs-keyword">as</span> id <span class="hljs-keyword">from</span> RequestAccepted) k<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> id<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> num <span class="hljs-keyword">desc</span><br>limit <span class="hljs-number">1</span><br>    <br></code></pre></td></tr></table></figure><h1 id="603-consecutive-available-seats"><a href="#603-consecutive-available-seats" class="headerlink" title="603-consecutive-available-seats"></a>603-consecutive-available-seats</h1><h2 id="题目-33"><a href="#题目-33" class="headerlink" title="题目"></a>题目</h2><p><a href="consecutive-available-seats.pdf" target="_blank">603-consecutive-available-seats</a></p><h2 id="题解-33"><a href="#题解-33" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> k <span class="hljs-keyword">as</span> (<span class="hljs-keyword">select</span> seat_id,seat_id<span class="hljs-operator">-</span><span class="hljs-built_in">row_number</span>() <span class="hljs-keyword">over</span>() <span class="hljs-keyword">as</span> x <span class="hljs-keyword">from</span> cinema <span class="hljs-keyword">where</span> <span class="hljs-keyword">free</span><span class="hljs-operator">=</span><span class="hljs-number">1</span>)<br><span class="hljs-keyword">select</span> seat_id<br><span class="hljs-keyword">from</span> k<br><span class="hljs-keyword">where</span> x <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> x <span class="hljs-keyword">from</span> k <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x <span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">&gt;=</span><span class="hljs-number">2</span>)<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> seat_id<br>;<br></code></pre></td></tr></table></figure><h1 id="607-sales-person"><a href="#607-sales-person" class="headerlink" title="607-sales-person"></a>607-sales-person</h1><h2 id="题目-34"><a href="#题目-34" class="headerlink" title="题目"></a>题目</h2><p><a href="sales-person.pdf" target="_blank">607-sales-person</a></p><h2 id="题解-34"><a href="#题解-34" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><span class="hljs-keyword">select</span> <br>    SalesPerson.name <br><span class="hljs-keyword">from</span> <br>    SalesPerson<br><span class="hljs-keyword">where</span>  <br>    sales_id <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span><br>    (<span class="hljs-keyword">select</span> sales_id <span class="hljs-keyword">from</span> Orders <br>        <span class="hljs-keyword">where</span> com_id <span class="hljs-keyword">in</span> <br>            (<span class="hljs-keyword">select</span> com_id <span class="hljs-keyword">from</span>  Company <span class="hljs-keyword">where</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;RED&#x27;</span>));<br></code></pre></td></tr></table></figure><h1 id="608-tree-node"><a href="#608-tree-node" class="headerlink" title="608-tree-node"></a>608-tree-node</h1><h2 id="题目-35"><a href="#题目-35" class="headerlink" title="题目"></a>题目</h2><p><a href="tree-node.pdf" target="_blank">608-tree-node</a></p><h2 id="题解-35"><a href="#题解-35" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> id<br>    ,<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> p_id <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;Root&#x27;</span><br>    <span class="hljs-keyword">when</span> id <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> p_id <span class="hljs-keyword">from</span> tree <span class="hljs-keyword">where</span> p_id <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>) <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;Leaf&#x27;</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;Inner&#x27;</span> <span class="hljs-keyword">end</span> <br>     type<br><span class="hljs-keyword">from</span> tree;<br></code></pre></td></tr></table></figure><h1 id="610-triangle-judgement"><a href="#610-triangle-judgement" class="headerlink" title="610-triangle-judgement"></a>610-triangle-judgement</h1><h2 id="题目-36"><a href="#题目-36" class="headerlink" title="题目"></a>题目</h2><p><a href="triangle-judgement.pdf" target="_blank">610-triangle-judgement</a></p><h2 id="题解-36"><a href="#题解-36" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> x,y,z,<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> x<span class="hljs-operator">+</span>y<span class="hljs-operator">&gt;</span>z <span class="hljs-keyword">and</span> x<span class="hljs-operator">+</span>z<span class="hljs-operator">&gt;</span>y <span class="hljs-keyword">and</span> y<span class="hljs-operator">+</span>z<span class="hljs-operator">&gt;</span>x <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;Yes&#x27;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;No&#x27;</span> <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> triangle<br><span class="hljs-keyword">from</span> triangle<br></code></pre></td></tr></table></figure><h1 id="613-shortest-distance-in-a-line"><a href="#613-shortest-distance-in-a-line" class="headerlink" title="613-shortest-distance-in-a-line"></a>613-shortest-distance-in-a-line</h1><h2 id="题目-37"><a href="#题目-37" class="headerlink" title="题目"></a>题目</h2><p><a href="shortest-distance-in-a-line.pdf" target="_blank">613-shortest-distance-in-a-line</a></p><h2 id="题解-37"><a href="#题解-37" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">min</span>(<span class="hljs-built_in">abs</span>(p1.x<span class="hljs-operator">-</span>p2.x)) shortest<br><span class="hljs-keyword">from</span> point p1<br><span class="hljs-keyword">join</span> point p2<br><span class="hljs-keyword">on</span> p1.x<span class="hljs-operator">&gt;</span>p2.x<br></code></pre></td></tr></table></figure><h1 id="618-students-report-by-geography"><a href="#618-students-report-by-geography" class="headerlink" title="618-students-report-by-geography"></a>618-students-report-by-geography</h1><h2 id="题目-38"><a href="#题目-38" class="headerlink" title="题目"></a>题目</h2><p><a href="students-report-by-geography.pdf" target="_blank">618-students-report-by-geography</a></p><h2 id="题解-38"><a href="#题解-38" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">max</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> continent<span class="hljs-operator">=</span><span class="hljs-string">&#x27;America&#x27;</span> <span class="hljs-keyword">then</span> name <span class="hljs-keyword">end</span>) <span class="hljs-keyword">as</span> America,<br>    <span class="hljs-built_in">max</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> continent<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Asia&#x27;</span> <span class="hljs-keyword">then</span> name <span class="hljs-keyword">end</span>) <span class="hljs-keyword">as</span> Asia,<br>    <span class="hljs-built_in">max</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> continent<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Europe&#x27;</span> <span class="hljs-keyword">then</span> name <span class="hljs-keyword">end</span>) <span class="hljs-keyword">as</span> Europe<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<span class="hljs-built_in">row_number</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> continent <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> name) rn <br>        <span class="hljs-keyword">from</span> student)k<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> rn<br></code></pre></td></tr></table></figure><h1 id="619-biggest-single-number"><a href="#619-biggest-single-number" class="headerlink" title="619-biggest-single-number"></a>619-biggest-single-number</h1><h2 id="题目-39"><a href="#题目-39" class="headerlink" title="题目"></a>题目</h2><p><a href="biggest-single-number.pdf" target="_blank">619-biggest-single-number</a></p><h2 id="题解-39"><a href="#题解-39" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> ifnull(<span class="hljs-built_in">max</span>(num),<span class="hljs-keyword">null</span>) num<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> num <span class="hljs-keyword">from</span> mynumbers <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> num <span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(num)<span class="hljs-operator">=</span><span class="hljs-number">1</span>)k<br></code></pre></td></tr></table></figure><h1 id="620-not-boring-movies"><a href="#620-not-boring-movies" class="headerlink" title="620-not-boring-movies"></a>620-not-boring-movies</h1><h2 id="题目-40"><a href="#题目-40" class="headerlink" title="题目"></a>题目</h2><p><a href="not-boring-movies.pdf" target="_blank">620-not-boring-movies</a></p><h2 id="题解-40"><a href="#题解-40" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> cinema<br><span class="hljs-keyword">where</span> description <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;boring&#x27;</span> <br>     <span class="hljs-keyword">and</span> id<span class="hljs-operator">%</span><span class="hljs-number">2</span><span class="hljs-operator">!=</span><span class="hljs-number">0</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> rating <span class="hljs-keyword">desc</span>;<br></code></pre></td></tr></table></figure><h1 id="626-exchange-seats"><a href="#626-exchange-seats" class="headerlink" title="626-exchange-seats"></a>626-exchange-seats</h1><h2 id="题目-41"><a href="#题目-41" class="headerlink" title="题目"></a>题目</h2><p><a href="exchange-seats.pdf" target="_blank">626-exchange-seats</a></p><h2 id="题解-41"><a href="#题解-41" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">case</span> <br>        <span class="hljs-keyword">when</span> <span class="hljs-built_in">mod</span>(id,<span class="hljs-number">2</span>)<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> id<span class="hljs-operator">=</span>s.max <span class="hljs-keyword">then</span> id<br>        <span class="hljs-keyword">when</span> <span class="hljs-built_in">mod</span>(id,<span class="hljs-number">2</span>)<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-keyword">then</span> id<span class="hljs-number">-1</span><br>        <span class="hljs-keyword">else</span> id<span class="hljs-operator">+</span><span class="hljs-number">1</span> <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> id,student<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) max <span class="hljs-keyword">from</span> seat) s,seat<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> id;<br></code></pre></td></tr></table></figure><h1 id="627-swap-salary"><a href="#627-swap-salary" class="headerlink" title="627-swap-salary"></a>627-swap-salary</h1><h2 id="题目-42"><a href="#题目-42" class="headerlink" title="题目"></a>题目</h2><p><a href="swap-salary.pdf" target="_blank">627-swap-salary</a></p><h2 id="题解-42"><a href="#题解-42" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span>  salary<br><span class="hljs-keyword">set</span> sex <span class="hljs-operator">=</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> sex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;m&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;f&#x27;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;m&#x27;</span> <span class="hljs-keyword">end</span>);<br># if(sex<span class="hljs-operator">=</span><span class="hljs-string">&#x27;m&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>);<br></code></pre></td></tr></table></figure><h1 id="1045-customers-who-bought-all-products"><a href="#1045-customers-who-bought-all-products" class="headerlink" title="1045-customers-who-bought-all-products"></a>1045-customers-who-bought-all-products</h1><h2 id="题目-43"><a href="#题目-43" class="headerlink" title="题目"></a>题目</h2><p><a href="customers-who-bought-all-products.pdf" target="_blank">1045-customers-who-bought-all-products</a></p><h2 id="题解-43"><a href="#题解-43" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> customer_id<br><span class="hljs-keyword">from</span> product p<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> customer c <br><span class="hljs-keyword">on</span> p.product_key<span class="hljs-operator">=</span>c.product_key<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> customer_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> c.product_key)<span class="hljs-operator">=</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> product);<br></code></pre></td></tr></table></figure><h1 id="1050-actors-and-directors-who-cooperated-at-least-three-times"><a href="#1050-actors-and-directors-who-cooperated-at-least-three-times" class="headerlink" title="1050-actors-and-directors-who-cooperated-at-least-three-times"></a>1050-actors-and-directors-who-cooperated-at-least-three-times</h1><h2 id="题目-44"><a href="#题目-44" class="headerlink" title="题目"></a>题目</h2><p><a href="actors-and-directors-who-cooperated-at-least-three-times.pdf" target="_blank">1050-actors-and-directors-who-cooperated-at-least-three-times</a></p><h2 id="题解-44"><a href="#题解-44" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span>  actor_id,director_id <span class="hljs-keyword">from</span> ActorDirector<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> actor_id,director_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span>;<br></code></pre></td></tr></table></figure><h1 id="1068-product-sales-analysis-i"><a href="#1068-product-sales-analysis-i" class="headerlink" title="1068-product-sales-analysis-i"></a>1068-product-sales-analysis-i</h1><h2 id="题目-45"><a href="#题目-45" class="headerlink" title="题目"></a>题目</h2><p><a href="product-sales-analysis-i.pdf" target="_blank">1068-product-sales-analysis-i</a></p><h2 id="题解-45"><a href="#题解-45" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> product_name,<span class="hljs-keyword">year</span>,price<br><span class="hljs-keyword">from</span> product<br> <span class="hljs-keyword">join</span> sales<br><span class="hljs-keyword">using</span>(product_id)<br></code></pre></td></tr></table></figure><h1 id="1069-product-sales-analysis-ii"><a href="#1069-product-sales-analysis-ii" class="headerlink" title="1069-product-sales-analysis-ii"></a>1069-product-sales-analysis-ii</h1><h2 id="题目-46"><a href="#题目-46" class="headerlink" title="题目"></a>题目</h2><p><a href="product-sales-analysis-ii.pdf" target="_blank">1069-product-sales-analysis-ii</a></p><h2 id="题解-46"><a href="#题解-46" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> product_id,<span class="hljs-built_in">sum</span>(quantity) total_quantity<br><span class="hljs-keyword">from</span> sales<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> product_id<br></code></pre></td></tr></table></figure><h1 id="1070-product-sales-analysis-iii"><a href="#1070-product-sales-analysis-iii" class="headerlink" title="1070-product-sales-analysis-iii"></a>1070-product-sales-analysis-iii</h1><h2 id="题目-47"><a href="#题目-47" class="headerlink" title="题目"></a>题目</h2><p><a href="product-sales-analysis-iii.pdf" target="_blank">1070-product-sales-analysis-iii</a></p><h2 id="题解-47"><a href="#题解-47" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">with</span> a <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> product_id,<span class="hljs-built_in">min</span>(<span class="hljs-keyword">year</span>) <span class="hljs-keyword">as</span> first_year<br>    <span class="hljs-keyword">from</span> sales<br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> product_id<br>)<br><span class="hljs-keyword">select</span> a.product_id,first_year,quantity,price<br><span class="hljs-keyword">from</span> a<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> sales s <br><span class="hljs-keyword">on</span> a.product_id<span class="hljs-operator">=</span>s.product_id <span class="hljs-keyword">and</span> a.first_year<span class="hljs-operator">=</span>s.year<br><br><br></code></pre></td></tr></table></figure><h1 id="1075-project-employees-i"><a href="#1075-project-employees-i" class="headerlink" title="1075-project-employees-i"></a>1075-project-employees-i</h1><h2 id="题目-48"><a href="#题目-48" class="headerlink" title="题目"></a>题目</h2><p><a href="project-employees-i.pdf" target="_blank">1075-project-employees-i</a></p><h2 id="题解-48"><a href="#题解-48" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> project_id,<br>    round(<span class="hljs-built_in">avg</span>( experience_years) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> project_id),<span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> average_years<br><span class="hljs-keyword">from</span> project p<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> employee e <br><span class="hljs-keyword">using</span>(employee_id)<br><br></code></pre></td></tr></table></figure><h1 id="1076-project-employees-ii"><a href="#1076-project-employees-ii" class="headerlink" title="1076-project-employees-ii"></a>1076-project-employees-ii</h1><h2 id="题目-49"><a href="#题目-49" class="headerlink" title="题目"></a>题目</h2><p><a href="project-employees-ii.pdf" target="_blank">1076-project-employees-ii</a></p><h2 id="题解-49"><a href="#题解-49" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> project_id<br><span class="hljs-keyword">from</span> project<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> project_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> employee_id)<span class="hljs-operator">&gt;=</span><span class="hljs-keyword">all</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> employee_id) <span class="hljs-keyword">from</span> project <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> project_id)<br></code></pre></td></tr></table></figure><h1 id="1077-project-employees-iii"><a href="#1077-project-employees-iii" class="headerlink" title="1077-project-employees-iii"></a>1077-project-employees-iii</h1><h2 id="题目-50"><a href="#题目-50" class="headerlink" title="题目"></a>题目</h2><p><a href="project-employees-iii.pdf" target="_blank">1077-project-employees-iii</a></p><h2 id="题解-50"><a href="#题解-50" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> project_id,employee_id<br><span class="hljs-keyword">from</span> (<br>    <span class="hljs-keyword">select</span> project_id,employee_id,<br>        <span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> project_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> experience_years <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">as</span> r<br>    <span class="hljs-keyword">from</span> project p<br>    <span class="hljs-keyword">join</span> employee e<br>    <span class="hljs-keyword">using</span>(employee_id)<br>    )k<br><span class="hljs-keyword">where</span> r<span class="hljs-operator">=</span><span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><h1 id="1082-sales-analysis-i"><a href="#1082-sales-analysis-i" class="headerlink" title="1082-sales-analysis-i"></a>1082-sales-analysis-i</h1><h2 id="题目-51"><a href="#题目-51" class="headerlink" title="题目"></a>题目</h2><p><a href="sales-analysis-i.pdf" target="_blank">1082-sales-analysis-i</a></p><h2 id="题解-51"><a href="#题解-51" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> seller_id<br><span class="hljs-keyword">from</span> (<br>    <span class="hljs-keyword">select</span> seller_id,<span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">sum</span>(price) <span class="hljs-keyword">desc</span>) r<br>    <span class="hljs-keyword">from</span> sales<br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> seller_id<br>) k<br><span class="hljs-keyword">where</span> r<span class="hljs-operator">=</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="1083-sales-analysis-ii"><a href="#1083-sales-analysis-ii" class="headerlink" title="1083-sales-analysis-ii"></a>1083-sales-analysis-ii</h1><h2 id="题目-52"><a href="#题目-52" class="headerlink" title="题目"></a>题目</h2><p><a href="sales-analysis-ii.pdf" target="_blank">1083-sales-analysis-ii</a></p><h2 id="题解-52"><a href="#题解-52" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> buyer_id<br><span class="hljs-keyword">from</span> product <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> sales<br><span class="hljs-keyword">using</span>(product_id)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> buyer_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(product_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;s8&#x27;</span>)<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">sum</span>(product_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;iphone&#x27;</span>)<span class="hljs-operator">=</span><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h1 id="1084-sales-analysis-iii"><a href="#1084-sales-analysis-iii" class="headerlink" title="1084-sales-analysis-iii"></a>1084-sales-analysis-iii</h1><h2 id="题目-53"><a href="#题目-53" class="headerlink" title="题目"></a>题目</h2><p><a href="sales-analysis-iii.pdf" target="_blank">1084-sales-analysis-iii</a></p><h2 id="题解-53"><a href="#题解-53" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> p.product_id,product_name <br><span class="hljs-keyword">from</span> sales s  <span class="hljs-keyword">join</span>  product p<br># <span class="hljs-keyword">on</span> s.product_id<span class="hljs-operator">=</span>p.product_id<br><span class="hljs-keyword">using</span> (product_id)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> product_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(sale_date<span class="hljs-operator">&lt;</span><span class="hljs-string">&#x27;2019-01-01&#x27;</span>)<span class="hljs-operator">=</span><span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">sum</span>(sale_date<span class="hljs-operator">&gt;</span><span class="hljs-string">&#x27;2019-03-31&#x27;</span>)<span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br><br># <span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(sale_date <span class="hljs-keyword">between</span> <span class="hljs-string">&#x27;2019-01-01&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;2019-03-31&#x27;</span>)<span class="hljs-operator">=</span><span class="hljs-built_in">count</span>(sale_date);<br># #<span class="hljs-built_in">sum</span>(sale_date <span class="hljs-keyword">between</span> <span class="hljs-string">&#x27;2019-01-01&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;2019-03-31&#x27;</span>) 有则返回<span class="hljs-number">1</span>，无则返回<span class="hljs-number">0</span><br># #出售记录次数和在春季出售记录次数相等即可<br></code></pre></td></tr></table></figure><h1 id="1097-game-play-analysis-v"><a href="#1097-game-play-analysis-v" class="headerlink" title="1097-game-play-analysis-v"></a>1097-game-play-analysis-v</h1><h2 id="题目-54"><a href="#题目-54" class="headerlink" title="题目"></a>题目</h2><p><a href="game-play-analysis-v.pdf" target="_blank">1097-game-play-analysis-v</a></p><h2 id="题解-54"><a href="#题解-54" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> install_dt,<br>    <span class="hljs-built_in">count</span>(temp.player_id) installs,<br>    round(<span class="hljs-built_in">count</span>(a.event_date)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(install_dt),<span class="hljs-number">2</span>) Day1_retention<br><span class="hljs-keyword">from</span> (<br>    <span class="hljs-keyword">select</span> <span class="hljs-built_in">min</span>(event_date) install_dt,player_id<br>    <span class="hljs-keyword">from</span> activity<br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> player_id<br>)temp<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> activity a <br><span class="hljs-keyword">on</span> a.player_id<span class="hljs-operator">=</span>temp.player_id <span class="hljs-keyword">and</span> datediff(event_date,install_dt)<span class="hljs-operator">=</span><span class="hljs-number">1</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> install_dt<br></code></pre></td></tr></table></figure><h1 id="1098-unpopular-books"><a href="#1098-unpopular-books" class="headerlink" title="1098-unpopular-books"></a>1098-unpopular-books</h1><h2 id="题目-55"><a href="#题目-55" class="headerlink" title="题目"></a>题目</h2><p><a href="unpopular-books.pdf" target="_blank">1098-unpopular-books</a></p><h2 id="题解-55"><a href="#题解-55" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> b.book_id,name<br><span class="hljs-keyword">from</span> books b<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> orders o <br><span class="hljs-keyword">on</span> b.book_id<span class="hljs-operator">=</span>o.book_id <span class="hljs-keyword">and</span>  dispatch_date<span class="hljs-operator">&gt;=</span><span class="hljs-string">&#x27;2018-06-23&#x27;</span><br><span class="hljs-keyword">where</span> available_from<span class="hljs-operator">&lt;</span><span class="hljs-string">&#x27;2019-05-23&#x27;</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> book_id<br><span class="hljs-keyword">having</span> ifnull(<span class="hljs-built_in">sum</span>(quantity),<span class="hljs-number">0</span>)<span class="hljs-operator">&lt;</span><span class="hljs-number">10</span><br><br></code></pre></td></tr></table></figure><h1 id="1107-new-users-daily-count"><a href="#1107-new-users-daily-count" class="headerlink" title="1107-new-users-daily-count"></a>1107-new-users-daily-count</h1><h2 id="题目-56"><a href="#题目-56" class="headerlink" title="题目"></a>题目</h2><p><a href="new-users-daily-count.pdf" target="_blank">1107-new-users-daily-count</a></p><h2 id="题解-56"><a href="#题解-56" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> login_date,<span class="hljs-built_in">sum</span>(user_count) user_count<br><span class="hljs-keyword">from</span>(<br>    (<span class="hljs-keyword">select</span> <span class="hljs-built_in">min</span>(activity_date) login_date,<span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) user_count<br>    <span class="hljs-keyword">from</span> traffic<br>    <span class="hljs-keyword">where</span> activity<span class="hljs-operator">=</span><span class="hljs-string">&#x27;login&#x27;</span><br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id<br>    <span class="hljs-keyword">having</span> datediff(<span class="hljs-string">&#x27;2019-06-30&#x27;</span>,login_date)<span class="hljs-operator">&lt;=</span><span class="hljs-number">90</span>)<br>    )k<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> login_date<br></code></pre></td></tr></table></figure><h1 id="1112-highest-grade-for-each-student"><a href="#1112-highest-grade-for-each-student" class="headerlink" title="1112-highest-grade-for-each-student"></a>1112-highest-grade-for-each-student</h1><h2 id="题目-57"><a href="#题目-57" class="headerlink" title="题目"></a>题目</h2><p><a href="highest-grade-for-each-student.pdf" target="_blank">1112-highest-grade-for-each-student</a></p><h2 id="题解-57"><a href="#题解-57" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> t <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> <br>    student_id,course_id,<br>    <span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> student_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> grade <span class="hljs-keyword">desc</span>,course_id) r,grade<br>    <span class="hljs-keyword">from</span> enrollments<br>)<br><span class="hljs-keyword">select</span> student_id,course_id,grade<br><span class="hljs-keyword">from</span> t<br><span class="hljs-keyword">where</span> r<span class="hljs-operator">=</span><span class="hljs-number">1</span><br># limit <span class="hljs-number">1</span><br># <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> student_id<br></code></pre></td></tr></table></figure><h1 id="1113-reported-posts"><a href="#1113-reported-posts" class="headerlink" title="1113-reported-posts"></a>1113-reported-posts</h1><h2 id="题目-58"><a href="#题目-58" class="headerlink" title="题目"></a>题目</h2><p><a href="reported-posts.pdf" target="_blank">1113-reported-posts</a></p><h2 id="题解-58"><a href="#题解-58" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> extra report_reason,<span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> post_id) report_count<br><span class="hljs-keyword">from</span> actions<br><span class="hljs-keyword">where</span> action_date<span class="hljs-operator">=</span><span class="hljs-string">&#x27;2019-07-04&#x27;</span> <span class="hljs-keyword">and</span> extra <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> action<span class="hljs-operator">=</span><span class="hljs-string">&#x27;report&#x27;</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> extra<br></code></pre></td></tr></table></figure><h1 id="1126-active-businesses"><a href="#1126-active-businesses" class="headerlink" title="1126-active-businesses"></a>1126-active-businesses</h1><h2 id="题目-59"><a href="#题目-59" class="headerlink" title="题目"></a>题目</h2><p><a href="active-businesses.pdf" target="_blank">1126-active-businesses</a></p><h2 id="题解-59"><a href="#题解-59" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> business_id<br><span class="hljs-keyword">from</span> (<br>    <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<span class="hljs-built_in">avg</span>(occurences) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> event_type) a<br>    <span class="hljs-keyword">from</span> events ) k<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> business_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(occurences<span class="hljs-operator">&gt;</span>a)<span class="hljs-operator">&gt;</span><span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h1 id="1132-reported-posts-ii"><a href="#1132-reported-posts-ii" class="headerlink" title="1132-reported-posts-ii"></a>1132-reported-posts-ii</h1><h2 id="题目-60"><a href="#题目-60" class="headerlink" title="题目"></a>题目</h2><p><a href="reported-posts-ii.pdf" target="_blank">1132-reported-posts-ii</a></p><h2 id="题解-60"><a href="#题解-60" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> temp <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> r.post_id)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> a.post_id)<span class="hljs-operator">*</span><span class="hljs-number">100</span> <span class="hljs-keyword">as</span> <span class="hljs-keyword">percent</span> <br>    <span class="hljs-keyword">from</span> actions a<br>    <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> removals r<br>    <span class="hljs-keyword">using</span>(post_id)<br>    <span class="hljs-keyword">where</span> extra<span class="hljs-operator">=</span><span class="hljs-string">&#x27;spam&#x27;</span><br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> action_date<br>)<br><span class="hljs-keyword">select</span> round(<span class="hljs-built_in">avg</span>(<span class="hljs-keyword">percent</span>),<span class="hljs-number">2</span>) average_daily_percent<br><span class="hljs-keyword">from</span> temp<br><br></code></pre></td></tr></table></figure><h1 id="1141-user-activity-for-the-past-30-days-i"><a href="#1141-user-activity-for-the-past-30-days-i" class="headerlink" title="1141-user-activity-for-the-past-30-days-i"></a>1141-user-activity-for-the-past-30-days-i</h1><h2 id="题目-61"><a href="#题目-61" class="headerlink" title="题目"></a>题目</h2><p><a href="user-activity-for-the-past-30-days-i.pdf" target="_blank">1141-user-activity-for-the-past-30-days-i</a></p><h2 id="题解-61"><a href="#题解-61" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> activity_date <span class="hljs-keyword">day</span>,<span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) active_users<br><span class="hljs-keyword">from</span> <br>    Activity    <br><span class="hljs-keyword">where</span> activity_date <span class="hljs-keyword">between</span> <span class="hljs-string">&#x27;2019-06-28&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;2019-07-27&#x27;</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> activity_date;<br>    <br></code></pre></td></tr></table></figure><h1 id="1142-user-activity-for-the-past-30-days-ii"><a href="#1142-user-activity-for-the-past-30-days-ii" class="headerlink" title="1142-user-activity-for-the-past-30-days-ii"></a>1142-user-activity-for-the-past-30-days-ii</h1><h2 id="题目-62"><a href="#题目-62" class="headerlink" title="题目"></a>题目</h2><p><a href="user-activity-for-the-past-30-days-ii.pdf" target="_blank">1142-user-activity-for-the-past-30-days-ii</a></p><h2 id="题解-62"><a href="#题解-62" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> ifnull(round(cnt<span class="hljs-operator">/</span>people,<span class="hljs-number">2</span>),<span class="hljs-number">0</span>) <span class="hljs-keyword">as</span> average_sessions_per_user<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> user_id,activity_type,<br>    <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> session_id) <span class="hljs-keyword">as</span> cnt,<br>    <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) people<br>    <span class="hljs-keyword">from</span> activity<br>    <span class="hljs-keyword">where</span> datediff(<span class="hljs-string">&#x27;2019-07-27&#x27;</span>,activity_date)<span class="hljs-operator">&lt;</span><span class="hljs-number">30</span>) k<br></code></pre></td></tr></table></figure><h1 id="1148-article-views-i"><a href="#1148-article-views-i" class="headerlink" title="1148-article-views-i"></a>1148-article-views-i</h1><h2 id="题目-63"><a href="#题目-63" class="headerlink" title="题目"></a>题目</h2><p><a href="article-views-i.pdf" target="_blank">1148-article-views-i</a></p><h2 id="题解-63"><a href="#题解-63" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> author_id <span class="hljs-keyword">as</span> id<br><span class="hljs-keyword">from</span> Views<br><span class="hljs-keyword">where</span> author_id<span class="hljs-operator">=</span>viewer_id<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> id;<br></code></pre></td></tr></table></figure><h1 id="1149-article-views-ii"><a href="#1149-article-views-ii" class="headerlink" title="1149-article-views-ii"></a>1149-article-views-ii</h1><h2 id="题目-64"><a href="#题目-64" class="headerlink" title="题目"></a>题目</h2><p><a href="article-views-ii.pdf" target="_blank">1149-article-views-ii</a></p><h2 id="题解-64"><a href="#题解-64" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> viewer_id <span class="hljs-keyword">as</span> id <br><span class="hljs-keyword">from</span> views<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> viewer_id,view_date<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> article_id)<span class="hljs-operator">&gt;=</span><span class="hljs-number">2</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> id<br></code></pre></td></tr></table></figure><h1 id="1158-market-analysis-i"><a href="#1158-market-analysis-i" class="headerlink" title="1158-market-analysis-i"></a>1158-market-analysis-i</h1><h2 id="题目-65"><a href="#题目-65" class="headerlink" title="题目"></a>题目</h2><p><a href="market-analysis-i.pdf" target="_blank">1158-market-analysis-i</a></p><h2 id="题解-65"><a href="#题解-65" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> u.user_id buyer_id,join_date,ifnull(<span class="hljs-built_in">count</span>(order_id),<span class="hljs-number">0</span>) <span class="hljs-keyword">as</span> orders_in_2019<br><span class="hljs-keyword">from</span> users u<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> orders o<br><span class="hljs-keyword">on</span> u.user_id<span class="hljs-operator">=</span>o.buyer_id <span class="hljs-keyword">and</span> <span class="hljs-keyword">year</span>(order_date)<span class="hljs-operator">=</span><span class="hljs-number">2019</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id;<br><br></code></pre></td></tr></table></figure><h1 id="1173-immediate-food-delivery-i"><a href="#1173-immediate-food-delivery-i" class="headerlink" title="1173-immediate-food-delivery-i"></a>1173-immediate-food-delivery-i</h1><h2 id="题目-66"><a href="#题目-66" class="headerlink" title="题目"></a>题目</h2><p><a href="immediate-food-delivery-i.pdf" target="_blank">1173-immediate-food-delivery-i</a></p><h2 id="题解-66"><a href="#题解-66" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> round(<span class="hljs-built_in">sum</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> order_Date<span class="hljs-operator">=</span>customer_pref_delivery_date <span class="hljs-keyword">then</span> <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span> <span class="hljs-keyword">end</span>)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> immediate_percentage<br><span class="hljs-keyword">from</span> delivery<br></code></pre></td></tr></table></figure><h1 id="1179-reformat-department-table"><a href="#1179-reformat-department-table" class="headerlink" title="1179-reformat-department-table"></a>1179-reformat-department-table</h1><h2 id="题目-67"><a href="#题目-67" class="headerlink" title="题目"></a>题目</h2><p><a href="reformat-department-table.pdf" target="_blank">1179-reformat-department-table</a></p><h2 id="题解-67"><a href="#题解-67" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> id,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;Jan&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> Jan_Revenue,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;Feb&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> Feb_Revenue,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;Mar&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> Mar_Revenue,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;Apr&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> Apr_Revenue,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;May&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> May_Revenue,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;Jun&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> Jun_Revenue,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;Jul&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> Jul_Revenue,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;Aug&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> Aug_Revenue,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;Sep&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> Sep_Revenue,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;Oct&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> Oct_Revenue,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;Nov&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> Nov_Revenue,<br><span class="hljs-built_in">sum</span>(if(<span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;Dec&#x27;</span>,revenue,<span class="hljs-keyword">null</span>)) <span class="hljs-keyword">as</span> Dec_Revenue<br><span class="hljs-keyword">from</span> Department<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> id;<br></code></pre></td></tr></table></figure><h1 id="1204-last-person-to-fit-in-the-bus"><a href="#1204-last-person-to-fit-in-the-bus" class="headerlink" title="1204-last-person-to-fit-in-the-bus"></a>1204-last-person-to-fit-in-the-bus</h1><h2 id="题目-68"><a href="#题目-68" class="headerlink" title="题目"></a>题目</h2><p><a href="last-person-to-fit-in-the-bus.pdf" target="_blank">1204-last-person-to-fit-in-the-bus</a></p><h2 id="题解-68"><a href="#题解-68" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> person_name<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> person_name,turn,<span class="hljs-built_in">sum</span>(weight) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> turn) s<br>    <span class="hljs-keyword">from</span> queue) k<br><span class="hljs-keyword">where</span> s<span class="hljs-operator">&lt;=</span><span class="hljs-number">1000</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> turn <span class="hljs-keyword">desc</span><br>limit <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="1211-queries-quality-and-percentage"><a href="#1211-queries-quality-and-percentage" class="headerlink" title="1211-queries-quality-and-percentage"></a>1211-queries-quality-and-percentage</h1><h2 id="题目-69"><a href="#题目-69" class="headerlink" title="题目"></a>题目</h2><p><a href="queries-quality-and-percentage.pdf" target="_blank">1211-queries-quality-and-percentage</a></p><h2 id="题解-69"><a href="#题解-69" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> query_name,<br>    round(<span class="hljs-built_in">avg</span>(rating<span class="hljs-operator">/</span>position),<span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> quality,<br>    round(<span class="hljs-built_in">sum</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> rating<span class="hljs-operator">&lt;</span><span class="hljs-number">3</span> <span class="hljs-keyword">then</span> <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span> <span class="hljs-keyword">end</span>)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> poor_query_percentage<br><span class="hljs-keyword">from</span> queries<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> query_name<br></code></pre></td></tr></table></figure><h1 id="1241-number-of-comments-per-post"><a href="#1241-number-of-comments-per-post" class="headerlink" title="1241-number-of-comments-per-post"></a>1241-number-of-comments-per-post</h1><h2 id="题目-70"><a href="#题目-70" class="headerlink" title="题目"></a>题目</h2><p><a href="number-of-comments-per-post.pdf" target="_blank">1241-number-of-comments-per-post</a></p><h2 id="题解-70"><a href="#题解-70" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> s1.sub_id <span class="hljs-keyword">as</span> post_id,<span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> s2.sub_id) <span class="hljs-keyword">as</span> number_of_comments<br><span class="hljs-keyword">from</span> submissions s1<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> submissions s2<br><span class="hljs-keyword">on</span> s1.sub_id<span class="hljs-operator">=</span>s2.parent_id<br><span class="hljs-keyword">where</span> s1.parent_id <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> post_id<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> post_id<br><br></code></pre></td></tr></table></figure><h1 id="1251-average-selling-price"><a href="#1251-average-selling-price" class="headerlink" title="1251-average-selling-price"></a>1251-average-selling-price</h1><h2 id="题目-71"><a href="#题目-71" class="headerlink" title="题目"></a>题目</h2><p><a href="average-selling-price.pdf" target="_blank">1251-average-selling-price</a></p><h2 id="题解-71"><a href="#题解-71" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> p.product_id,round(<span class="hljs-built_in">sum</span>(price<span class="hljs-operator">*</span>units)<span class="hljs-operator">/</span><span class="hljs-built_in">sum</span>(units),<span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> average_price<br><span class="hljs-keyword">from</span> unitssold u <br><span class="hljs-keyword">join</span> prices p <br><span class="hljs-keyword">on</span> u.product_id<span class="hljs-operator">=</span>p.product_id <span class="hljs-keyword">and</span> purchase_date <span class="hljs-keyword">between</span> start_date <span class="hljs-keyword">and</span> end_date<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> product_id<br></code></pre></td></tr></table></figure><h1 id="1270-all-people-report-to-the-given-manager"><a href="#1270-all-people-report-to-the-given-manager" class="headerlink" title="1270-all-people-report-to-the-given-manager"></a>1270-all-people-report-to-the-given-manager</h1><h2 id="题目-72"><a href="#题目-72" class="headerlink" title="题目"></a>题目</h2><p><a href="all-people-report-to-the-given-manager.pdf" target="_blank">1270-all-people-report-to-the-given-manager</a></p><h2 id="题解-72"><a href="#题解-72" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> e.employee_id<br><span class="hljs-keyword">from</span> employees e,employees e1,employees e2<br><span class="hljs-keyword">where</span> e1.employee_id<span class="hljs-operator">=</span>e.manager_id <span class="hljs-keyword">and</span> e2.employee_id<span class="hljs-operator">=</span>e1.manager_id<br><span class="hljs-keyword">and</span> e.employee_id<span class="hljs-operator">&lt;&gt;</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> e2.manager_id<span class="hljs-operator">=</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="1280-students-and-examinations"><a href="#1280-students-and-examinations" class="headerlink" title="1280-students-and-examinations"></a>1280-students-and-examinations</h1><h2 id="题目-73"><a href="#题目-73" class="headerlink" title="题目"></a>题目</h2><p><a href="students-and-examinations.pdf" target="_blank">1280-students-and-examinations</a></p><h2 id="题解-73"><a href="#题解-73" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> st.student_id,student_name,su.subject_name,ifnull(<span class="hljs-built_in">count</span>(e.student_id),<span class="hljs-number">0</span>) <span class="hljs-keyword">as</span> attended_exams<br><span class="hljs-keyword">from</span> subjects su<br><span class="hljs-keyword">join</span> students st<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> examinations e<br># <span class="hljs-keyword">using</span>(student_id,subject_name)<br><span class="hljs-keyword">on</span> st.student_id<span class="hljs-operator">=</span>e.student_id <span class="hljs-keyword">and</span> e.subject_name<span class="hljs-operator">=</span>su.subject_name<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> st.student_id,su.subject_name<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> st.student_id,su.subject_name<br><br></code></pre></td></tr></table></figure><h1 id="1285-find-the-start-and-end-number-of-continuous-ranges"><a href="#1285-find-the-start-and-end-number-of-continuous-ranges" class="headerlink" title="1285-find-the-start-and-end-number-of-continuous-ranges"></a>1285-find-the-start-and-end-number-of-continuous-ranges</h1><h2 id="题目-74"><a href="#题目-74" class="headerlink" title="题目"></a>题目</h2><p><a href="find-the-start-and-end-number-of-continuous-ranges.pdf" target="_blank">1285-find-the-start-and-end-number-of-continuous-ranges</a></p><h2 id="题解-74"><a href="#题解-74" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">min</span>(log_id) <span class="hljs-keyword">as</span> start_id,<span class="hljs-built_in">max</span>(log_id) <span class="hljs-keyword">as</span> end_id<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> log_id,log_id<span class="hljs-operator">-</span><span class="hljs-built_in">row_number</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> log_id) <span class="hljs-keyword">as</span> k <span class="hljs-keyword">from</span> logs) t<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> k;<br></code></pre></td></tr></table></figure><h1 id="1294-weather-type-in-each-country"><a href="#1294-weather-type-in-each-country" class="headerlink" title="1294-weather-type-in-each-country"></a>1294-weather-type-in-each-country</h1><h2 id="题目-75"><a href="#题目-75" class="headerlink" title="题目"></a>题目</h2><p><a href="weather-type-in-each-country.pdf" target="_blank">1294-weather-type-in-each-country</a></p><h2 id="题解-75"><a href="#题解-75" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> country_name,<br>    <span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> <span class="hljs-built_in">avg</span>(weather_state)<span class="hljs-operator">&lt;=</span><span class="hljs-number">15</span> <span class="hljs-keyword">then</span><span class="hljs-string">&#x27;Cold&#x27;</span><br>        <span class="hljs-keyword">when</span> <span class="hljs-built_in">avg</span>(weather_state)<span class="hljs-operator">&gt;=</span><span class="hljs-number">25</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;Hot&#x27;</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;Warm&#x27;</span> <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> weather_type<br><span class="hljs-keyword">from</span> countries<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> weather<br><span class="hljs-keyword">using</span>(country_id)<br><span class="hljs-keyword">where</span> <span class="hljs-keyword">day</span> <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;2019-11%&#x27;</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> country_name<br></code></pre></td></tr></table></figure><h1 id="1303-find-the-team-size"><a href="#1303-find-the-team-size" class="headerlink" title="1303-find-the-team-size"></a>1303-find-the-team-size</h1><h2 id="题目-76"><a href="#题目-76" class="headerlink" title="题目"></a>题目</h2><p><a href="find-the-team-size.pdf" target="_blank">1303-find-the-team-size</a></p><h2 id="题解-76"><a href="#题解-76" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> employee_id,<span class="hljs-built_in">count</span>(employee_id) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> team_id) <span class="hljs-keyword">as</span> team_size<br><span class="hljs-keyword">from</span> employee<br><br></code></pre></td></tr></table></figure><h1 id="1308-running-total-for-different-genders"><a href="#1308-running-total-for-different-genders" class="headerlink" title="1308-running-total-for-different-genders"></a>1308-running-total-for-different-genders</h1><h2 id="题目-77"><a href="#题目-77" class="headerlink" title="题目"></a>题目</h2><p><a href="running-total-for-different-genders.pdf" target="_blank">1308-running-total-for-different-genders</a></p><h2 id="题解-77"><a href="#题解-77" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> gender,<span class="hljs-keyword">day</span>,<span class="hljs-built_in">sum</span>(score_points) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> gender <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">day</span>) total<br><span class="hljs-keyword">from</span> scores<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> gender,<span class="hljs-keyword">day</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> gender,<span class="hljs-keyword">day</span><br></code></pre></td></tr></table></figure><h1 id="1322-ads-performance"><a href="#1322-ads-performance" class="headerlink" title="1322-ads-performance"></a>1322-ads-performance</h1><h2 id="题目-78"><a href="#题目-78" class="headerlink" title="题目"></a>题目</h2><p><a href="ads-performance.pdf" target="_blank">1322-ads-performance</a></p><h2 id="题解-78"><a href="#题解-78" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> ad_id,<br>    ifnull(round(<span class="hljs-built_in">sum</span>(action<span class="hljs-operator">=</span><span class="hljs-string">&#x27;clicked&#x27;</span>)<span class="hljs-operator">/</span><span class="hljs-built_in">sum</span>(action<span class="hljs-operator">&lt;&gt;</span><span class="hljs-string">&#x27;ignored&#x27;</span>)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>),<span class="hljs-number">0.00</span>) <span class="hljs-keyword">as</span> ctr<br><span class="hljs-keyword">from</span> ads<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> ad_id<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> ctr <span class="hljs-keyword">desc</span>,ad_id <span class="hljs-keyword">asc</span><br></code></pre></td></tr></table></figure><h1 id="1327-list-the-products-ordered-in-a-period"><a href="#1327-list-the-products-ordered-in-a-period" class="headerlink" title="1327-list-the-products-ordered-in-a-period"></a>1327-list-the-products-ordered-in-a-period</h1><h2 id="题目-79"><a href="#题目-79" class="headerlink" title="题目"></a>题目</h2><p><a href="list-the-products-ordered-in-a-period.pdf" target="_blank">1327-list-the-products-ordered-in-a-period</a></p><h2 id="题解-79"><a href="#题解-79" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> product_name,<span class="hljs-built_in">sum</span>(unit) unit<br><span class="hljs-keyword">from</span> orders<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> products<br><span class="hljs-keyword">using</span>(product_id)<br><span class="hljs-keyword">where</span> order_date <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;2020-02%&#x27;</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> product_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(unit)<span class="hljs-operator">&gt;=</span><span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><h1 id="1350-students-with-invalid-departments"><a href="#1350-students-with-invalid-departments" class="headerlink" title="1350-students-with-invalid-departments"></a>1350-students-with-invalid-departments</h1><h2 id="题目-80"><a href="#题目-80" class="headerlink" title="题目"></a>题目</h2><p><a href="students-with-invalid-departments.pdf" target="_blank">1350-students-with-invalid-departments</a></p><h2 id="题解-80"><a href="#题解-80" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> s.id,s.name<br><span class="hljs-keyword">from</span> students s <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> departments d <br><span class="hljs-keyword">on</span> d.id<span class="hljs-operator">=</span>s.department_id<br><span class="hljs-keyword">where</span> d.name <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span><br></code></pre></td></tr></table></figure><h1 id="1355-activity-participants"><a href="#1355-activity-participants" class="headerlink" title="1355-activity-participants"></a>1355-activity-participants</h1><h2 id="题目-81"><a href="#题目-81" class="headerlink" title="题目"></a>题目</h2><p><a href="activity-participants.pdf" target="_blank">1355-activity-participants</a></p><h2 id="题解-81"><a href="#题解-81" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> activity<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> activity,<span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">count</span>(id)<span class="hljs-keyword">desc</span>) r1,<br>        <span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">count</span>(id) <span class="hljs-keyword">asc</span>) r2<br>    <span class="hljs-keyword">from</span> friends<br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> activity<br>    )f <br># <span class="hljs-keyword">join</span> activities a <br># <span class="hljs-keyword">on</span> f.activity<span class="hljs-operator">=</span>a.name<br><span class="hljs-keyword">where</span> r1<span class="hljs-operator">&lt;&gt;</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> r2<span class="hljs-operator">&lt;&gt;</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="1364-number-of-trusted-contacts-of-a-customer"><a href="#1364-number-of-trusted-contacts-of-a-customer" class="headerlink" title="1364-number-of-trusted-contacts-of-a-customer"></a>1364-number-of-trusted-contacts-of-a-customer</h1><h2 id="题目-82"><a href="#题目-82" class="headerlink" title="题目"></a>题目</h2><p><a href="number-of-trusted-contacts-of-a-customer.pdf" target="_blank">1364-number-of-trusted-contacts-of-a-customer</a></p><h2 id="题解-82"><a href="#题解-82" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> t <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> customer_id,customer_name,<br>    ifnull(<span class="hljs-built_in">count</span>(contact_name) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> customer_id),<span class="hljs-number">0</span>) <span class="hljs-keyword">as</span> contacts_cnt,<br>    <span class="hljs-built_in">sum</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> contact_email <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> email <span class="hljs-keyword">from</span> customers) <span class="hljs-keyword">then</span> <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span> <span class="hljs-keyword">end</span>) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> con.user_id) <span class="hljs-keyword">as</span> trusted_contacts_cnt<br>    <span class="hljs-keyword">from</span> customers cus <br>    <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> contacts con <br>    <span class="hljs-keyword">on</span> cus.customer_id<span class="hljs-operator">=</span>con.user_id<br>)<br><span class="hljs-keyword">select</span> invoice_id,customer_name,<br>    price,contacts_cnt,trusted_contacts_cnt<br><span class="hljs-keyword">from</span> invoices i <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> t <br><span class="hljs-keyword">on</span> t.customer_id<span class="hljs-operator">=</span>i.user_id<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> invoice_id,price<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> invoice_id<br><br></code></pre></td></tr></table></figure><h1 id="1378-replace-employee-id-with-the-unique-identifier"><a href="#1378-replace-employee-id-with-the-unique-identifier" class="headerlink" title="1378-replace-employee-id-with-the-unique-identifier"></a>1378-replace-employee-id-with-the-unique-identifier</h1><h2 id="题目-83"><a href="#题目-83" class="headerlink" title="题目"></a>题目</h2><p><a href="replace-employee-id-with-the-unique-identifier.pdf" target="_blank">1378-replace-employee-id-with-the-unique-identifier</a></p><h2 id="题解-83"><a href="#题解-83" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> unique_id,name<br><span class="hljs-keyword">from</span> employees e <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> employeeuni eu <br># <span class="hljs-keyword">on</span> eu.id<span class="hljs-operator">=</span>e.id<br><span class="hljs-keyword">using</span>(id)<br><br></code></pre></td></tr></table></figure><h1 id="1393-capital-gainloss"><a href="#1393-capital-gainloss" class="headerlink" title="1393-capital-gainloss"></a>1393-capital-gainloss</h1><h2 id="题目-84"><a href="#题目-84" class="headerlink" title="题目"></a>题目</h2><p><a href="capital-gainloss.pdf" target="_blank">1393-capital-gainloss</a></p><h2 id="题解-84"><a href="#题解-84" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> stock_name,<br>    <span class="hljs-built_in">sum</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> operation<span class="hljs-operator">=</span><span class="hljs-string">&#x27;buy&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-operator">-</span>price<br>        <span class="hljs-keyword">when</span> operation<span class="hljs-operator">=</span><span class="hljs-string">&#x27;sell&#x27;</span> <span class="hljs-keyword">then</span> price <span class="hljs-keyword">else</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">end</span>) <span class="hljs-keyword">as</span> capital_gain_loss<br><span class="hljs-keyword">from</span> stocks<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> stock_name;<br></code></pre></td></tr></table></figure><h1 id="1398-customers-who-bought-products-a-and-b-but-not-c"><a href="#1398-customers-who-bought-products-a-and-b-but-not-c" class="headerlink" title="1398-customers-who-bought-products-a-and-b-but-not-c"></a>1398-customers-who-bought-products-a-and-b-but-not-c</h1><h2 id="题目-85"><a href="#题目-85" class="headerlink" title="题目"></a>题目</h2><p><a href="customers-who-bought-products-a-and-b-but-not-c.pdf" target="_blank">1398-customers-who-bought-products-a-and-b-but-not-c</a></p><h2 id="题解-85"><a href="#题解-85" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> c.customer_id,customer_name<br><span class="hljs-keyword">from</span> customers c <br><span class="hljs-keyword">join</span> orders o <br><span class="hljs-keyword">using</span>(customer_id)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> o.customer_id <br><span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(product_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;A&#x27;</span>)<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">sum</span>(product_name<span class="hljs-operator">=</span>&quot;B&quot;)<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">sum</span>(product_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;C&#x27;</span>)<span class="hljs-operator">=</span><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h1 id="1407-top-travellers"><a href="#1407-top-travellers" class="headerlink" title="1407-top-travellers"></a>1407-top-travellers</h1><h2 id="题目-86"><a href="#题目-86" class="headerlink" title="题目"></a>题目</h2><p><a href="top-travellers.pdf" target="_blank">1407-top-travellers</a></p><h2 id="题解-86"><a href="#题解-86" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><span class="hljs-keyword">select</span> name,<br>    if(<span class="hljs-built_in">sum</span>(distance) <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span>,<span class="hljs-number">0</span>,<span class="hljs-built_in">sum</span>(distance)) <span class="hljs-keyword">as</span> travelled_distance<br><span class="hljs-keyword">from</span> Users <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> Rides <br><span class="hljs-keyword">on</span> Rides.user_id<span class="hljs-operator">=</span>Users.id<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> travelled_distance <span class="hljs-keyword">desc</span>,name <span class="hljs-keyword">asc</span>;<br></code></pre></td></tr></table></figure><h1 id="1421-npv-queries"><a href="#1421-npv-queries" class="headerlink" title="1421-npv-queries"></a>1421-npv-queries</h1><h2 id="题目-87"><a href="#题目-87" class="headerlink" title="题目"></a>题目</h2><p><a href="npv-queries.pdf" target="_blank">1421-npv-queries</a></p><h2 id="题解-87"><a href="#题解-87" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> q.id,q.year,ifnull(npv,<span class="hljs-number">0</span>) npv<br><span class="hljs-keyword">from</span> queries q<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> npv n<br><span class="hljs-keyword">on</span> q.id<span class="hljs-operator">=</span>n.id <span class="hljs-keyword">and</span> q.year<span class="hljs-operator">=</span>n.year<br><br></code></pre></td></tr></table></figure><h1 id="1440-evaluate-boolean-expression"><a href="#1440-evaluate-boolean-expression" class="headerlink" title="1440-evaluate-boolean-expression"></a>1440-evaluate-boolean-expression</h1><h2 id="题目-88"><a href="#题目-88" class="headerlink" title="题目"></a>题目</h2><p><a href="evaluate-boolean-expression.pdf" target="_blank">1440-evaluate-boolean-expression</a></p><h2 id="题解-88"><a href="#题解-88" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">select</span> left_operand,operator,right_operand,<br>    <span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> operator<span class="hljs-operator">=</span><span class="hljs-string">&#x27;=&#x27;</span> <span class="hljs-keyword">and</span> a1.value<span class="hljs-operator">=</span>a2.value <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;true&#x27;</span><br>    <span class="hljs-keyword">when</span> operator<span class="hljs-operator">=</span><span class="hljs-string">&#x27;&gt;&#x27;</span> <span class="hljs-keyword">and</span> a1.value<span class="hljs-operator">&gt;</span>a2.value <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;true&#x27;</span> <br>    <span class="hljs-keyword">when</span> operator<span class="hljs-operator">=</span><span class="hljs-string">&#x27;&lt;&#x27;</span> <span class="hljs-keyword">and</span> a1.value<span class="hljs-operator">&lt;</span>a2.value <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;true&#x27;</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;false&#x27;</span> <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> <span class="hljs-keyword">value</span><br><span class="hljs-keyword">from</span> expressions e <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> variables a1<br><span class="hljs-keyword">on</span> a1.name<span class="hljs-operator">=</span>left_operand<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> variables a2<br><span class="hljs-keyword">on</span> a2.name<span class="hljs-operator">=</span>right_operand<br></code></pre></td></tr></table></figure><h1 id="1445-apples-oranges"><a href="#1445-apples-oranges" class="headerlink" title="1445-apples-oranges"></a>1445-apples-oranges</h1><h2 id="题目-89"><a href="#题目-89" class="headerlink" title="题目"></a>题目</h2><p><a href="apples-oranges.pdf" target="_blank">1445-apples-oranges</a></p><h2 id="题解-89"><a href="#题解-89" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><span class="hljs-keyword">select</span> sale_date,<br>    <span class="hljs-built_in">sum</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> fruit<span class="hljs-operator">=</span><span class="hljs-string">&#x27;apples&#x27;</span> <span class="hljs-keyword">then</span> sold_num <span class="hljs-keyword">else</span> <span class="hljs-number">0</span> <span class="hljs-keyword">end</span>)<span class="hljs-operator">-</span><span class="hljs-built_in">sum</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> fruit<span class="hljs-operator">=</span><span class="hljs-string">&#x27;oranges&#x27;</span> <span class="hljs-keyword">then</span> sold_num <span class="hljs-keyword">else</span> <span class="hljs-number">0</span> <span class="hljs-keyword">end</span>) <span class="hljs-keyword">as</span> diff <br><span class="hljs-keyword">from</span> sales   <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> sale_date<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> sale_date<br></code></pre></td></tr></table></figure><h1 id="1454-active-users"><a href="#1454-active-users" class="headerlink" title="1454-active-users"></a>1454-active-users</h1><h2 id="题目-90"><a href="#题目-90" class="headerlink" title="题目"></a>题目</h2><p><a href="active-users.pdf" target="_blank">1454-active-users</a></p><h2 id="题解-90"><a href="#题解-90" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> a.id,a.name<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> id <br>    <span class="hljs-keyword">from</span>(<br>        <span class="hljs-keyword">select</span> id,login_date,<br>        <span class="hljs-built_in">dense_rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> login_date) dr     <br>        <span class="hljs-keyword">from</span> logins l<br>    ) t<br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> t.id,date_add(login_date,<span class="hljs-type">interval</span><span class="hljs-operator">-</span>dr <span class="hljs-keyword">day</span>)<br>    <span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> login_date)<span class="hljs-operator">&gt;=</span><span class="hljs-number">5</span><br>) k<br><br><span class="hljs-keyword">join</span> accounts <span class="hljs-keyword">as</span> a<br><span class="hljs-keyword">using</span>(id)<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> id<br><br><br></code></pre></td></tr></table></figure><h1 id="1468-calculate-salaries"><a href="#1468-calculate-salaries" class="headerlink" title="1468-calculate-salaries"></a>1468-calculate-salaries</h1><h2 id="题目-91"><a href="#题目-91" class="headerlink" title="题目"></a>题目</h2><p><a href="calculate-salaries.pdf" target="_blank">1468-calculate-salaries</a></p><h2 id="题解-91"><a href="#题解-91" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> company_id,employee_id,employee_name,<br>    <span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> <span class="hljs-built_in">max</span>(salary) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> company_id)<span class="hljs-operator">&lt;</span><span class="hljs-number">1000</span> <span class="hljs-keyword">then</span> salary<br>        <span class="hljs-keyword">when</span> <span class="hljs-built_in">max</span>(salary) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> company_id) <span class="hljs-keyword">between</span> <span class="hljs-number">1000</span> <span class="hljs-keyword">and</span> <span class="hljs-number">10000</span> <span class="hljs-keyword">then</span> round(salary<span class="hljs-operator">*</span>(<span class="hljs-number">1</span><span class="hljs-number">-0.24</span>),<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">when</span> <span class="hljs-built_in">max</span>(salary) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> company_id)<span class="hljs-operator">&gt;</span><span class="hljs-number">10000</span> <br>        <span class="hljs-keyword">then</span> round(salary<span class="hljs-operator">*</span>(<span class="hljs-number">1</span><span class="hljs-number">-0.49</span>),<span class="hljs-number">0</span>) <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> salary<br><span class="hljs-keyword">from</span> salaries<br></code></pre></td></tr></table></figure><h1 id="1484-group-sold-products-by-the-date"><a href="#1484-group-sold-products-by-the-date" class="headerlink" title="1484-group-sold-products-by-the-date"></a>1484-group-sold-products-by-the-date</h1><h2 id="题目-92"><a href="#题目-92" class="headerlink" title="题目"></a>题目</h2><p><a href="group-sold-products-by-the-date.pdf" target="_blank">1484-group-sold-products-by-the-date</a></p><h2 id="题解-92"><a href="#题解-92" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><span class="hljs-keyword">select</span> sell_date,<br>    <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> product) <span class="hljs-keyword">as</span> num_sold,<br>    group_concat(<span class="hljs-keyword">distinct</span> product <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> product separator <span class="hljs-string">&#x27;,&#x27;</span>) <span class="hljs-keyword">as</span>  products<br><span class="hljs-keyword">from</span> Activities<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> sell_date<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> sell_date;<br></code></pre></td></tr></table></figure><h1 id="1495-friendly-movies-streamed-last-month"><a href="#1495-friendly-movies-streamed-last-month" class="headerlink" title="1495-friendly-movies-streamed-last-month"></a>1495-friendly-movies-streamed-last-month</h1><h2 id="题目-93"><a href="#题目-93" class="headerlink" title="题目"></a>题目</h2><p><a href="friendly-movies-streamed-last-month.pdf" target="_blank">1495-friendly-movies-streamed-last-month</a></p><h2 id="题解-93"><a href="#题解-93" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> title<br><span class="hljs-keyword">from</span> content<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> tvprogram<br><span class="hljs-keyword">using</span>(content_id)<br><span class="hljs-keyword">where</span> program_date <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;2020-06%&#x27;</span><br><span class="hljs-keyword">and</span> content_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;movies&#x27;</span><br><span class="hljs-keyword">and</span> kids_content<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Y&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="1501-countries-you-can-safely-invest-in"><a href="#1501-countries-you-can-safely-invest-in" class="headerlink" title="1501-countries-you-can-safely-invest-in"></a>1501-countries-you-can-safely-invest-in</h1><h2 id="题目-94"><a href="#题目-94" class="headerlink" title="题目"></a>题目</h2><p><a href="countries-you-can-safely-invest-in.pdf" target="_blank">1501-countries-you-can-safely-invest-in</a></p><h2 id="题解-94"><a href="#题解-94" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> temp <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> id,p.phone_number,country_code,c.name country,duration<br>    <span class="hljs-keyword">from</span> person p<br>    <span class="hljs-keyword">join</span> country c,calls<br>    <span class="hljs-keyword">where</span> <span class="hljs-keyword">left</span>(p.phone_number,<span class="hljs-number">3</span>)<span class="hljs-operator">=</span>c.country_code <span class="hljs-keyword">and</span> (calls.caller_id<span class="hljs-operator">=</span>p.id <span class="hljs-keyword">or</span> p.id<span class="hljs-operator">=</span>calls.callee_id)<br>)<br><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> country<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> country,<span class="hljs-built_in">avg</span>(duration) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> country) c_avg,<br>        <span class="hljs-built_in">avg</span>(duration) <span class="hljs-keyword">over</span>() all_avg<br>        <span class="hljs-keyword">from</span> temp) k<br>    <br><span class="hljs-keyword">where</span> c_avg<span class="hljs-operator">&gt;</span>all_avg;<br></code></pre></td></tr></table></figure><h1 id="1511-customer-order-frequency"><a href="#1511-customer-order-frequency" class="headerlink" title="1511-customer-order-frequency"></a>1511-customer-order-frequency</h1><h2 id="题目-95"><a href="#题目-95" class="headerlink" title="题目"></a>题目</h2><p><a href="customer-order-frequency.pdf" target="_blank">1511-customer-order-frequency</a></p><h2 id="题解-95"><a href="#题解-95" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> temp <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> p.product_id,price,quantity,customer_id,order_date<br>    <span class="hljs-keyword">from</span> orders<br>    <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> product p<br>    <span class="hljs-keyword">using</span>(product_id)<br>    <span class="hljs-keyword">where</span> order_date <span class="hljs-keyword">between</span> <span class="hljs-string">&#x27;2020-06-01&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;2020-07-31&#x27;</span><br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> customer_id,<span class="hljs-keyword">month</span>(order_date)<br>    <span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(price<span class="hljs-operator">*</span>quantity)<span class="hljs-operator">&gt;=</span><span class="hljs-number">100</span><br><br>)<br><span class="hljs-keyword">select</span> customer_id,name<br><span class="hljs-keyword">from</span> temp<br><span class="hljs-keyword">join</span> customers<br><span class="hljs-keyword">using</span>(customer_id)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> customer_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">=</span><span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h1 id="1527-patients-with-a-condition"><a href="#1527-patients-with-a-condition" class="headerlink" title="1527-patients-with-a-condition"></a>1527-patients-with-a-condition</h1><h2 id="题目-96"><a href="#题目-96" class="headerlink" title="题目"></a>题目</h2><p><a href="patients-with-a-condition.pdf" target="_blank">1527-patients-with-a-condition</a></p><h2 id="题解-96"><a href="#题解-96" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><br><span class="hljs-keyword">select</span> patient_id,patient_name,conditions <br><span class="hljs-keyword">from</span> Patients<br><span class="hljs-keyword">where</span> conditions <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;% DIAB1%&#x27;</span> <span class="hljs-keyword">or</span> conditions <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;DIAB1%&#x27;</span> ;<br></code></pre></td></tr></table></figure><h1 id="1549-the-most-recent-orders-for-each-product"><a href="#1549-the-most-recent-orders-for-each-product" class="headerlink" title="1549-the-most-recent-orders-for-each-product"></a>1549-the-most-recent-orders-for-each-product</h1><h2 id="题目-97"><a href="#题目-97" class="headerlink" title="题目"></a>题目</h2><p><a href="the-most-recent-orders-for-each-product.pdf" target="_blank">1549-the-most-recent-orders-for-each-product</a></p><h2 id="题解-97"><a href="#题解-97" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> t <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> order_id,product_id,order_date,<br>        <span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> product_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> order_date <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">as</span> r<br>    <span class="hljs-keyword">from</span> orders<br>)<br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> product_name,t.product_id,order_id,order_date<br><span class="hljs-keyword">from</span> t<br><span class="hljs-keyword">join</span> products<br><span class="hljs-keyword">using</span>(product_id)<br><span class="hljs-keyword">where</span> r<span class="hljs-operator">=</span><span class="hljs-number">1</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> product_name,product_id,order_id<br></code></pre></td></tr></table></figure><h1 id="1565-unique-orders-and-customers-per-month"><a href="#1565-unique-orders-and-customers-per-month" class="headerlink" title="1565-unique-orders-and-customers-per-month"></a>1565-unique-orders-and-customers-per-month</h1><h2 id="题目-98"><a href="#题目-98" class="headerlink" title="题目"></a>题目</h2><p><a href="unique-orders-and-customers-per-month.pdf" target="_blank">1565-unique-orders-and-customers-per-month</a></p><h2 id="题解-98"><a href="#题解-98" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">left</span>(order_date,<span class="hljs-number">7</span>) <span class="hljs-keyword">month</span>,<br>    <span class="hljs-built_in">count</span>(invoice) order_count,<br>    <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> customer_id) customer_count<br><span class="hljs-keyword">from</span> orders<br><span class="hljs-keyword">where</span> invoice<span class="hljs-operator">&gt;</span><span class="hljs-number">20</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">month</span><br><br></code></pre></td></tr></table></figure><h1 id="1571-warehouse-manager"><a href="#1571-warehouse-manager" class="headerlink" title="1571-warehouse-manager"></a>1571-warehouse-manager</h1><h2 id="题目-99"><a href="#题目-99" class="headerlink" title="题目"></a>题目</h2><p><a href="warehouse-manager.pdf" target="_blank">1571-warehouse-manager</a></p><h2 id="题解-99"><a href="#题解-99" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> w.name warehouse_name,<span class="hljs-built_in">sum</span>(Width<span class="hljs-operator">*</span>Length<span class="hljs-operator">*</span>Height<span class="hljs-operator">*</span>units) volume<br><span class="hljs-keyword">from</span> Warehouse w<br><span class="hljs-keyword">join</span> Products p <br><span class="hljs-keyword">using</span>(Product_id)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> w.name<br></code></pre></td></tr></table></figure><h1 id="1581-customer-who-visited-but-did-not-make-any-transactions"><a href="#1581-customer-who-visited-but-did-not-make-any-transactions" class="headerlink" title="1581-customer-who-visited-but-did-not-make-any-transactions"></a>1581-customer-who-visited-but-did-not-make-any-transactions</h1><h2 id="题目-100"><a href="#题目-100" class="headerlink" title="题目"></a>题目</h2><p><a href="customer-who-visited-but-did-not-make-any-transactions.pdf" target="_blank">1581-customer-who-visited-but-did-not-make-any-transactions</a></p><h2 id="题解-100"><a href="#题解-100" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><br><span class="hljs-keyword">select</span> customer_id, <br>if(transaction_id <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span>,<span class="hljs-built_in">count</span>(visit_id),<span class="hljs-number">0</span>) <span class="hljs-keyword">as</span> count_no_trans <br><span class="hljs-keyword">from</span> visits <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> Transactions<br><span class="hljs-keyword">using</span>(visit_id)<br><span class="hljs-keyword">where</span> transaction_id <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> customer_id;<br><br><br></code></pre></td></tr></table></figure><h1 id="1587-bank-account-summary-ii"><a href="#1587-bank-account-summary-ii" class="headerlink" title="1587-bank-account-summary-ii"></a>1587-bank-account-summary-ii</h1><h2 id="题目-101"><a href="#题目-101" class="headerlink" title="题目"></a>题目</h2><p><a href="bank-account-summary-ii.pdf" target="_blank">1587-bank-account-summary-ii</a></p><h2 id="题解-101"><a href="#题解-101" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><br><span class="hljs-keyword">select</span> NAME,<span class="hljs-built_in">sum</span>(amount) <span class="hljs-keyword">as</span> BALANCE<br><span class="hljs-keyword">from</span> Transactions <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> users<br><span class="hljs-keyword">using</span>(account)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> (account)<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(amount)<span class="hljs-operator">&gt;</span><span class="hljs-number">10000</span>;<br></code></pre></td></tr></table></figure><h1 id="1596-the-most-frequently-ordered-products-for-each-customer"><a href="#1596-the-most-frequently-ordered-products-for-each-customer" class="headerlink" title="1596-the-most-frequently-ordered-products-for-each-customer"></a>1596-the-most-frequently-ordered-products-for-each-customer</h1><h2 id="题目-102"><a href="#题目-102" class="headerlink" title="题目"></a>题目</h2><p><a href="the-most-frequently-ordered-products-for-each-customer.pdf" target="_blank">1596-the-most-frequently-ordered-products-for-each-customer</a></p><h2 id="题解-102"><a href="#题解-102" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> ot <span class="hljs-keyword">as</span>(<br>        <span class="hljs-keyword">select</span> product_id,customer_id,<br>        <span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> customer_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">count</span>(product_id)<span class="hljs-keyword">desc</span>)r<br>        <span class="hljs-keyword">from</span> orders<br>        <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> customer_id,product_id<br>)<br><span class="hljs-keyword">select</span> ot.customer_id,ot.product_id,p.product_name<br><span class="hljs-keyword">from</span> ot<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> products p<br><span class="hljs-keyword">on</span> p.product_id<span class="hljs-operator">=</span>ot.product_id<br><span class="hljs-keyword">where</span> r<span class="hljs-operator">=</span><span class="hljs-number">1</span><br><br></code></pre></td></tr></table></figure><h1 id="1607-sellers-with-no-sales"><a href="#1607-sellers-with-no-sales" class="headerlink" title="1607-sellers-with-no-sales"></a>1607-sellers-with-no-sales</h1><h2 id="题目-103"><a href="#题目-103" class="headerlink" title="题目"></a>题目</h2><p><a href="sellers-with-no-sales.pdf" target="_blank">1607-sellers-with-no-sales</a></p><h2 id="题解-103"><a href="#题解-103" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> seller_name<br><span class="hljs-keyword">from</span> seller s<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> orders o <br><span class="hljs-keyword">on</span> s.seller_id<span class="hljs-operator">=</span>o.seller_id <span class="hljs-keyword">and</span> <span class="hljs-keyword">year</span>(sale_date)<span class="hljs-operator">=</span><span class="hljs-string">&#x27;2020&#x27;</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> s.seller_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(order_id)<span class="hljs-operator">=</span><span class="hljs-number">0</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> seller_name<br><br></code></pre></td></tr></table></figure><h1 id="1613-find-the-missing-ids"><a href="#1613-find-the-missing-ids" class="headerlink" title="1613-find-the-missing-ids"></a>1613-find-the-missing-ids</h1><h2 id="题目-104"><a href="#题目-104" class="headerlink" title="题目"></a>题目</h2><p><a href="find-the-missing-ids.pdf" target="_blank">1613-find-the-missing-ids</a></p><h2 id="题解-104"><a href="#题解-104" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> <span class="hljs-keyword">recursive</span> t <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">as</span> n<br>    <span class="hljs-keyword">union</span> <span class="hljs-keyword">all</span><br>    <span class="hljs-keyword">select</span> n<span class="hljs-operator">+</span><span class="hljs-number">1</span> <span class="hljs-keyword">from</span> t <span class="hljs-keyword">where</span> n<span class="hljs-operator">&lt;</span><span class="hljs-number">100</span><br>)<br><span class="hljs-keyword">select</span> n ids<br><span class="hljs-keyword">from</span> t<br><span class="hljs-keyword">where</span> n <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span>(<span class="hljs-keyword">select</span> customer_id <span class="hljs-keyword">from</span> customers)<br><span class="hljs-keyword">and</span> n<span class="hljs-operator">&lt;=</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">max</span>(customer_id) <span class="hljs-keyword">from</span> customers)<br></code></pre></td></tr></table></figure><h1 id="1623-all-valid-triplets-that-can-represent-a-country"><a href="#1623-all-valid-triplets-that-can-represent-a-country" class="headerlink" title="1623-all-valid-triplets-that-can-represent-a-country"></a>1623-all-valid-triplets-that-can-represent-a-country</h1><h2 id="题目-105"><a href="#题目-105" class="headerlink" title="题目"></a>题目</h2><p><a href="all-valid-triplets-that-can-represent-a-country.pdf" target="_blank">1623-all-valid-triplets-that-can-represent-a-country</a></p><h2 id="题解-105"><a href="#题解-105" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> s1.student_name <span class="hljs-keyword">as</span> member_A,<br>    s2.student_name <span class="hljs-keyword">as</span> member_B,<br>    s3.student_name <span class="hljs-keyword">as</span> member_C<br><span class="hljs-keyword">from</span> SchoolA s1,<br>    SchoolB s2,<br>    SchoolC s3<br><span class="hljs-keyword">where</span> s1.student_name<span class="hljs-operator">!=</span>s2.student_name <br>    <span class="hljs-keyword">and</span> s1.student_name<span class="hljs-operator">!=</span>s3.student_name <br>    <span class="hljs-keyword">and</span> s2.student_name<span class="hljs-operator">!=</span>s3.student_name<br>    <span class="hljs-keyword">and</span> s1.student_id<span class="hljs-operator">!=</span>s2.student_id <br>    <span class="hljs-keyword">and</span> s1.student_id<span class="hljs-operator">!=</span>s3.student_id <br>    <span class="hljs-keyword">and</span> s2.student_id<span class="hljs-operator">!=</span>s3.student_id<br></code></pre></td></tr></table></figure><h1 id="1633-percentage-of-users-attended-a-contest"><a href="#1633-percentage-of-users-attended-a-contest" class="headerlink" title="1633-percentage-of-users-attended-a-contest"></a>1633-percentage-of-users-attended-a-contest</h1><h2 id="题目-106"><a href="#题目-106" class="headerlink" title="题目"></a>题目</h2><p><a href="percentage-of-users-attended-a-contest.pdf" target="_blank">1633-percentage-of-users-attended-a-contest</a></p><h2 id="题解-106"><a href="#题解-106" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> contest_id,<br>    round(<span class="hljs-built_in">count</span>(user_id)<span class="hljs-operator">/</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id) <span class="hljs-keyword">from</span> users)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">as</span> percentage<br><span class="hljs-keyword">from</span> register<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> contest_id<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> percentage <span class="hljs-keyword">desc</span>,contest_id <span class="hljs-keyword">asc</span><br></code></pre></td></tr></table></figure><h1 id="1661-average-time-of-process-per-machine"><a href="#1661-average-time-of-process-per-machine" class="headerlink" title="1661-average-time-of-process-per-machine"></a>1661-average-time-of-process-per-machine</h1><h2 id="题目-107"><a href="#题目-107" class="headerlink" title="题目"></a>题目</h2><p><a href="average-time-of-process-per-machine.pdf" target="_blank">1661-average-time-of-process-per-machine</a></p><h2 id="题解-107"><a href="#题解-107" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> machine_id,<br>    round(<span class="hljs-built_in">avg</span>(if(activity_type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;start&#x27;</span>,<span class="hljs-operator">-</span><span class="hljs-type">timestamp</span>,<span class="hljs-type">timestamp</span>))<span class="hljs-operator">*</span><span class="hljs-number">2</span>,<span class="hljs-number">3</span>) <span class="hljs-keyword">as</span> processing_time<br><span class="hljs-keyword">from</span> activity<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> machine_id<br></code></pre></td></tr></table></figure><h1 id="1667-fix-names-in-a-table"><a href="#1667-fix-names-in-a-table" class="headerlink" title="1667-fix-names-in-a-table"></a>1667-fix-names-in-a-table</h1><h2 id="题目-108"><a href="#题目-108" class="headerlink" title="题目"></a>题目</h2><p><a href="fix-names-in-a-table.pdf" target="_blank">1667-fix-names-in-a-table</a></p><h2 id="题解-108"><a href="#题解-108" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> user_id, concat(<br>                        <span class="hljs-built_in">upper</span>(<span class="hljs-keyword">left</span>(name,<span class="hljs-number">1</span>)),<br>                        <span class="hljs-built_in">lower</span>(<span class="hljs-keyword">right</span>(name,length(name)<span class="hljs-number">-1</span>))<br>                        )  <span class="hljs-keyword">as</span> name<br><span class="hljs-keyword">from</span> users<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> user_id;<br></code></pre></td></tr></table></figure><h1 id="1683-invalid-tweets"><a href="#1683-invalid-tweets" class="headerlink" title="1683-invalid-tweets"></a>1683-invalid-tweets</h1><h2 id="题目-109"><a href="#题目-109" class="headerlink" title="题目"></a>题目</h2><p><a href="invalid-tweets.pdf" target="_blank">1683-invalid-tweets</a></p><h2 id="题解-109"><a href="#题解-109" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> tweet_id<br><span class="hljs-keyword">from</span> tweets<br><span class="hljs-keyword">where</span> length(content)<span class="hljs-operator">&gt;</span><span class="hljs-number">15</span><br></code></pre></td></tr></table></figure><h1 id="1693-daily-leads-and-partners"><a href="#1693-daily-leads-and-partners" class="headerlink" title="1693-daily-leads-and-partners"></a>1693-daily-leads-and-partners</h1><h2 id="题目-110"><a href="#题目-110" class="headerlink" title="题目"></a>题目</h2><p><a href="daily-leads-and-partners.pdf" target="_blank">1693-daily-leads-and-partners</a></p><h2 id="题解-110"><a href="#题解-110" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span>  date_id,make_name,<br>        <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> lead_id) <span class="hljs-keyword">as</span> unique_leads,<br>        <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> partner_id) <span class="hljs-keyword">as</span> unique_partners<br><span class="hljs-keyword">from</span> DailySales<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span>  date_id,make_name;<br><br></code></pre></td></tr></table></figure><h1 id="1699-number-of-calls-between-two-persons"><a href="#1699-number-of-calls-between-two-persons" class="headerlink" title="1699-number-of-calls-between-two-persons"></a>1699-number-of-calls-between-two-persons</h1><h2 id="题目-111"><a href="#题目-111" class="headerlink" title="题目"></a>题目</h2><p><a href="number-of-calls-between-two-persons.pdf" target="_blank">1699-number-of-calls-between-two-persons</a></p><h2 id="题解-111"><a href="#题解-111" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> from_id<span class="hljs-operator">&lt;</span>to_id <span class="hljs-keyword">then</span> from_id <span class="hljs-keyword">else</span> to_id <span class="hljs-keyword">end</span> person1,<br>    <span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> from_id<span class="hljs-operator">&gt;</span>to_id <span class="hljs-keyword">then</span> from_id <span class="hljs-keyword">else</span> to_id <span class="hljs-keyword">end</span> person2,<br>    <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) call_count,<br>    <span class="hljs-built_in">sum</span>(duration) total_duration<br><span class="hljs-keyword">from</span> calls<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> person1,person2<br><br></code></pre></td></tr></table></figure><h1 id="1709-biggest-window-between-visits"><a href="#1709-biggest-window-between-visits" class="headerlink" title="1709-biggest-window-between-visits"></a>1709-biggest-window-between-visits</h1><h2 id="题目-112"><a href="#题目-112" class="headerlink" title="题目"></a>题目</h2><p><a href="biggest-window-between-visits.pdf" target="_blank">1709-biggest-window-between-visits</a></p><h2 id="题解-112"><a href="#题解-112" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> t <span class="hljs-keyword">as</span> (<br>    <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<span class="hljs-built_in">lead</span>(visit_date,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;2021-01-01&#x27;</span>) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> user_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> visit_date) lead_date<br>    <span class="hljs-keyword">from</span> uservisits<br>)<br><span class="hljs-keyword">select</span> user_id,<span class="hljs-built_in">max</span>(datediff(lead_date,visit_date)) biggest_window<br><span class="hljs-keyword">from</span> t<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id<br></code></pre></td></tr></table></figure><h1 id="1715-count-apples-and-oranges"><a href="#1715-count-apples-and-oranges" class="headerlink" title="1715-count-apples-and-oranges"></a>1715-count-apples-and-oranges</h1><h2 id="题目-113"><a href="#题目-113" class="headerlink" title="题目"></a>题目</h2><p><a href="count-apples-and-oranges.pdf" target="_blank">1715-count-apples-and-oranges</a></p><h2 id="题解-113"><a href="#题解-113" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(b.apple_count)<span class="hljs-operator">+</span>ifnull(<span class="hljs-built_in">sum</span>(c.apple_count),<span class="hljs-number">0</span>) apple_count,<br>        <span class="hljs-built_in">sum</span>(b.orange_count)<span class="hljs-operator">+</span>ifnull(<span class="hljs-built_in">sum</span>(c.orange_count),<span class="hljs-number">0</span>) orange_count<br><span class="hljs-keyword">from</span> boxes b <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> chests c <br><span class="hljs-keyword">using</span>(chest_id)<br><br></code></pre></td></tr></table></figure><h1 id="1729-find-followers-count"><a href="#1729-find-followers-count" class="headerlink" title="1729-find-followers-count"></a>1729-find-followers-count</h1><h2 id="题目-114"><a href="#题目-114" class="headerlink" title="题目"></a>题目</h2><p><a href="find-followers-count.pdf" target="_blank">1729-find-followers-count</a></p><h2 id="题解-114"><a href="#题解-114" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><br><br><span class="hljs-keyword">select</span> user_id, <span class="hljs-built_in">count</span>(follower_id) <span class="hljs-keyword">as</span> followers_count<br><span class="hljs-keyword">from</span> Followers<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> user_id ;<br><br></code></pre></td></tr></table></figure><h1 id="1731-the-number-of-employees-which-report-to-each-employee"><a href="#1731-the-number-of-employees-which-report-to-each-employee" class="headerlink" title="1731-the-number-of-employees-which-report-to-each-employee"></a>1731-the-number-of-employees-which-report-to-each-employee</h1><h2 id="题目-115"><a href="#题目-115" class="headerlink" title="题目"></a>题目</h2><p><a href="the-number-of-employees-which-report-to-each-employee.pdf" target="_blank">1731-the-number-of-employees-which-report-to-each-employee</a></p><h2 id="题解-115"><a href="#题解-115" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> e1.reports_to <span class="hljs-keyword">as</span> employee_id,<br>    e2.name,<br>    <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> e1.employee_id) <span class="hljs-keyword">as</span> reports_count,<br>    round(<span class="hljs-built_in">avg</span>(e1.age),<span class="hljs-number">0</span>) <span class="hljs-keyword">as</span> average_age<br><span class="hljs-keyword">from</span> employees e1,employees e2<br><span class="hljs-keyword">where</span> e1.reports_to<span class="hljs-operator">=</span>e2.employee_id <span class="hljs-keyword">and</span> e1.reports_to <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> e1.reports_to<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> e1.reports_to<br></code></pre></td></tr></table></figure><h1 id="1741-find-total-time-spent-by-each-employee"><a href="#1741-find-total-time-spent-by-each-employee" class="headerlink" title="1741-find-total-time-spent-by-each-employee"></a>1741-find-total-time-spent-by-each-employee</h1><h2 id="题目-116"><a href="#题目-116" class="headerlink" title="题目"></a>题目</h2><p><a href="find-total-time-spent-by-each-employee.pdf" target="_blank">1741-find-total-time-spent-by-each-employee</a></p><h2 id="题解-116"><a href="#题解-116" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><span class="hljs-keyword">select</span> event_day <span class="hljs-keyword">as</span> <span class="hljs-keyword">day</span>,emp_id,<br>    <span class="hljs-built_in">sum</span>(<span class="hljs-operator">-</span>(in_time<span class="hljs-operator">-</span>out_time)) <span class="hljs-keyword">as</span> total_time<br><span class="hljs-keyword">from</span> Employees<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> emp_id,event_day;<br><br><br></code></pre></td></tr></table></figure><h1 id="1757-recyclable-and-low-fat-products"><a href="#1757-recyclable-and-low-fat-products" class="headerlink" title="1757-recyclable-and-low-fat-products"></a>1757-recyclable-and-low-fat-products</h1><h2 id="题目-117"><a href="#题目-117" class="headerlink" title="题目"></a>题目</h2><p><a href="recyclable-and-low-fat-products.pdf" target="_blank">1757-recyclable-and-low-fat-products</a></p><h2 id="题解-117"><a href="#题解-117" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><span class="hljs-keyword">select</span> product_id <span class="hljs-keyword">from</span> products<br><span class="hljs-keyword">where</span> low_fats<span class="hljs-operator">=</span><span class="hljs-string">&#x27;y&#x27;</span> <span class="hljs-keyword">and</span> recyclable<span class="hljs-operator">=</span><span class="hljs-string">&#x27;y&#x27;</span>;<br></code></pre></td></tr></table></figure><h1 id="1777-products-price-for-each-store"><a href="#1777-products-price-for-each-store" class="headerlink" title="1777-products-price-for-each-store"></a>1777-products-price-for-each-store</h1><h2 id="题目-118"><a href="#题目-118" class="headerlink" title="题目"></a>题目</h2><p><a href="products-price-for-each-store.pdf" target="_blank">1777-products-price-for-each-store</a></p><h2 id="题解-118"><a href="#题解-118" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span>  product_id,<br>    <span class="hljs-built_in">max</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> store<span class="hljs-operator">=</span><span class="hljs-string">&#x27;store1&#x27;</span> <span class="hljs-keyword">then</span> price <span class="hljs-keyword">else</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">end</span>) <span class="hljs-keyword">as</span> store1,<br>    <span class="hljs-built_in">max</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> store<span class="hljs-operator">=</span><span class="hljs-string">&#x27;store2&#x27;</span> <span class="hljs-keyword">then</span> price <span class="hljs-keyword">else</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">end</span>) <span class="hljs-keyword">as</span> store2,<br>    <span class="hljs-built_in">max</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> store<span class="hljs-operator">=</span><span class="hljs-string">&#x27;store3&#x27;</span> <span class="hljs-keyword">then</span> price <span class="hljs-keyword">else</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">end</span>) <span class="hljs-keyword">as</span> store3<br><span class="hljs-keyword">from</span> products <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> product_id<br></code></pre></td></tr></table></figure><h1 id="1783-grand-slam-titles"><a href="#1783-grand-slam-titles" class="headerlink" title="1783-grand-slam-titles"></a>1783-grand-slam-titles</h1><h2 id="题目-119"><a href="#题目-119" class="headerlink" title="题目"></a>题目</h2><p><a href="grand-slam-titles.pdf" target="_blank">1783-grand-slam-titles</a></p><h2 id="题解-119"><a href="#题解-119" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> player_id,player_name,<br>    <span class="hljs-built_in">sum</span>(wimbledon<span class="hljs-operator">=</span>player_id)<span class="hljs-operator">+</span><span class="hljs-built_in">sum</span>(Fr_open<span class="hljs-operator">=</span>player_id)<span class="hljs-operator">+</span><span class="hljs-built_in">sum</span>(US_open<span class="hljs-operator">=</span>player_id)<span class="hljs-operator">+</span><span class="hljs-built_in">sum</span>(Au_open<span class="hljs-operator">=</span>player_id) <span class="hljs-keyword">as</span> grand_slams_count<br><span class="hljs-keyword">from</span> players,championships<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> player_id,player_name<br><span class="hljs-keyword">having</span> grand_slams_count<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h1 id="1789-primary-department-for-each-employee"><a href="#1789-primary-department-for-each-employee" class="headerlink" title="1789-primary-department-for-each-employee"></a>1789-primary-department-for-each-employee</h1><h2 id="题目-120"><a href="#题目-120" class="headerlink" title="题目"></a>题目</h2><p><a href="primary-department-for-each-employee.pdf" target="_blank">1789-primary-department-for-each-employee</a></p><h2 id="题解-120"><a href="#题解-120" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> employee_id,department_id<br><span class="hljs-keyword">from</span> employee<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> employee_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">=</span><span class="hljs-number">1</span><br><span class="hljs-keyword">union</span><br><span class="hljs-keyword">select</span> employee_id,department_id<br><span class="hljs-keyword">from</span> employee<br><span class="hljs-keyword">where</span> primary_flag<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Y&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="1795-rearrange-products-table"><a href="#1795-rearrange-products-table" class="headerlink" title="1795-rearrange-products-table"></a>1795-rearrange-products-table</h1><h2 id="题目-121"><a href="#题目-121" class="headerlink" title="题目"></a>题目</h2><p><a href="rearrange-products-table.pdf" target="_blank">1795-rearrange-products-table</a></p><h2 id="题解-121"><a href="#题解-121" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><br><br><span class="hljs-keyword">select</span> product_id,<span class="hljs-string">&#x27;store1&#x27;</span>  store,store1 <span class="hljs-keyword">as</span> price  <span class="hljs-keyword">from</span> Products <span class="hljs-keyword">where</span> store1 <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span><br><span class="hljs-keyword">union</span><br><span class="hljs-keyword">select</span> product_id,<span class="hljs-string">&#x27;store2&#x27;</span>  store,store2 <span class="hljs-keyword">as</span> price  <span class="hljs-keyword">from</span> Products <span class="hljs-keyword">where</span> store2 <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span><br><span class="hljs-keyword">union</span><br><span class="hljs-keyword">select</span> product_id,<span class="hljs-string">&#x27;store3&#x27;</span>  store,store3 <span class="hljs-keyword">as</span> price  <span class="hljs-keyword">from</span> Products <span class="hljs-keyword">where</span> store3 <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>;<br></code></pre></td></tr></table></figure><h1 id="1809-ad-free-sessions"><a href="#1809-ad-free-sessions" class="headerlink" title="1809-ad-free-sessions"></a>1809-ad-free-sessions</h1><h2 id="题目-122"><a href="#题目-122" class="headerlink" title="题目"></a>题目</h2><p><a href="ad-free-sessions.pdf" target="_blank">1809-ad-free-sessions</a></p><h2 id="题解-122"><a href="#题解-122" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> session_id<br><span class="hljs-keyword">from</span> playback p <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> ads a <br><span class="hljs-keyword">on</span> a.customer_id<span class="hljs-operator">=</span>p.customer_id <span class="hljs-keyword">and</span> <span class="hljs-type">timestamp</span> <span class="hljs-keyword">between</span> start_time <span class="hljs-keyword">and</span> end_time<br><span class="hljs-keyword">where</span> ad_id <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span><br></code></pre></td></tr></table></figure><h1 id="1811-find-interview-candidates"><a href="#1811-find-interview-candidates" class="headerlink" title="1811-find-interview-candidates"></a>1811-find-interview-candidates</h1><h2 id="题目-123"><a href="#题目-123" class="headerlink" title="题目"></a>题目</h2><p><a href="find-interview-candidates.pdf" target="_blank">1811-find-interview-candidates</a></p><h2 id="题解-123"><a href="#题解-123" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> ktable <span class="hljs-keyword">as</span>(<br><span class="hljs-keyword">select</span> contest_id,gold_medal user_id <span class="hljs-keyword">from</span> contests<br><span class="hljs-keyword">union</span> <span class="hljs-keyword">all</span><br><span class="hljs-keyword">select</span> contest_id,silver_medal user_id <span class="hljs-keyword">from</span> contests<br><span class="hljs-keyword">union</span> <span class="hljs-keyword">all</span><br><span class="hljs-keyword">select</span> contest_id,bronze_medal user_id <span class="hljs-keyword">from</span> contests<br>)<br><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> name,mail <span class="hljs-keyword">from</span> users<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> ktable<br><span class="hljs-keyword">using</span>(user_id)<br><span class="hljs-keyword">where</span> user_id <span class="hljs-keyword">in</span> (<br>            <span class="hljs-keyword">select</span> gold_medal <br>            <span class="hljs-keyword">from</span> contests <br>            <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> gold_medal <br>            <span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(gold_medal)<span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span><br>            <span class="hljs-keyword">union</span><br>            <span class="hljs-keyword">select</span> t2.user_id <br>            <span class="hljs-keyword">from</span>(<br>                <span class="hljs-keyword">select</span> user_id,<br>                    contest_id<span class="hljs-operator">-</span><span class="hljs-built_in">row_number</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> user_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> contest_id <span class="hljs-keyword">asc</span>) <span class="hljs-keyword">as</span> tag<br>                <span class="hljs-keyword">from</span> ktable )t2<br>            <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id,tag<br>            <span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)<span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span>               <br>    )<br></code></pre></td></tr></table></figure><h1 id="1821-find-customers-with-positive-revenue-this-year"><a href="#1821-find-customers-with-positive-revenue-this-year" class="headerlink" title="1821-find-customers-with-positive-revenue-this-year"></a>1821-find-customers-with-positive-revenue-this-year</h1><h2 id="题目-124"><a href="#题目-124" class="headerlink" title="题目"></a>题目</h2><p><a href="find-customers-with-positive-revenue-this-year.pdf" target="_blank">1821-find-customers-with-positive-revenue-this-year</a></p><h2 id="题解-124"><a href="#题解-124" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> customer_id<br><span class="hljs-keyword">from</span> customers<br><span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;2021&#x27;</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> customer_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(revenue)<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h1 id="1831-maximum-transaction-each-day"><a href="#1831-maximum-transaction-each-day" class="headerlink" title="1831-maximum-transaction-each-day"></a>1831-maximum-transaction-each-day</h1><h2 id="题目-125"><a href="#题目-125" class="headerlink" title="题目"></a>题目</h2><p><a href="maximum-transaction-each-day.pdf" target="_blank">1831-maximum-transaction-each-day</a></p><h2 id="题解-125"><a href="#题解-125" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> transaction_id<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> transaction_id,<span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> date_format(<span class="hljs-keyword">day</span>,<span class="hljs-string">&#x27;%y-%m-%d&#x27;</span>) <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> amount <span class="hljs-keyword">desc</span>)rr<br>    <span class="hljs-keyword">from</span> transactions )k<br><span class="hljs-keyword">where</span> rr<span class="hljs-operator">=</span><span class="hljs-number">1</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> transaction_id<br></code></pre></td></tr></table></figure><h1 id="1853-convert-date-format"><a href="#1853-convert-date-format" class="headerlink" title="1853-convert-date-format"></a>1853-convert-date-format</h1><h2 id="题目-126"><a href="#题目-126" class="headerlink" title="题目"></a>题目</h2><p><a href="convert-date-format.pdf" target="_blank">1853-convert-date-format</a></p><h2 id="题解-126"><a href="#题解-126" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> date_format(<span class="hljs-keyword">day</span>,<span class="hljs-string">&#x27;%W, %M %e, %Y&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-keyword">day</span> <span class="hljs-keyword">from</span> Days<br></code></pre></td></tr></table></figure><h1 id="1867-orders-with-maximum-quantity-above-average"><a href="#1867-orders-with-maximum-quantity-above-average" class="headerlink" title="1867-orders-with-maximum-quantity-above-average"></a>1867-orders-with-maximum-quantity-above-average</h1><h2 id="题目-127"><a href="#题目-127" class="headerlink" title="题目"></a>题目</h2><p><a href="orders-with-maximum-quantity-above-average.pdf" target="_blank">1867-orders-with-maximum-quantity-above-average</a></p><h2 id="题解-127"><a href="#题解-127" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> order_id<br><span class="hljs-keyword">from</span> ordersdetails<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> order_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">max</span>(quantity)<span class="hljs-operator">&gt;</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(quantity) a <span class="hljs-keyword">from</span> ordersdetails <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> order_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> a <span class="hljs-keyword">desc</span> limit <span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h1 id="1873-calculate-special-bonus"><a href="#1873-calculate-special-bonus" class="headerlink" title="1873-calculate-special-bonus"></a>1873-calculate-special-bonus</h1><h2 id="题目-128"><a href="#题目-128" class="headerlink" title="题目"></a>题目</h2><p><a href="calculate-special-bonus.pdf" target="_blank">1873-calculate-special-bonus</a></p><h2 id="题解-128"><a href="#题解-128" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> employee_id,<br>    if (employee_id<span class="hljs-operator">%</span><span class="hljs-number">2</span><span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> name <span class="hljs-keyword">not</span> <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;M%&#x27;</span>,salary,<span class="hljs-number">0</span> ) <span class="hljs-keyword">as</span> bonus<br><span class="hljs-keyword">from</span> Employees<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> employee_id;<br></code></pre></td></tr></table></figure><h1 id="1890-the-latest-login-in-2020"><a href="#1890-the-latest-login-in-2020" class="headerlink" title="1890-the-latest-login-in-2020"></a>1890-the-latest-login-in-2020</h1><h2 id="题目-129"><a href="#题目-129" class="headerlink" title="题目"></a>题目</h2><p><a href="the-latest-login-in-2020.pdf" target="_blank">1890-the-latest-login-in-2020</a></p><h2 id="题解-129"><a href="#题解-129" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> user_id,<span class="hljs-built_in">max</span>(time_stamp) <span class="hljs-keyword">as</span> last_stamp <br><span class="hljs-keyword">from</span> Logins<br><span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span>(time_stamp)<span class="hljs-operator">=</span><span class="hljs-number">2020</span> <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id;<br></code></pre></td></tr></table></figure><h1 id="1934-confirmation-rate"><a href="#1934-confirmation-rate" class="headerlink" title="1934-confirmation-rate"></a>1934-confirmation-rate</h1><h2 id="题目-130"><a href="#题目-130" class="headerlink" title="题目"></a>题目</h2><p><a href="confirmation-rate.pdf" target="_blank">1934-confirmation-rate</a></p><h2 id="题解-130"><a href="#题解-130" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> user_id,round(ifnull(<span class="hljs-built_in">sum</span>(action<span class="hljs-operator">=</span><span class="hljs-string">&#x27;confirmed&#x27;</span>)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>),<span class="hljs-number">0</span>),<span class="hljs-number">2</span>) confirmation_rate<br><span class="hljs-keyword">from</span> signups s<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> confirmations c <br><span class="hljs-keyword">using</span>(user_id)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id<br></code></pre></td></tr></table></figure><h1 id="1939-users-that-actively-request-confirmation-messages"><a href="#1939-users-that-actively-request-confirmation-messages" class="headerlink" title="1939-users-that-actively-request-confirmation-messages"></a>1939-users-that-actively-request-confirmation-messages</h1><h2 id="题目-131"><a href="#题目-131" class="headerlink" title="题目"></a>题目</h2><p><a href="users-that-actively-request-confirmation-messages.pdf" target="_blank">1939-users-that-actively-request-confirmation-messages</a></p><h2 id="题解-131"><a href="#题解-131" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> user_id<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <br>        user_id,<br>        <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> user_id  <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> time_stamp <span class="hljs-keyword">range</span> <span class="hljs-keyword">between</span> <span class="hljs-type">interval</span> <span class="hljs-number">24</span> <span class="hljs-keyword">hour</span> preceding <span class="hljs-keyword">and</span> <span class="hljs-keyword">current</span> <span class="hljs-type">row</span>) <span class="hljs-keyword">as</span> cnt <br>    <span class="hljs-keyword">from</span> confirmations) k<br><span class="hljs-keyword">where</span> cnt<span class="hljs-operator">&gt;=</span><span class="hljs-number">2</span><br><br></code></pre></td></tr></table></figure><h1 id="1965-employees-with-missing-information"><a href="#1965-employees-with-missing-information" class="headerlink" title="1965-employees-with-missing-information"></a>1965-employees-with-missing-information</h1><h2 id="题目-132"><a href="#题目-132" class="headerlink" title="题目"></a>题目</h2><p><a href="employees-with-missing-information.pdf" target="_blank">1965-employees-with-missing-information</a></p><h2 id="题解-132"><a href="#题解-132" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> Employees.employee_id <br><span class="hljs-keyword">from</span> Employees <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> Salaries<br><span class="hljs-keyword">using</span>(employee_id)<br><span class="hljs-keyword">where</span> salary <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span><br><span class="hljs-keyword">union</span> <br><span class="hljs-keyword">select</span> Salaries.employee_id <br><span class="hljs-keyword">from</span> Salaries <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> Employees  <br><span class="hljs-keyword">using</span>(employee_id)<br><span class="hljs-keyword">where</span> name <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span> <br><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> employee_id;<br></code></pre></td></tr></table></figure><h1 id="1978-employees-whose-manager-left-the-company"><a href="#1978-employees-whose-manager-left-the-company" class="headerlink" title="1978-employees-whose-manager-left-the-company"></a>1978-employees-whose-manager-left-the-company</h1><h2 id="题目-133"><a href="#题目-133" class="headerlink" title="题目"></a>题目</h2><p><a href="employees-whose-manager-left-the-company.pdf" target="_blank">1978-employees-whose-manager-left-the-company</a></p><h2 id="题解-133"><a href="#题解-133" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> employee_id<br><span class="hljs-keyword">from</span> employees<br><span class="hljs-keyword">where</span> salary<span class="hljs-operator">&lt;</span><span class="hljs-number">30000</span> <span class="hljs-keyword">and</span> manager_id <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> employee_id <span class="hljs-keyword">from</span> employees)<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> employee_id<br></code></pre></td></tr></table></figure><h1 id="2020-number-of-accounts-that-did-not-stream"><a href="#2020-number-of-accounts-that-did-not-stream" class="headerlink" title="2020-number-of-accounts-that-did-not-stream"></a>2020-number-of-accounts-that-did-not-stream</h1><h2 id="题目-134"><a href="#题目-134" class="headerlink" title="题目"></a>题目</h2><p><a href="number-of-accounts-that-did-not-stream.pdf" target="_blank">2020-number-of-accounts-that-did-not-stream</a></p><h2 id="题解-134"><a href="#题解-134" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) accounts_count<br><span class="hljs-keyword">from</span> subscriptions a <br><span class="hljs-keyword">join</span> streams b <br><span class="hljs-keyword">using</span>(account_id)<br><span class="hljs-keyword">where</span> start_date<span class="hljs-operator">&lt;=</span><span class="hljs-string">&#x27;2021-12-31&#x27;</span> <span class="hljs-keyword">and</span> end_date<span class="hljs-operator">&gt;=</span><span class="hljs-string">&#x27;2021-01-01&#x27;</span><br><span class="hljs-keyword">and</span> account_id  <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> account_id <span class="hljs-keyword">from</span> streams <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span>(stream_date )<span class="hljs-operator">!=</span><span class="hljs-number">2021</span>)<br><br></code></pre></td></tr></table></figure><h1 id="2026-low-quality-problems"><a href="#2026-low-quality-problems" class="headerlink" title="2026-low-quality-problems"></a>2026-low-quality-problems</h1><h2 id="题目-135"><a href="#题目-135" class="headerlink" title="题目"></a>题目</h2><p><a href="low-quality-problems.pdf" target="_blank">2026-low-quality-problems</a></p><h2 id="题解-135"><a href="#题解-135" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> problem_id<br><span class="hljs-keyword">from</span> problems<br><br><span class="hljs-keyword">where</span> (likes<span class="hljs-operator">/</span>(likes<span class="hljs-operator">+</span>dislikes))<span class="hljs-operator">&lt;</span><span class="hljs-number">0.6</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> problem_id<br></code></pre></td></tr></table></figure><h1 id="2041-accepted-candidates-from-the-interviews"><a href="#2041-accepted-candidates-from-the-interviews" class="headerlink" title="2041-accepted-candidates-from-the-interviews"></a>2041-accepted-candidates-from-the-interviews</h1><h2 id="题目-136"><a href="#题目-136" class="headerlink" title="题目"></a>题目</h2><p><a href="accepted-candidates-from-the-interviews.pdf" target="_blank">2041-accepted-candidates-from-the-interviews</a></p><h2 id="题解-136"><a href="#题解-136" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> candidate_id<br><span class="hljs-keyword">from</span> candidates<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> rounds<br><span class="hljs-keyword">using</span>(interview_id)<br><span class="hljs-keyword">where</span> years_of_exp<span class="hljs-operator">&gt;=</span><span class="hljs-number">2</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> interview_id<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(score)<span class="hljs-operator">&gt;</span><span class="hljs-number">15</span><br></code></pre></td></tr></table></figure><h1 id="2051-the-category-of-each-member-in-the-store"><a href="#2051-the-category-of-each-member-in-the-store" class="headerlink" title="2051-the-category-of-each-member-in-the-store"></a>2051-the-category-of-each-member-in-the-store</h1><h2 id="题目-137"><a href="#题目-137" class="headerlink" title="题目"></a>题目</h2><p><a href="the-category-of-each-member-in-the-store.pdf" target="_blank">2051-the-category-of-each-member-in-the-store</a></p><h2 id="题解-137"><a href="#题解-137" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> a <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> member_id,<span class="hljs-built_in">count</span>(visit_id) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> member_id) <span class="hljs-keyword">as</span> visit_cnt,<span class="hljs-built_in">sum</span>(charged_amount <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> member_id) purchase_cnt<br>    <span class="hljs-keyword">from</span> visits<br>    <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> purchases<br>    <span class="hljs-keyword">using</span>(visit_id)<br>)<br><span class="hljs-keyword">select</span> member_id,name,<br>    <span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> <span class="hljs-number">100</span><span class="hljs-operator">*</span>purchase_cnt<span class="hljs-operator">/</span>visit_cnt<span class="hljs-operator">&gt;=</span><span class="hljs-number">80</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;Diamond&#x27;</span><br>        <span class="hljs-keyword">when</span> <span class="hljs-number">100</span><span class="hljs-operator">*</span>purchase_cnt<span class="hljs-operator">/</span>visit_cnt<span class="hljs-operator">&gt;=</span><span class="hljs-number">50</span> <span class="hljs-keyword">and</span> <span class="hljs-number">100</span><span class="hljs-operator">*</span>purchase_cnt<span class="hljs-operator">/</span>visit_cnt<span class="hljs-operator">&lt;</span><span class="hljs-number">80</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;Gold&#x27;</span><br>        <span class="hljs-keyword">when</span> <span class="hljs-number">100</span><span class="hljs-operator">*</span>purchase_cnt<span class="hljs-operator">/</span>visit_cnt<span class="hljs-operator">&lt;</span><span class="hljs-number">50</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;Silver&#x27;</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;Bronze&#x27;</span> <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> category<br><span class="hljs-keyword">from</span> members m<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> a  <span class="hljs-keyword">using</span>(member_id)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> member_id<br><br></code></pre></td></tr></table></figure><h1 id="2066-account-balance"><a href="#2066-account-balance" class="headerlink" title="2066-account-balance"></a>2066-account-balance</h1><h2 id="题目-138"><a href="#题目-138" class="headerlink" title="题目"></a>题目</h2><p><a href="account-balance.pdf" target="_blank">2066-account-balance</a></p><h2 id="题解-138"><a href="#题解-138" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> account_id,<span class="hljs-keyword">day</span>,<span class="hljs-built_in">sum</span>(<span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;deposit&#x27;</span> <span class="hljs-keyword">then</span> amount <span class="hljs-keyword">else</span> <span class="hljs-operator">-</span>amount <span class="hljs-keyword">end</span>) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> account_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">day</span>) balance<br><span class="hljs-keyword">from</span> transactions<br></code></pre></td></tr></table></figure><h1 id="2072-the-winner-university"><a href="#2072-the-winner-university" class="headerlink" title="2072-the-winner-university"></a>2072-the-winner-university</h1><h2 id="题目-139"><a href="#题目-139" class="headerlink" title="题目"></a>题目</h2><p><a href="the-winner-university.pdf" target="_blank">2072-the-winner-university</a></p><h2 id="题解-139"><a href="#题解-139" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> k <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(n.score<span class="hljs-operator">&gt;=</span><span class="hljs-number">90</span>) <span class="hljs-keyword">as</span> ng,<span class="hljs-built_in">sum</span>(c.score<span class="hljs-operator">&gt;=</span><span class="hljs-number">90</span>) <span class="hljs-keyword">as</span> cg<br>    <span class="hljs-keyword">from</span> newyork n,california c<br>)<br><span class="hljs-keyword">select</span>  <span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> ng<span class="hljs-operator">&gt;</span>cg <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;New York University&#x27;</span><br>        <span class="hljs-keyword">when</span> ng<span class="hljs-operator">&lt;</span>cg <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;California University&#x27;</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;No Winner&#x27;</span> <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> winner<br>    <span class="hljs-keyword">from</span> k<br></code></pre></td></tr></table></figure><h1 id="2082-the-number-of-rich-customers"><a href="#2082-the-number-of-rich-customers" class="headerlink" title="2082-the-number-of-rich-customers"></a>2082-the-number-of-rich-customers</h1><h2 id="题目-140"><a href="#题目-140" class="headerlink" title="题目"></a>题目</h2><p><a href="the-number-of-rich-customers.pdf" target="_blank">2082-the-number-of-rich-customers</a></p><h2 id="题解-140"><a href="#题解-140" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> customer_id) rich_count<br><span class="hljs-keyword">from</span> store<br><span class="hljs-keyword">where</span> amount<span class="hljs-operator">&gt;</span><span class="hljs-number">500</span><br></code></pre></td></tr></table></figure><h1 id="2084-drop-type-1-orders-for-customers-with-type-0-orders"><a href="#2084-drop-type-1-orders-for-customers-with-type-0-orders" class="headerlink" title="2084-drop-type-1-orders-for-customers-with-type-0-orders"></a>2084-drop-type-1-orders-for-customers-with-type-0-orders</h1><h2 id="题目-141"><a href="#题目-141" class="headerlink" title="题目"></a>题目</h2><p><a href="drop-type-1-orders-for-customers-with-type-0-orders.pdf" target="_blank">2084-drop-type-1-orders-for-customers-with-type-0-orders</a></p><h2 id="题解-141"><a href="#题解-141" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> orders <span class="hljs-keyword">where</span> order_type<span class="hljs-operator">=</span><span class="hljs-number">0</span><br><span class="hljs-keyword">union</span> <span class="hljs-keyword">all</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <br><span class="hljs-keyword">from</span> orders <br><span class="hljs-keyword">where</span> customer_id <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span>(<span class="hljs-keyword">select</span> customer_id <br>                <span class="hljs-keyword">from</span> orders <span class="hljs-keyword">where</span> order_type<span class="hljs-operator">=</span><span class="hljs-number">0</span><br>                )<br><br></code></pre></td></tr></table></figure><h1 id="2112-the-airport-with-the-most-traffic"><a href="#2112-the-airport-with-the-most-traffic" class="headerlink" title="2112-the-airport-with-the-most-traffic"></a>2112-the-airport-with-the-most-traffic</h1><h2 id="题目-142"><a href="#题目-142" class="headerlink" title="题目"></a>题目</h2><p><a href="the-airport-with-the-most-traffic.pdf" target="_blank">2112-the-airport-with-the-most-traffic</a></p><h2 id="题解-142"><a href="#题解-142" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> t <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> departure_airport airport_id,flights_count<br>    <span class="hljs-keyword">from</span> flights<br>    <span class="hljs-keyword">union</span> <span class="hljs-keyword">all</span><br>    <span class="hljs-keyword">select</span> arrival_airport airport_id,flights_count<br>    <span class="hljs-keyword">from</span> flights<br>)<br><span class="hljs-keyword">select</span> airport_id<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> airport_id,<span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">sum</span>(flights_count) <span class="hljs-keyword">desc</span>) r<br>    <span class="hljs-keyword">from</span> t<br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> airport_id<br>    ) tt<br><span class="hljs-keyword">where</span> r<span class="hljs-operator">=</span><span class="hljs-number">1</span><br><br><br></code></pre></td></tr></table></figure><h1 id="2205-the-number-of-users-that-are-eligible-for-discount"><a href="#2205-the-number-of-users-that-are-eligible-for-discount" class="headerlink" title="2205-the-number-of-users-that-are-eligible-for-discount"></a>2205-the-number-of-users-that-are-eligible-for-discount</h1><h2 id="题目-143"><a href="#题目-143" class="headerlink" title="题目"></a>题目</h2><p><a href="the-number-of-users-that-are-eligible-for-discount.pdf" target="_blank">2205-the-number-of-users-that-are-eligible-for-discount</a></p><h2 id="题解-143"><a href="#题解-143" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">FUNCTION</span> getUserIDs(startDate <span class="hljs-type">DATE</span>, endDate <span class="hljs-type">DATE</span>, minAmount <span class="hljs-type">INT</span>) <span class="hljs-keyword">RETURNS</span> <span class="hljs-type">INT</span><br><span class="hljs-keyword">BEGIN</span><br>  <span class="hljs-keyword">RETURN</span> (<br>      <span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> user_id)<br>      <span class="hljs-keyword">from</span> purchases<br>      <span class="hljs-keyword">where</span> (time_stamp <span class="hljs-keyword">between</span> startdate <span class="hljs-keyword">and</span> enddate)<br>      <span class="hljs-keyword">and</span> amount<span class="hljs-operator">&gt;=</span>minAmount<br>  );<br><span class="hljs-keyword">END</span><br></code></pre></td></tr></table></figure><h1 id="2230-the-users-that-are-eligible-for-discount"><a href="#2230-the-users-that-are-eligible-for-discount" class="headerlink" title="2230-the-users-that-are-eligible-for-discount"></a>2230-the-users-that-are-eligible-for-discount</h1><h2 id="题目-144"><a href="#题目-144" class="headerlink" title="题目"></a>题目</h2><p><a href="the-users-that-are-eligible-for-discount.pdf" target="_blank">2230-the-users-that-are-eligible-for-discount</a></p><h2 id="题解-144"><a href="#题解-144" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">PROCEDURE</span> getUserIDs(startDate <span class="hljs-type">DATE</span>, endDate <span class="hljs-type">DATE</span>, minAmount <span class="hljs-type">INT</span>)<br><span class="hljs-keyword">BEGIN</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> user_id<br>    <span class="hljs-keyword">from</span> purchases<br>    <span class="hljs-keyword">where</span> (time_stamp <span class="hljs-keyword">between</span> startDate <span class="hljs-keyword">and</span> endDate)<br>    <span class="hljs-keyword">and</span> amount<span class="hljs-operator">&gt;=</span>minAmount<br>    <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> user_id;<br><br><span class="hljs-keyword">END</span><br></code></pre></td></tr></table></figure><h1 id="2238-number-of-times-a-driver-was-a-passenger"><a href="#2238-number-of-times-a-driver-was-a-passenger" class="headerlink" title="2238-number-of-times-a-driver-was-a-passenger"></a>2238-number-of-times-a-driver-was-a-passenger</h1><h2 id="题目-145"><a href="#题目-145" class="headerlink" title="题目"></a>题目</h2><p><a href="number-of-times-a-driver-was-a-passenger.pdf" target="_blank">2238-number-of-times-a-driver-was-a-passenger</a></p><h2 id="题解-145"><a href="#题解-145" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> r2.driver_id,ifnull(cnt,<span class="hljs-number">0</span>) cnt<br><span class="hljs-keyword">from</span> rides r1<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(passenger_id) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> passenger_id) cnt,passenger_id <span class="hljs-keyword">from</span> rides)k<br><span class="hljs-keyword">using</span>(passenger_id)<br><span class="hljs-keyword">right</span> <span class="hljs-keyword">join</span> rides r2<br><span class="hljs-keyword">on</span> r2.driver_id<span class="hljs-operator">=</span>r1.passenger_id<br><br><br><br></code></pre></td></tr></table></figure><h1 id="2292-products-with-three-or-more-orders-in-two-consecutive-years"><a href="#2292-products-with-three-or-more-orders-in-two-consecutive-years" class="headerlink" title="2292-products-with-three-or-more-orders-in-two-consecutive-years"></a>2292-products-with-three-or-more-orders-in-two-consecutive-years</h1><h2 id="题目-146"><a href="#题目-146" class="headerlink" title="题目"></a>题目</h2><p><a href="products-with-three-or-more-orders-in-two-consecutive-years.pdf" target="_blank">2292-products-with-three-or-more-orders-in-two-consecutive-years</a></p><h2 id="题解-146"><a href="#题解-146" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> temp <span class="hljs-keyword">as</span><br>(<span class="hljs-keyword">select</span> product_id,<span class="hljs-keyword">year</span>(purchase_date) yyy <br><span class="hljs-keyword">from</span> orders <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> product_id,<span class="hljs-keyword">year</span>(purchase_date)<br><span class="hljs-keyword">having</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> order_id)<span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span><br>)<br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> p1.product_id<br><span class="hljs-keyword">from</span> temp p1,temp p2<br><span class="hljs-keyword">where</span> <span class="hljs-built_in">abs</span>(p1.yyy<span class="hljs-operator">-</span>p2.yyy)<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> p1.product_id<span class="hljs-operator">=</span>p2.product_id<br><br></code></pre></td></tr></table></figure><h1 id="2298-tasks-count-in-the-weekend"><a href="#2298-tasks-count-in-the-weekend" class="headerlink" title="2298-tasks-count-in-the-weekend"></a>2298-tasks-count-in-the-weekend</h1><h2 id="题目-147"><a href="#题目-147" class="headerlink" title="题目"></a>题目</h2><p><a href="tasks-count-in-the-weekend.pdf" target="_blank">2298-tasks-count-in-the-weekend</a></p><h2 id="题解-147"><a href="#题解-147" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> a <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,dayofweek(submit_date) d<br>    <span class="hljs-keyword">from</span> tasks<br>)<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(d <span class="hljs-keyword">in</span> (<span class="hljs-number">1</span>,<span class="hljs-number">7</span>)) <span class="hljs-keyword">as</span> weekend_cnt,<br>    <span class="hljs-built_in">sum</span>(d <span class="hljs-keyword">between</span> <span class="hljs-number">2</span> <span class="hljs-keyword">and</span> <span class="hljs-number">6</span>) <span class="hljs-keyword">as</span> working_cnt<br><span class="hljs-keyword">from</span> a<br></code></pre></td></tr></table></figure><h1 id="2308-arrange-table-by-gender"><a href="#2308-arrange-table-by-gender" class="headerlink" title="2308-arrange-table-by-gender"></a>2308-arrange-table-by-gender</h1><h2 id="题目-148"><a href="#题目-148" class="headerlink" title="题目"></a>题目</h2><p><a href="arrange-table-by-gender.pdf" target="_blank">2308-arrange-table-by-gender</a></p><h2 id="题解-148"><a href="#题解-148" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">with</span> a <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<br>        <span class="hljs-built_in">row_number</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> gender <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> user_id) rn <br>    <span class="hljs-keyword">from</span> genders<br>)<br><span class="hljs-keyword">select</span> user_id,gender<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> user_id,gender,<br>        <span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> gender<span class="hljs-operator">=</span><span class="hljs-string">&#x27;female&#x27;</span> <span class="hljs-keyword">then</span> rn<br>            <span class="hljs-keyword">when</span> gender<span class="hljs-operator">=</span><span class="hljs-string">&#x27;other&#x27;</span> <span class="hljs-keyword">then</span> rn<span class="hljs-operator">+</span><span class="hljs-number">0.5</span><br>            <span class="hljs-keyword">else</span> rn<span class="hljs-operator">+</span><span class="hljs-number">0.6</span> <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> r<br>    <span class="hljs-keyword">from</span> a)aa<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> r,user_id<br></code></pre></td></tr></table></figure><h1 id="2314-the-first-day-of-the-maximum-recorded-degree-in-each-city"><a href="#2314-the-first-day-of-the-maximum-recorded-degree-in-each-city" class="headerlink" title="2314-the-first-day-of-the-maximum-recorded-degree-in-each-city"></a>2314-the-first-day-of-the-maximum-recorded-degree-in-each-city</h1><h2 id="题目-149"><a href="#题目-149" class="headerlink" title="题目"></a>题目</h2><p><a href="the-first-day-of-the-maximum-recorded-degree-in-each-city.pdf" target="_blank">2314-the-first-day-of-the-maximum-recorded-degree-in-each-city</a></p><h2 id="题解-149"><a href="#题解-149" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> city_id,<span class="hljs-built_in">min</span>(<span class="hljs-keyword">day</span>) <span class="hljs-keyword">day</span>,degree<br><span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<br>        <span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> city_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> degree <span class="hljs-keyword">desc</span>) r<br>    <span class="hljs-keyword">from</span> weather<br>    )k<br><span class="hljs-keyword">where</span> r<span class="hljs-operator">=</span><span class="hljs-number">1</span> <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> city_id<br></code></pre></td></tr></table></figure><h1 id="2324-product-sales-analysis-iv"><a href="#2324-product-sales-analysis-iv" class="headerlink" title="2324-product-sales-analysis-iv"></a>2324-product-sales-analysis-iv</h1><h2 id="题目-150"><a href="#题目-150" class="headerlink" title="题目"></a>题目</h2><p><a href="product-sales-analysis-iv.pdf" target="_blank">2324-product-sales-analysis-iv</a></p><h2 id="题解-150"><a href="#题解-150" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> k <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> user_id,<br>    product_id,<br>    <span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> user_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">sum</span>(price<span class="hljs-operator">*</span>quantity) <span class="hljs-keyword">desc</span>) r <br>    <span class="hljs-keyword">from</span> sales s <br>    <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> product p <br>    <span class="hljs-keyword">using</span>(product_id)<br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> s.user_id,s.product_id<br>)<br><br><span class="hljs-keyword">select</span> user_id,product_id<br><span class="hljs-keyword">from</span> k<br><span class="hljs-keyword">where</span> r<span class="hljs-operator">=</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="2329-product-sales-analysis-v"><a href="#2329-product-sales-analysis-v" class="headerlink" title="2329-product-sales-analysis-v"></a>2329-product-sales-analysis-v</h1><h2 id="题目-151"><a href="#题目-151" class="headerlink" title="题目"></a>题目</h2><p><a href="product-sales-analysis-v.pdf" target="_blank">2329-product-sales-analysis-v</a></p><h2 id="题解-151"><a href="#题解-151" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> user_id,<span class="hljs-built_in">sum</span>(price<span class="hljs-operator">*</span>quantity) <span class="hljs-keyword">as</span> spending<br><span class="hljs-keyword">from</span> sales<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> product<br><span class="hljs-keyword">using</span>(product_id)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> user_id<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> spending <span class="hljs-keyword">desc</span>,user_id<br></code></pre></td></tr></table></figure><h1 id="2339-all-the-matches-of-the-league"><a href="#2339-all-the-matches-of-the-league" class="headerlink" title="2339-all-the-matches-of-the-league"></a>2339-all-the-matches-of-the-league</h1><h2 id="题目-152"><a href="#题目-152" class="headerlink" title="题目"></a>题目</h2><p><a href="all-the-matches-of-the-league.pdf" target="_blank">2339-all-the-matches-of-the-league</a></p><h2 id="题解-152"><a href="#题解-152" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> t1.team_name <span class="hljs-keyword">as</span> home_team,t2.team_name <span class="hljs-keyword">as</span> away_team<br><span class="hljs-keyword">from</span> teams t1,teams t2<br><span class="hljs-keyword">where</span> t1.team_name<span class="hljs-operator">&lt;&gt;</span>t2.team_name<br></code></pre></td></tr></table></figure><h1 id="2346-compute-the-rank-as-a-percentage"><a href="#2346-compute-the-rank-as-a-percentage" class="headerlink" title="2346-compute-the-rank-as-a-percentage"></a>2346-compute-the-rank-as-a-percentage</h1><h2 id="题目-153"><a href="#题目-153" class="headerlink" title="题目"></a>题目</h2><p><a href="compute-the-rank-as-a-percentage.pdf" target="_blank">2346-compute-the-rank-as-a-percentage</a></p><h2 id="题解-153"><a href="#题解-153" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> a <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> student_id,department_id,<br>        <span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> department_id <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> mark <span class="hljs-keyword">desc</span>) r,<br>        <span class="hljs-built_in">count</span>(student_id) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> department_id) cnt<br>    <span class="hljs-keyword">from</span> students<br>)<br><span class="hljs-keyword">select</span> student_id,department_id,round(ifnull((r<span class="hljs-number">-1</span>)<span class="hljs-operator">*</span><span class="hljs-number">100</span><span class="hljs-operator">/</span>(cnt<span class="hljs-number">-1</span>),<span class="hljs-number">0</span>),<span class="hljs-number">2</span>) percentage<br><span class="hljs-keyword">from</span> a <br></code></pre></td></tr></table></figure><h1 id="2356-number-of-unique-subjects-taught-by-each-teacher"><a href="#2356-number-of-unique-subjects-taught-by-each-teacher" class="headerlink" title="2356-number-of-unique-subjects-taught-by-each-teacher"></a>2356-number-of-unique-subjects-taught-by-each-teacher</h1><h2 id="题目-154"><a href="#题目-154" class="headerlink" title="题目"></a>题目</h2><p><a href="number-of-unique-subjects-taught-by-each-teacher.pdf" target="_blank">2356-number-of-unique-subjects-taught-by-each-teacher</a></p><h2 id="题解-154"><a href="#题解-154" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> teacher_id,<span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> subject_id) <span class="hljs-keyword">as</span> cnt <br><span class="hljs-keyword">from</span> teacher<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> teacher_id<br></code></pre></td></tr></table></figure><h1 id="2372-calculate-the-influence-of-each-salesperson"><a href="#2372-calculate-the-influence-of-each-salesperson" class="headerlink" title="2372-calculate-the-influence-of-each-salesperson"></a>2372-calculate-the-influence-of-each-salesperson</h1><h2 id="题目-155"><a href="#题目-155" class="headerlink" title="题目"></a>题目</h2><p><a href="calculate-the-influence-of-each-salesperson.pdf" target="_blank">2372-calculate-the-influence-of-each-salesperson</a></p><h2 id="题解-155"><a href="#题解-155" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> sp.salesperson_id,name,ifnull(<span class="hljs-built_in">sum</span>(price) <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> sp.salesperson_id),<span class="hljs-number">0</span>) total<br><span class="hljs-keyword">from</span> salesperson sp <br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> customer c<br><span class="hljs-keyword">on</span> sp.salesperson_id<span class="hljs-operator">=</span>c.salesperson_id<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> sales s <br><span class="hljs-keyword">on</span> c.customer_id<span class="hljs-operator">=</span>s.customer_id<br><br></code></pre></td></tr></table></figure><h1 id="2377-sort-the-olympic-table"><a href="#2377-sort-the-olympic-table" class="headerlink" title="2377-sort-the-olympic-table"></a>2377-sort-the-olympic-table</h1><h2 id="题目-156"><a href="#题目-156" class="headerlink" title="题目"></a>题目</h2><p><a href="sort-the-olympic-table.pdf" target="_blank">2377-sort-the-olympic-table</a></p><h2 id="题解-156"><a href="#题解-156" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> olympic<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> country<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">max</span>(gold_medals)<span class="hljs-keyword">desc</span>,<span class="hljs-built_in">max</span>(silver_medals)<span class="hljs-keyword">desc</span>,<span class="hljs-built_in">max</span>(bronze_medals)<span class="hljs-keyword">desc</span>,country<br></code></pre></td></tr></table></figure><h1 id="2388-change-null-values-in-a-table-to-the-previous-value"><a href="#2388-change-null-values-in-a-table-to-the-previous-value" class="headerlink" title="2388-change-null-values-in-a-table-to-the-previous-value"></a>2388-change-null-values-in-a-table-to-the-previous-value</h1><h2 id="题目-157"><a href="#题目-157" class="headerlink" title="题目"></a>题目</h2><p><a href="change-null-values-in-a-table-to-the-previous-value.pdf" target="_blank">2388-change-null-values-in-a-table-to-the-previous-value</a></p><h2 id="题解-157"><a href="#题解-157" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> id,<span class="hljs-variable">@temp</span>:<span class="hljs-operator">=</span>ifnull(drink,<span class="hljs-variable">@temp</span>) drink<br><span class="hljs-keyword">from</span> coffeeshop<br>;<br></code></pre></td></tr></table></figure><h1 id="2394-employees-with-deductions"><a href="#2394-employees-with-deductions" class="headerlink" title="2394-employees-with-deductions"></a>2394-employees-with-deductions</h1><h2 id="题目-158"><a href="#题目-158" class="headerlink" title="题目"></a>题目</h2><p><a href="employees-with-deductions.pdf" target="_blank">2394-employees-with-deductions</a></p><h2 id="题解-158"><a href="#题解-158" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">with</span> a <span class="hljs-keyword">as</span>(<br>    <span class="hljs-keyword">select</span> employee_id,<span class="hljs-built_in">sum</span>(<span class="hljs-built_in">ceiling</span>(timestampdiff(<span class="hljs-keyword">second</span>,in_time,out_time)<span class="hljs-operator">/</span><span class="hljs-number">60</span>))<span class="hljs-operator">/</span><span class="hljs-number">60</span> s<br>    <span class="hljs-keyword">from</span> logs<br>    <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> employee_id<br>)<br><span class="hljs-keyword">select</span> employee_id<br><span class="hljs-keyword">from</span> employees<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> a <br><span class="hljs-keyword">using</span>(employee_id)<br><span class="hljs-keyword">where</span> s<span class="hljs-operator">&lt;</span>needed_hours <span class="hljs-keyword">or</span> s <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span><br></code></pre></td></tr></table></figure><h1 id="2504-concatenate-the-name-and-the-profession"><a href="#2504-concatenate-the-name-and-the-profession" class="headerlink" title="2504-concatenate-the-name-and-the-profession"></a>2504-concatenate-the-name-and-the-profession</h1><h2 id="题目-159"><a href="#题目-159" class="headerlink" title="题目"></a>题目</h2><p><a href="concatenate-the-name-and-the-profession.pdf" target="_blank">2504-concatenate-the-name-and-the-profession</a></p><h2 id="题解-159"><a href="#题解-159" class="headerlink" title="题解"></a>题解</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"># Write your MySQL query statement below<br><span class="hljs-keyword">select</span> person_id,concat(name,<span class="hljs-string">&#x27;(&#x27;</span>,<span class="hljs-keyword">left</span>(profession,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;)&#x27;</span>) <span class="hljs-keyword">as</span> name<br><span class="hljs-keyword">from</span> person<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> person_id <span class="hljs-keyword">desc</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL</tag>
      
      <tag>LeetCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重新开始学数据分析～</title>
    <link href="/2022/02/04/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    <url>/2022/02/04/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="数据分析师技能树"><a href="#数据分析师技能树" class="headerlink" title="数据分析师技能树"></a>数据分析师技能树</h1><ul><li><p>统计学知识</p></li><li><p>数据挖掘</p></li><li><p>数据库管理</p></li><li><p>数据可视化技能</p></li><li><p>编程语言</p></li><li><p>业务领域知识</p></li><li><p>沟通和解释能力</p></li><li><p>项目管理技能</p></li></ul><h1 id="技能详解"><a href="#技能详解" class="headerlink" title="技能详解"></a>技能详解</h1><h2 id="统计学"><a href="#统计学" class="headerlink" title="统计学"></a>统计学</h2><p>统计学是数据分析的基础。统计学包括概率论、假设检验、方差分析、回归分析等，这些技能可以帮助数据分析师理解和解释数据的含义，以及在数据分析中使用各种方法。</p><h2 id="数据挖掘"><a href="#数据挖掘" class="headerlink" title="数据挖掘"></a>数据挖掘</h2><p>数据挖掘是从大量数据中提取知识和信息的过程。数据挖掘包括聚类、分类、关联规则挖掘等，这些技能可以帮助数据分析师发现数据中的模式和趋势。</p><h2 id="数据库管理"><a href="#数据库管理" class="headerlink" title="数据库管理"></a>数据库管理</h2><p>数据分析师需要掌握SQL语言和关系型数据库的基本知识，以便管理和处理数据。数据分析师需要知道如何查询和修改数据、如何创建和管理表、如何进行数据备份和恢复等。</p><h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><p>通过图表和图形的方式展示数据是数据分析师必备的技能。数据分析师需要掌握各种数据可视化工具，如Tableau、Power BI等，以便能够将数据以清晰、易懂的方式呈现出来。</p><h2 id="编程语言"><a href="#编程语言" class="headerlink" title="编程语言"></a>编程语言</h2><p>Python、R等编程语言在数据分析中扮演着重要的角色，数据分析师需要掌握这些语言的基本知识。数据分析师需要知道如何使用Python、R进行数据处理、统计分析、机器学习等。</p><h2 id="业务领域知识"><a href="#业务领域知识" class="headerlink" title="业务领域知识"></a>业务领域知识</h2><p>了解所分析的行业和市场趋势，对数据的背景和目的有充分的理解，才能做出更准确的分析。数据分析师需要了解所分析的行业的基本知识，如金融、医疗、零售等，以及了解相关的法规和政策。</p><h2 id="沟通和解释能力"><a href="#沟通和解释能力" class="headerlink" title="沟通和解释能力"></a>沟通和解释能力</h2><p>将数据分析的结果以可视化和口头表达的方式解释给他人，尤其是非技术背景人士，需要有良好的沟通和解释能力。数据分析师需要能够将数据分析的结果以简单易懂的方式传达给其他人，包括上级领导、同事、客户等。</p><h2 id="项目管理能力"><a href="#项目管理能力" class="headerlink" title="项目管理能力"></a>项目管理能力</h2><p>了解项目管理的基本原则和工具，能够在规定时间内完成任务，并管理好数据分析项目。数据分析师需要能够规划、组织和协调数据分析项目的各个方面，包括需求分析、数据采集、数据清洗、数据分析、报告撰写等。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PTA-乙</title>
    <link href="/2021/07/31/PTA-%E4%B9%99/"/>
    <url>/2021/07/31/PTA-%E4%B9%99/</url>
    
    <content type="html"><![CDATA[<h1 id="1001-害死人不偿命的-3n-1-猜想"><a href="#1001-害死人不偿命的-3n-1-猜想" class="headerlink" title="1001 害死人不偿命的(3n+1)猜想"></a>1001 害死人不偿命的(3n+1)猜想</h1><p><a href="">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br>cnt = <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> n != <span class="hljs-number">1</span>:<br>    <span class="hljs-keyword">if</span> n % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>        n = n / <span class="hljs-number">2</span><br>    <span class="hljs-keyword">else</span>:<br>        n = (<span class="hljs-number">3</span> * n + <span class="hljs-number">1</span>) / <span class="hljs-number">2</span><br>    cnt += <span class="hljs-number">1</span><br><span class="hljs-built_in">print</span>(cnt)<br></code></pre></td></tr></table></figure><h1 id="1002-写出这个数"><a href="#1002-写出这个数" class="headerlink" title="1002 写出这个数"></a>1002 写出这个数</h1><p><a href="">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">inp = <span class="hljs-built_in">input</span>()<br>d = [<span class="hljs-string">&#x27;ling&#x27;</span>, <span class="hljs-string">&#x27;yi&#x27;</span>, <span class="hljs-string">&#x27;er&#x27;</span>, <span class="hljs-string">&#x27;san&#x27;</span>, <span class="hljs-string">&#x27;si&#x27;</span>, <span class="hljs-string">&#x27;wu&#x27;</span>, <span class="hljs-string">&#x27;liu&#x27;</span>, <span class="hljs-string">&#x27;qi&#x27;</span>, <span class="hljs-string">&#x27;ba&#x27;</span>, <span class="hljs-string">&#x27;jiu&#x27;</span>]<br>l = [<span class="hljs-built_in">int</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> inp]<br>s = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">sum</span>(l))<br>l = [d[<span class="hljs-built_in">int</span>(x)] <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> s]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; &#x27;</span>.join(l))<br></code></pre></td></tr></table></figure><h1 id="1004-成绩排名"><a href="#1004-成绩排名" class="headerlink" title="1004 成绩排名"></a>1004 成绩排名</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805321640296448">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br>students = []<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    student = &#123;&#125;<br>    line = <span class="hljs-built_in">input</span>().split(<span class="hljs-string">&#x27; &#x27;</span>)<br>    student[<span class="hljs-string">&#x27;name&#x27;</span>] = line[<span class="hljs-number">0</span>]<br>    student[<span class="hljs-string">&#x27;id&#x27;</span>] = line[<span class="hljs-number">1</span>]<br>    student[<span class="hljs-string">&#x27;score&#x27;</span>] = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">2</span>])<br>    students.append(student)<br>students.sort(key=<span class="hljs-keyword">lambda</span> x:x[<span class="hljs-string">&#x27;score&#x27;</span>], reverse=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125; &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(students[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;name&#x27;</span>], students[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;id&#x27;</span>]))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125; &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(students[n - <span class="hljs-number">1</span>][<span class="hljs-string">&#x27;name&#x27;</span>], students[n - <span class="hljs-number">1</span>][<span class="hljs-string">&#x27;id&#x27;</span>]))<br></code></pre></td></tr></table></figure><h1 id="1009-说反话"><a href="#1009-说反话" class="headerlink" title="1009 说反话"></a>1009 说反话</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805314941992960">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">s = <span class="hljs-built_in">input</span>().split(<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; &#x27;</span>.join(s[::-<span class="hljs-number">1</span>]))<br></code></pre></td></tr></table></figure><h1 id="1021-个位数统计"><a href="#1021-个位数统计" class="headerlink" title="1021 个位数统计"></a>1021 个位数统计</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805300404535296">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">s = <span class="hljs-built_in">input</span>()<br>l = [<span class="hljs-built_in">int</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> s]<br>count = &#123;&#125;<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> l:<br>    <span class="hljs-keyword">if</span> x <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> count:<br>        count[x] = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        count[x] += <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> count:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125;:&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(i, count[i]))<br></code></pre></td></tr></table></figure><h1 id="1022-D进制的A-B"><a href="#1022-D进制的A-B" class="headerlink" title="1022 D进制的A+B"></a>1022 D进制的A+B</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805299301433344">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">inp = <span class="hljs-built_in">input</span>().split(<span class="hljs-string">&#x27; &#x27;</span>)<br>a = <span class="hljs-built_in">int</span>(inp[<span class="hljs-number">0</span>])<br>b = <span class="hljs-built_in">int</span>(inp[<span class="hljs-number">1</span>])<br>d = <span class="hljs-built_in">int</span>(inp[<span class="hljs-number">2</span>])<br><br>c = a + b<br>l = []<br><span class="hljs-keyword">while</span> c &gt; <span class="hljs-number">0</span>:<br>    l.append(<span class="hljs-built_in">str</span>(c % d))<br>    c = c // d<br>l.reverse()<br>n = <span class="hljs-built_in">len</span>(l)<br>i = <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> i &lt; n <span class="hljs-keyword">and</span> l[i] == <span class="hljs-string">&#x27;0&#x27;</span>:<br>    i += <span class="hljs-number">1</span><br>pr = <span class="hljs-string">&#x27;&#x27;</span>.join(l[i:])<br><span class="hljs-keyword">if</span> pr <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> pr == <span class="hljs-string">&#x27;&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(pr)<br></code></pre></td></tr></table></figure><h1 id="1031-查验身份证"><a href="#1031-查验身份证" class="headerlink" title="1031 查验身份证"></a>1031 查验身份证</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805290334011392">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python">passed = <span class="hljs-number">0</span><br>w = [<span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>]<br>mpt = &#123;<span class="hljs-string">&#x27;0&#x27;</span>:<span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>:<span class="hljs-string">&#x27;0&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>:<span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-string">&#x27;3&#x27;</span>:<span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;4&#x27;</span>:<span class="hljs-string">&#x27;8&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>:<span class="hljs-string">&#x27;7&#x27;</span>, <span class="hljs-string">&#x27;6&#x27;</span>:<span class="hljs-string">&#x27;6&#x27;</span>, <span class="hljs-string">&#x27;7&#x27;</span>:<span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;8&#x27;</span>:<span class="hljs-string">&#x27;4&#x27;</span>, <span class="hljs-string">&#x27;9&#x27;</span>:<span class="hljs-string">&#x27;3&#x27;</span>, <span class="hljs-string">&#x27;10&#x27;</span>:<span class="hljs-string">&#x27;2&#x27;</span>&#125;<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">a</span>):<br>    s = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">17</span>):<br>        s += w[i] * a[i]<br>    <span class="hljs-keyword">return</span> mpt[<span class="hljs-built_in">str</span>(s % <span class="hljs-number">11</span>)]<br>n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    idx = <span class="hljs-built_in">input</span>()<br>    l = []<br>    isletter = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> idx[:-<span class="hljs-number">1</span>]:<br>        <span class="hljs-keyword">if</span> x &gt;= <span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">and</span> x &lt;= <span class="hljs-string">&#x27;9&#x27;</span>:<br>            l.append(<span class="hljs-built_in">int</span>(x))<br>        <span class="hljs-keyword">else</span>:<br>            isletter = <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> isletter <span class="hljs-keyword">or</span> <span class="hljs-built_in">len</span>(idx) &lt; <span class="hljs-number">18</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(idx))<br>    <span class="hljs-keyword">else</span>:<br>        z = f(l)<br>        <span class="hljs-keyword">if</span> idx[-<span class="hljs-number">1</span>] == z:<br>            passed += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(idx))<br><span class="hljs-keyword">if</span> passed == n:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;All passed&quot;</span>)<br><br></code></pre></td></tr></table></figure><h1 id="1032-挖掘机技术哪家强"><a href="#1032-挖掘机技术哪家强" class="headerlink" title="1032 挖掘机技术哪家强"></a>1032 挖掘机技术哪家强</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805289432236032">原题链接</a></p><p>这题用Python会超时，用C语言没问题。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e5</span> + <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> a[N];<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-type">int</span> max_id = <span class="hljs-number">-1</span>, max_sc = <span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++ i)&#123;<br>        <span class="hljs-type">int</span> id, sc;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>, &amp;id, &amp;sc);<br>        a[id] += sc;<br>        <span class="hljs-keyword">if</span> (max_id == <span class="hljs-number">-1</span> || max_sc &lt; a[id]) &#123;<br>            max_id = id;<br>            max_sc = a[id];<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d\n&quot;</span>, max_id, max_sc);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="1033-旧键盘打字"><a href="#1033-旧键盘打字" class="headerlink" title="1033 旧键盘打字"></a>1033 旧键盘打字</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805288530460672">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python">ban = <span class="hljs-built_in">input</span>()<br>s = <span class="hljs-built_in">input</span>()<br>upper = [<span class="hljs-built_in">chr</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>), <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;Z&#x27;</span>)+<span class="hljs-number">1</span>)]<br>broke = &#123;&#125;<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> ban:<br>    <span class="hljs-keyword">if</span> x == <span class="hljs-string">&#x27;+&#x27;</span>:<br>        <span class="hljs-keyword">for</span> u <span class="hljs-keyword">in</span> upper:<br>            broke[u] = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> x &gt;= <span class="hljs-string">&#x27;A&#x27;</span> <span class="hljs-keyword">and</span> x &lt;= <span class="hljs-string">&#x27;Z&#x27;</span>:<br>            broke[<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(x) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>))] = <span class="hljs-number">1</span><br>        broke[x] = <span class="hljs-number">1</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&quot;</span>.join([x <span class="hljs-keyword">if</span> x <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> broke <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> s]))<br></code></pre></td></tr></table></figure><h1 id="1036-跟奥巴马一起编程"><a href="#1036-跟奥巴马一起编程" class="headerlink" title="1036 跟奥巴马一起编程"></a>1036 跟奥巴马一起编程</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805285812551680">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> math<br>line = <span class="hljs-built_in">input</span>().split(<span class="hljs-string">&#x27; &#x27;</span>)<br>n, ch = <span class="hljs-built_in">int</span>(line[<span class="hljs-number">0</span>]), line[<span class="hljs-number">1</span>]<br>width, heigh = n, <span class="hljs-built_in">int</span>(math.ceil(n / <span class="hljs-number">2</span>))<br><span class="hljs-built_in">print</span>(ch * width)<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(heigh - <span class="hljs-number">2</span>):<br>    <span class="hljs-built_in">print</span>(ch + <span class="hljs-string">&#x27; &#x27;</span> * (width - <span class="hljs-number">2</span>) + ch)<br><span class="hljs-built_in">print</span>(ch * width)<br></code></pre></td></tr></table></figure><h1 id="1038-统计同成绩学生"><a href="#1038-统计同成绩学生" class="headerlink" title="1038 统计同成绩学生"></a>1038 统计同成绩学生</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805284092887040">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br>sts = <span class="hljs-built_in">input</span>().split(<span class="hljs-string">&#x27; &#x27;</span>)<br>sts = [<span class="hljs-built_in">int</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> sts]<br>scs = [<span class="hljs-number">0</span>] * <span class="hljs-number">101</span><br><span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> sts:<br>    scs[s] += <span class="hljs-number">1</span><br>query = <span class="hljs-built_in">input</span>().split(<span class="hljs-string">&#x27; &#x27;</span>)<br>query = [<span class="hljs-built_in">int</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> query]<br>res = [<span class="hljs-built_in">str</span>(scs[x]) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> query[<span class="hljs-number">1</span>:]]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; &quot;</span>.join(res))<br></code></pre></td></tr></table></figure><h1 id="1041-考试座位号"><a href="#1041-考试座位号" class="headerlink" title="1041 考试座位号"></a>1041 考试座位号</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805281567916032">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br>sts = &#123;&#125;<br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    line = <span class="hljs-built_in">input</span>().split(<span class="hljs-string">&#x27; &#x27;</span>)<br>    sts[line[<span class="hljs-number">1</span>]] = &#123;<span class="hljs-string">&#x27;id&#x27;</span>: line[<span class="hljs-number">0</span>], <span class="hljs-string">&#x27;se&#x27;</span>: line[<span class="hljs-number">2</span>]&#125;<br>m = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br>query = <span class="hljs-built_in">input</span>().split(<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-keyword">for</span> q <span class="hljs-keyword">in</span> query:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;&#123;&#125; &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(sts[q][<span class="hljs-string">&#x27;id&#x27;</span>], sts[q][<span class="hljs-string">&#x27;se&#x27;</span>]))<br></code></pre></td></tr></table></figure><h1 id="1042-字符统计"><a href="#1042-字符统计" class="headerlink" title="1042 字符统计"></a>1042 字符统计</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805280817135616">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">line = <span class="hljs-built_in">input</span>()<br>cnt = &#123;&#125;<br>line = line.lower()<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> line:<br>    <span class="hljs-keyword">if</span> x <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> cnt:<br>        cnt[x] = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        cnt[x] += <span class="hljs-number">1</span><br>maxn, maxn_chr = <span class="hljs-number">0</span>, <span class="hljs-literal">None</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">26</span>):<br>    ch = <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + x)<br>    <span class="hljs-keyword">if</span> ch <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> cnt:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> maxn_chr <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> maxn &lt; cnt[ch]:<br>        maxn_chr = ch<br>        maxn = cnt[ch]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;maxn_chr&#125;</span> <span class="hljs-subst">&#123;maxn&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="1047-编程团体赛"><a href="#1047-编程团体赛" class="headerlink" title="1047 编程团体赛"></a>1047 编程团体赛</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805277163896832">原题链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())<br>teams = [<span class="hljs-number">0</span>] * <span class="hljs-number">1010</span><br>max_team, max_sc = <span class="hljs-literal">None</span>, <span class="hljs-literal">None</span><br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    line = <span class="hljs-built_in">input</span>().split(<span class="hljs-string">&#x27; &#x27;</span>)<br>    team, _ = line[<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27;-&#x27;</span>)<br>    team = <span class="hljs-built_in">int</span>(team)<br>    teams[team] += <span class="hljs-built_in">int</span>(line[<span class="hljs-number">1</span>])<br>    <span class="hljs-keyword">if</span> max_team <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> max_sc &lt; teams[team]:<br>        max_team, max_sc = team, teams[team]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;max_team&#125;</span> <span class="hljs-subst">&#123;max_sc&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="1056-组合数的和"><a href="#1056-组合数的和" class="headerlink" title="1056 组合数的和"></a>1056 组合数的和</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/exam/problems/994805271455449088">原题链接</a></p><p>找规律：n个数字，每个数字在十位和各位都会出现n -1次。</p><p>Sum &#x3D; 11  * num * (n-1)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">line = <span class="hljs-built_in">input</span>().split(<span class="hljs-string">&#x27; &#x27;</span>)<br>line = [<span class="hljs-built_in">int</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> line]<br>n, arr = line[<span class="hljs-number">0</span>], line[<span class="hljs-number">1</span>:]<br>res = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> arr:<br>    res += <span class="hljs-number">11</span> * x * (n - <span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(res)<br></code></pre></td></tr></table></figure><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Python</tag>
      
      <tag>题解</tag>
      
      <tag>PTA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人生苦短，我也要用Python</title>
    <link href="/2021/05/21/Python%E5%88%9D%E8%A7%81/"/>
    <url>/2021/05/21/Python%E5%88%9D%E8%A7%81/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>已经学过C语言的我，还是非常坚定的想要入Python的坑。</p><p>简单说说C语言和Python的区别吧～</p><ol><li><p>动态类型：Python是妥妥的动态类型语言，这意味着在编程时无需声明变量的数据类型。</p><p> 相比之下，C语言是一种静态类型的语言，需要在编程时显式地声明变量的数据类型。</p></li><li><p>简洁的语法：Python的语法非常简洁，代码量相比于C语言要少得多。例如，Python中的代码块使用缩进来表示，而C语言中使用花括号。这使得Python代码更易读、易写、易维护。</p></li><li><p>自动内存管理：Python有一个垃圾回收机制，可以自动管理内存。<br>程序员不需要手动分配和释放内存，减少了程序出现内存泄漏和野指针等问题的可能性。</p></li><li><p>支持多种编程范式：Python支持面向对象编程、函数式编程和命令式编程等多种编程范式。相比之下，C语言主要是一种命令式编程语言，虽然也可以实现面向对象编程和函数式编程，但是相对麻烦。</p></li><li><p>Python拥有丰富的标准库，其中包含了大量的模块和函数，可以帮助程序员更快地编写Python程序。<br>相比之下，C语言的标准库相对较小，需要依赖于第三方库来实现更多的功能。</p></li></ol><p>好了，好处说完了，Python也有一些缺点，例如运行速度相对较慢，对于某些需要高性能的场景可能不太适合。</p><h1 id="Python语法笔记"><a href="#Python语法笔记" class="headerlink" title="Python语法笔记"></a>Python语法笔记</h1><h2 id="Python的动态特性"><a href="#Python的动态特性" class="headerlink" title="Python的动态特性"></a>Python的动态特性</h2><p>当谈到Python的动态特性时，我们通常指的是Python语言在运行时动态执行代码的能力，这种能力称为动态语言特性。Python作为一种动态语言，具有许多特性，例如：</p><h3 id="动态类型"><a href="#动态类型" class="headerlink" title="动态类型"></a>动态类型</h3><p>Python是一种动态类型语言，即在声明变量时无需指定其类型。变量的类型是在运行时动态推断的。例如，以下代码在Python中是合法的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">5</span><br>a = <span class="hljs-string">&quot;Hello, World!&quot;</span><br></code></pre></td></tr></table></figure><p>这种特性使得Python更加灵活和易于使用，但也增加了类型相关的错误和性能开销。</p><h3 id="动态绑定"><a href="#动态绑定" class="headerlink" title="动态绑定"></a>动态绑定</h3><p>Python允许在运行时动态绑定属性和方法。例如，以下代码创建一个新的类，并在运行时向该类添加新的属性和方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyClass</span>:<br>    <span class="hljs-keyword">pass</span><br><br>obj = MyClass()<br>obj.name = <span class="hljs-string">&quot;Tom&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">say_hello</span>(<span class="hljs-params">self</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello, &quot;</span> + self.name)<br><br>MyClass.say_hello = say_hello<br><br>obj.say_hello()<br></code></pre></td></tr></table></figure><p>在此示例中，我们创建了一个名为MyClass的类，并将其实例化为obj对象。我们在运行时向该对象动态添加了一个名为name的属性和一个名为say_hello的方法。最后，我们调用了对象的say_hello方法，并打印了一条问候语。</p><h3 id="动态导入"><a href="#动态导入" class="headerlink" title="动态导入"></a>动态导入</h3><p>Python允许在运行时动态导入模块。例如，以下代码动态导入了Python的内置模块math，并使用其sin函数计算正弦值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> importlib<br><br>module_name = <span class="hljs-string">&quot;math&quot;</span><br>module = importlib.import_module(module_name)<br><br>angle = <span class="hljs-number">45</span><br>sin_value = module.sin(angle)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;The sin value of&quot;</span>, angle, <span class="hljs-string">&quot;degrees is&quot;</span>, sin_value)<br></code></pre></td></tr></table></figure><p>在此示例中，我们使用Python的importlib模块动态导入了Python的内置模块math，并使用其sin函数计算正弦值。这种动态导入特性使得Python更加灵活和可扩展。</p><h2 id="条件控制与循环"><a href="#条件控制与循环" class="headerlink" title="条件控制与循环"></a>条件控制与循环</h2><h3 id="条件控制"><a href="#条件控制" class="headerlink" title="条件控制"></a>条件控制</h3><p>最常用的条件控制语句是if语句。if语句用于根据某个条件来执行不同的代码块。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">age = <span class="hljs-number">25</span><br><br><span class="hljs-keyword">if</span> age &lt; <span class="hljs-number">18</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;你还未成年，不得入内。&quot;</span>)<br><span class="hljs-keyword">elif</span> age &gt;= <span class="hljs-number">18</span> <span class="hljs-keyword">and</span> age &lt; <span class="hljs-number">21</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;你已经成年，但还未达到饮酒年龄。&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;欢迎光临。&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>Python中的循环有两种类型：for循环和while循环。for循环用于迭代遍历序列（如列表、元组、字符串）中的每个元素，而while循环则用于在满足条件的情况下重复执行代码块。</p><p>以下是一个使用for循环打印列表中所有元素的示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">fruits = [<span class="hljs-string">&quot;apple&quot;</span>, <span class="hljs-string">&quot;banana&quot;</span>, <span class="hljs-string">&quot;cherry&quot;</span>]<br><span class="hljs-keyword">for</span> fruit <span class="hljs-keyword">in</span> fruits:<br>    <span class="hljs-built_in">print</span>(fruit)<br></code></pre></td></tr></table></figure><p>在此示例中，我们使用for循环遍历了一个名为fruits的列表，并打印了其中的每个元素。</p><p>以下是一个使用while循环计算数字的示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">n = <span class="hljs-number">10</span><br><span class="hljs-built_in">sum</span> = <span class="hljs-number">0</span><br>i = <span class="hljs-number">1</span><br><br><span class="hljs-keyword">while</span> i &lt;= n:<br>    <span class="hljs-built_in">sum</span> += i<br>    i += <span class="hljs-number">1</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;1到%d的和为：%d&quot;</span> % (n, <span class="hljs-built_in">sum</span>))<br></code></pre></td></tr></table></figure><p>使用while循环计算了从1到10的整数之和，并输出了结果。</p><h2 id="子程序设计"><a href="#子程序设计" class="headerlink" title="子程序设计"></a>子程序设计</h2><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>在Python中，我们使用def关键字来定义一个函数，函数的主体被缩进，并在函数名后面跟着一对括号和一个冒号。以下是一个使用函数打印乘法表的示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">multiplication_table</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, n+<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, i+<span class="hljs-number">1</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;%d*%d=%d&quot;</span> % (i, j, i*j), end=<span class="hljs-string">&#x27;\t&#x27;</span>)<br>        <span class="hljs-built_in">print</span>()<br><br>multiplication_table(<span class="hljs-number">9</span>)<br></code></pre></td></tr></table></figure><p>我们定义了一个名为multiplication_table的函数，该函数接受一个整数n作为参数，并打印1到n的乘法表。</p><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>递归是一种常用于解决分治问题的算法，它将问题分解为较小的子问题，并使用相同的算法递归地解决它们，直到子问题变得足够简单，可以直接求解。</p><p>以下是一个使用递归计算阶乘的示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">factorial</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-keyword">if</span> n == <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> n * factorial(n-<span class="hljs-number">1</span>)<br><br><span class="hljs-built_in">print</span>(factorial(<span class="hljs-number">5</span>))<br></code></pre></td></tr></table></figure><p>我们定义了一个名为factorial的递归函数，该函数接受一个正整数n作为参数，并使用递归的方式计算n的阶乘</p><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><p>Python是一种面向对象的编程语言，支持封装、继承和多态等面向对象的概念。以下是一个简单的Python面向对象编程的栗子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, name, age</span>):<br>        self.name = name<br>        self.age = age<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">speak</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Dog</span>(<span class="hljs-title class_ inherited__">Animal</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, name, age, breed</span>):<br>        <span class="hljs-built_in">super</span>().__init__(name, age)<br>        self.breed = breed<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">speak</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;汪汪！&quot;</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Cat</span>(<span class="hljs-title class_ inherited__">Animal</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, name, age, color</span>):<br>        <span class="hljs-built_in">super</span>().__init__(name, age)<br>        self.color = color<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">speak</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;喵喵！&quot;</span><br><br>dog = Dog(<span class="hljs-string">&quot;旺财&quot;</span>, <span class="hljs-number">3</span>, <span class="hljs-string">&quot;金毛&quot;</span>)<br>cat = Cat(<span class="hljs-string">&quot;咪咪&quot;</span>, <span class="hljs-number">2</span>, <span class="hljs-string">&quot;白色&quot;</span>)<br><br><span class="hljs-built_in">print</span>(dog.name, dog.age, dog.breed, dog.speak())<br><span class="hljs-built_in">print</span>(cat.name, cat.age, cat.color, cat.speak())<br></code></pre></td></tr></table></figure><p>在此示例中，我们定义了一个名为Animal的基类（也称为父类或超类），以及两个名为Dog和Cat的子类（也称为派生类或子类）。每个类都具有自己的属性和方法，可以在实例化对象时进行初始化和访问。</p><p>我们使用super()函数调用父类的构造函数，使用子类的构造函数来初始化子类的属性。在这个例子中，Dog类具有属性breed，而Cat类具有属性color。两个子类都实现了一个名为speak()的方法，该方法返回相应的动物声音。</p><p>在主程序中，我们实例化了一个Dog对象和一个Cat对象，并使用它们的属性和方法来打印它们的信息。</p><p>面向对象编程特点</p><ul><li>可以更好地组织和管理代码</li><li>程序更加灵活和易于扩展</li></ul><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>在Python中，异常处理是一种非常重要的技术，可以帮助我们在程序出现错误时优雅地处理它们，而不会使程序崩溃或停止运行。以下是一个简单的Python异常处理的示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">try</span>:<br>    num1 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入第一个整数：&quot;</span>))<br>    num2 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入第二个整数：&quot;</span>))<br>    result = num1 / num2<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;结果为：&quot;</span>, result)<br><span class="hljs-keyword">except</span> ValueError:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;输入不合法，请输入整数！&quot;</span>)<br><span class="hljs-keyword">except</span> ZeroDivisionError:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;除数不能为0！&quot;</span>)<br><span class="hljs-keyword">except</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;程序出现错误！&quot;</span>)<br><span class="hljs-keyword">finally</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;感谢使用本程序！&quot;</span>)<br></code></pre></td></tr></table></figure><p>在此示例中，我们使用try…except语句来捕获程序可能出现的异常。首先，我们尝试将用户输入的字符串转换为整数，并计算两个整数的商。如果程序出现异常，则程序将跳转到相应的except块，并输出错误信息。如果没有出现异常，则程序将继续执行，并输出结果。无论程序是否出现异常，finally块中的代码都将始终执行。</p><p>在本示例中，我们定义了三个except块来处理可能出现的异常：ValueError（输入不是整数）、ZeroDivisionError（除数为0）和通用异常（其他类型的异常）。通过使用不同的except块，我们可以根据具体情况选择不同的处理方式。</p><p>Python异常处理是一种非常强大和灵活的技术，可以帮助我们更好地处理程序中的错误，避免程序崩溃或停止运行，并提高程序的可靠性和稳定性。</p><h2 id="赋值、浅拷贝与深拷贝"><a href="#赋值、浅拷贝与深拷贝" class="headerlink" title="赋值、浅拷贝与深拷贝"></a>赋值、浅拷贝与深拷贝</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 简单赋值</span><br>a = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>b = a<br>b[<span class="hljs-number">0</span>] = <span class="hljs-number">4</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a = &quot;</span>, a)   <span class="hljs-comment"># a = [4, 2, 3]</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;b = &quot;</span>, b)   <span class="hljs-comment"># b = [4, 2, 3]</span><br></code></pre></td></tr></table></figure><p>用简单赋值将列表a赋值给变量b，然后修改变量b的第一个元素。由于变量b只是变量a的引用，因此变量a和b都将被修改。这种方式被称为浅复制，因为新变量只是原始变量的一个浅层副本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 浅拷贝</span><br>c = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]]<br>d = c.copy()<br>d[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>] = <span class="hljs-number">5</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c = &quot;</span>, c)   <span class="hljs-comment"># c = [1, 2, [5, 4]]</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;d = &quot;</span>, d)   <span class="hljs-comment"># d = [1, 2, [5, 4]]</span><br></code></pre></td></tr></table></figure><p>使用copy()函数进行浅拷贝，将列表c复制到变量d中。然后，我们修改变量d中的嵌套列表的第一个元素。由于d是c的浅层副本，所以嵌套列表也被修改了。这种方式也被称为浅拷贝，因为它只复制了原始变量的顶层元素，而不是嵌套元素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 深拷贝</span><br><span class="hljs-keyword">import</span> copy<br>e = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]]<br>f = copy.deepcopy(e)<br>f[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>] = <span class="hljs-number">5</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e = &quot;</span>, e)   <span class="hljs-comment"># e = [1, 2, [3, 4]]</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;f = &quot;</span>, f)   <span class="hljs-comment"># f = [1, 2, [5, 4]]</span><br></code></pre></td></tr></table></figure><p>使用deepcopy()函数进行深拷贝，将列表e复制到变量f中。然后，我们修改变量f中的嵌套列表的第一个元素。由于f是e的深层副本，所以嵌套列表不会被修改。这种方式被称为深拷贝，因为它复制了整个对象及其嵌套元素。</p><h2 id="常用容器"><a href="#常用容器" class="headerlink" title="常用容器"></a>常用容器</h2><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>列表是Python中最常用的数据结构之一，用于存储一组有序的元素。列表使用数组实现，底层数据结构为动态数组。动态数组是指在数组大小可变的情况下，动态地调整内部数组的大小。列表可以存储任何类型的数据，包括整数、浮点数、字符串和其他对象。</p><p>举例：使用列表来存储一组数字，并对它们进行排序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">numbers = [<span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br>numbers.sort()<br><span class="hljs-built_in">print</span>(numbers)  <span class="hljs-comment"># [1, 2, 3, 4, 5]</span><br></code></pre></td></tr></table></figure><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><p>集合是Python中的另一种常用数据结构，用于存储一组无序的元素。集合使用哈希表实现，底层数据结构为哈希表。哈希表是一种使用哈希函数将键映射到存储位置的数据结构。集合中的元素必须是可哈希的，包括数字、字符串和元组等不可变类型。</p><p>举例来说，我们可以使用集合来去重一组数字：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">numbers = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]<br>unique_numbers = <span class="hljs-built_in">set</span>(numbers)<br><span class="hljs-built_in">print</span>(unique_numbers)  <span class="hljs-comment"># &#123;1, 2, 3, 4, 5&#125;</span><br></code></pre></td></tr></table></figure><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><p>字典是Python中的另一种重要数据结构，用于存储一组键值对。字典使用哈希表实现，底层数据结构为哈希表。字典中的键必须是可哈希的，包括数字、字符串和元组等不可变类型。值可以是任何类型的数据，包括数字、字符串、列表、集合和其他对象。</p><p>举例来说，我们可以使用字典来存储一组单词及其对应的解释：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">words = &#123;<span class="hljs-string">&#x27;apple&#x27;</span>: <span class="hljs-string">&#x27;a fruit&#x27;</span>, <span class="hljs-string">&#x27;banana&#x27;</span>: <span class="hljs-string">&#x27;a fruit&#x27;</span>, <span class="hljs-string">&#x27;carrot&#x27;</span>: <span class="hljs-string">&#x27;a vegetable&#x27;</span>&#125;<br><span class="hljs-built_in">print</span>(words[<span class="hljs-string">&#x27;apple&#x27;</span>])  <span class="hljs-comment"># &#x27;a fruit&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="Python：AI时代的胶水语言"><a href="#Python：AI时代的胶水语言" class="headerlink" title="Python：AI时代的胶水语言"></a>Python：AI时代的胶水语言</h1><p>为何称为胶水语言？</p><ul><li>Python可以方便地将不同的编程语言、框架和库进行结合，从而实现更加复杂的应用程序。</li><li>Python拥有大量的第三方库和工具，这些库和工具可以轻松地集成到Python程序中，并与其他编程语言和系统进行交互。</li></ul><p>Python与数据科学的关系：</p><ul><li>Python是一种功能强大的通用编程语言，具有易于学习、易于阅读和易于编写的特点。</li><li>Python拥有大量的数据科学库和工具，包括NumPy、Pandas、Matplotlib、Scikit-learn和TensorFlow等，这些库可以用于数据分析、机器学习、深度学习和人工智能等领域。</li></ul><p>Python语言的简洁性、易读性、扩展性和丰富的库资源，使其成为数据科学的流行语言之一。Python能够轻松地读取、处理和可视化数据，使得它成为数据科学家、研究人员和工程师的首选语言。同时，Python社区也非常活跃，拥有庞大的开发者和用户社群，为数据科学的应用和创新提供了强大的支持。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【实操】SQL数据清洗&amp;TABLEAU数据可视化操作</title>
    <link href="/2020/11/06/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%B2%97%E4%BD%8D%E5%88%86%E6%9E%90/"/>
    <url>/2020/11/06/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%B2%97%E4%BD%8D%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>想要对数据分析岗位的市场需求、就业情况、岗位技能做一个简单调查。利用爬虫采集完毕数据分析的相关信息。只考虑北上广深的一线是城市。</p><p>报告先行～</p><p><a href="数据分析岗位分析报告.pdf" target="_blank">数据分析岗位分析报告</a></p><h1 id="目标确认与目标拆解"><a href="#目标确认与目标拆解" class="headerlink" title="目标确认与目标拆解"></a>目标确认与目标拆解</h1><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraENVdmNVeHpXV3NwZDBjP2U9NkNqTWd4.png" alt="图1"></p><h1 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h1><ol><li>   缺失数据处理&amp;限定岗位–&gt;data_clean_null_jobname<br>某字段为null或空字符的删去；限定岗位名称带有“数据”二字</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_clean_null_jobname <span class="hljs-keyword">as</span> (<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> data <br><span class="hljs-keyword">where</span> <br>job_href <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> job_href <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>job_name <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> job_name <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>company_href <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> company_href <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>company_name <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> company_name <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>providesalary_text <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> providesalary_text <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>workarea <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> workarea <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>workarea_text <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> workarea_text <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>companytype_text <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> companytype_text <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>degreefrom <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> degreefrom <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>workyear <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> workyear <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>updatedate <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> updatedate <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>issuedate <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> issuedate <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">and</span><br>parse2_job_detail <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">and</span> parse2_job_detail <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">and</span> job_name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%数据%&#x27;</span><br>)<br></code></pre></td></tr></table></figure><ol start="2"><li>   处理重复发布的数据–&gt;data_clean_distinc<br>利用对发布时间的排序可以选择最近发布的重复数据</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_clean_distinct <span class="hljs-keyword">as</span> (<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> (<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<br><span class="hljs-built_in">row_number</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> job_name,company_name <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> issuedate <span class="hljs-keyword">desc</span>) last_issue<br><span class="hljs-keyword">from</span> data_clean_null_jobname <br>)t<br><span class="hljs-keyword">where</span> last_issue<span class="hljs-operator">=</span><span class="hljs-number">1</span><br>)<br></code></pre></td></tr></table></figure><ol start="3"><li>   限定城市为北上广深四个–&gt;data_clean_don<br>建立新的城市字段，方便后续利用字段进行分析</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_clean_done <span class="hljs-keyword">as</span> (<br> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span><br> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> id,job_href,job_name,company_href,<br>company_name,providesalary_text,workarea,<br>workarea_text,updatedate,companytype_text,<br>degreefrom,workyear,issuedate,parse2_job_detail,<br><span class="hljs-keyword">case</span> <span class="hljs-keyword">when</span> workarea_text <span class="hljs-keyword">like</span><span class="hljs-string">&#x27;%北京%&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;北京&#x27;</span><br><span class="hljs-keyword">when</span> workarea_text <span class="hljs-keyword">like</span><span class="hljs-string">&#x27;%上海%&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;上海&#x27;</span><br><span class="hljs-keyword">when</span> workarea_text <span class="hljs-keyword">like</span><span class="hljs-string">&#x27;%广州%&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;广州&#x27;</span><br><span class="hljs-keyword">when</span> workarea_text <span class="hljs-keyword">like</span><span class="hljs-string">&#x27;%深圳%&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-string">&#x27;深圳&#x27;</span> <span class="hljs-keyword">end</span><br><span class="hljs-keyword">as</span> base<br><span class="hljs-keyword">from</span> data_clean_distinct <br>)k<br><span class="hljs-keyword">where</span> base <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span><br>)<br></code></pre></td></tr></table></figure><h1 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h1><h2 id="市场需求分析"><a href="#市场需求分析" class="headerlink" title="市场需求分析"></a>市场需求分析</h2><ol><li>各城市招聘数目对比&amp;占比情况</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_base_need <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> <br>base <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;城市&#x27;</span>,base_cnt <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;招聘量&#x27;</span>,<br>concat(round((base_cnt<span class="hljs-operator">/</span><br>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(degreefrom) <span class="hljs-keyword">over</span>() <span class="hljs-keyword">from</span> data_clean_done limit <span class="hljs-number">1</span>)<br>)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;%&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;招聘占比&#x27;</span><br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <br>base,<br><span class="hljs-built_in">sum</span>(degreefrom) <span class="hljs-keyword">as</span> base_cnt<br><span class="hljs-keyword">from</span> data_clean_done<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> base)k1<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> base_cnt <span class="hljs-keyword">desc</span><br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZzZzaGRwaWdHbUJGTURSP2U9RDNqeWR4.png" alt="结果展示图2"></p><ol start="2"><li>   各企业类型招聘数目对比&amp;占比情况</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_companytype_need <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> <br>companytype_text <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;企业类型&#x27;</span>,company_cnt <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;招聘量&#x27;</span>,<br>concat(round((company_cnt<span class="hljs-operator">/</span><br>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(degreefrom) <span class="hljs-keyword">over</span>() <span class="hljs-keyword">from</span> data_clean_done limit <span class="hljs-number">1</span>)<br>)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;%&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;招聘占比&#x27;</span><br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <br>companytype_text,<br><span class="hljs-built_in">sum</span>(degreefrom) <span class="hljs-keyword">as</span> company_cnt<br><span class="hljs-keyword">from</span> data_clean_done<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> companytype_text)k1<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> company_cnt <span class="hljs-keyword">desc</span><br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZy1sMU9kX0hxTjh1cTRIP2U9WEx4dU0w.png" alt="结果展示图3"></p><ol start="3"><li>   各工作年限招聘数目对比&amp;占比情况</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_companytype_need <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> <br>workyear <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;工作年限&#x27;</span>,cnt <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;招聘量&#x27;</span>,<br>concat(round((cnt<span class="hljs-operator">/</span><br>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(degreefrom) <span class="hljs-keyword">over</span>() <span class="hljs-keyword">from</span> data_clean_done limit <span class="hljs-number">1</span>)<br>)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;%&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;招聘占比&#x27;</span><br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <br>workyear,<br><span class="hljs-built_in">sum</span>(degreefrom) <span class="hljs-keyword">as</span> cnt<br><span class="hljs-keyword">from</span> data_clean_done<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> workyear)k1<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> cnt <span class="hljs-keyword">desc</span><br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZ2RzLWI5TUJ2SC1xQ2JkP2U9ekQ4cWF2.png" alt="结果展示图4"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhraEhoNVloWFA4LVd0bERWP2U9TFZlOTdt.png" alt="可视化展示：仪表板-需求"></p><h2 id="薪资情况分析"><a href="#薪资情况分析" class="headerlink" title="薪资情况分析"></a>薪资情况分析</h2><p>由于薪资字段还没清洗好，所以规范薪资字段，得到最大值、最小值和平均值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_salary <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">with</span> temp_data_salary <span class="hljs-keyword">as</span> (<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<br>substring_index(providesalary_text,<span class="hljs-string">&#x27;-&#x27;</span>,<span class="hljs-number">1</span>)<span class="hljs-operator">*</span>unit <span class="hljs-keyword">as</span> min_salary,<br>substring_index(providesalary_text,<span class="hljs-string">&#x27;-&#x27;</span>,<span class="hljs-number">-1</span>)<span class="hljs-operator">*</span>unit <span class="hljs-keyword">as</span> max_salary<br><span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>, <br>                <span class="hljs-keyword">case</span> <br>                    <span class="hljs-keyword">when</span> providesalary_text <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%千/月%&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-number">1000</span><br>                    <span class="hljs-keyword">when</span> providesalary_text <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%万/月%&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-number">10000</span><br>                    <span class="hljs-keyword">when</span> providesalary_text <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%万/年%&#x27;</span> <span class="hljs-keyword">then</span> <span class="hljs-number">833</span> <span class="hljs-keyword">end</span> <span class="hljs-keyword">as</span> unit <br><span class="hljs-keyword">from</span> data_clean_done)t1<br>)<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,(min_salary<span class="hljs-operator">+</span>max_salary)<span class="hljs-operator">/</span><span class="hljs-number">2</span> avg_salary<br><span class="hljs-keyword">from</span> temp_data_salary<br><span class="hljs-keyword">where</span> min_salary <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span><br></code></pre></td></tr></table></figure><ol><li>   各城市平均薪酬情况</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_salary_city <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> base <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;城市&#x27;</span>,round(<span class="hljs-built_in">avg</span>(avg_salary),<span class="hljs-number">0</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;平均薪资&#x27;</span><br><span class="hljs-keyword">from</span> data_salary <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> workyear<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> round(<span class="hljs-built_in">avg</span>(avg_salary),<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZ3BfYWd2ZzRJa0t0aEI1P2U9Y1k4UFlz.png" alt="结果展示图5"></p><ol start="2"><li>   各企业类型平均薪酬情况</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_salary_company <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> companytype_text <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;企业类型&#x27;</span>,round(<span class="hljs-built_in">avg</span>(avg_salary),<span class="hljs-number">0</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;平均薪资&#x27;</span><br><span class="hljs-keyword">from</span> data_salary <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> companytype_text<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> round(<span class="hljs-built_in">avg</span>(avg_salary),<span class="hljs-number">0</span>) <span class="hljs-keyword">desc</span><br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZzBvSEF6bHNGamdUcDJYP2U9OUJYbjZi.png" alt="结果展示图6"></p><ol start="3"><li>   各工作年限平均薪酬情况</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_salary_workyear <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> workyear <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;工作年限&#x27;</span>,round(<span class="hljs-built_in">avg</span>(avg_salary),<span class="hljs-number">0</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;平均薪资&#x27;</span><br><span class="hljs-keyword">from</span> data_salary <br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> workyear<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> length(workyear),workyear<br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZ3dtZFppUm9VQ214em1sP2U9dXVEU2Ns.png" alt="结果展示图7"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZ21iSjhtSVlYYjVBVUpxP2U9cldsazM5.png" alt="可视化展示：仪表板-薪资"></p><h2 id="核心技能要求分析"><a href="#核心技能要求分析" class="headerlink" title="核心技能要求分析"></a>核心技能要求分析</h2><ol><li>   各技能出现频率统计</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> skill_quantity<span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> skill <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;需求&#x27;</span>,cnt <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;需求量&#x27;</span>,<br>concat(round(cnt<span class="hljs-operator">/</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">from</span> data_clean_done)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;%&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;占比&#x27;</span><br><span class="hljs-keyword">from</span>(<br><span class="hljs-keyword">select</span> skill,<span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) cnt<br><span class="hljs-keyword">from</span> skill_table <br><span class="hljs-keyword">join</span> data_clean_done <br><span class="hljs-keyword">on</span> data_clean_done.parse2_job_detail <span class="hljs-keyword">like</span> concat(<span class="hljs-string">&#x27;%&#x27;</span>,skill_table.skill,<span class="hljs-string">&#x27;%&#x27;</span>)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> skill <br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">desc</span><br>)t<br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZ1BIc2NIdm5fVmNmTXU2P2U9RktyTkNs.png" alt="结果展示图8"></p><ol start="2"><li>   各企业类型的核心技能要求情况<br>由于技能种类太多，所以需要筛选出每种企业类型要求频率前十的技能，并在每个分组里按照技能频率降序排序</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_skill_companytype <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> companytype_text<span class="hljs-string">&#x27;企业类型&#x27;</span>,skill<span class="hljs-string">&#x27;技能&#x27;</span>,cnt<span class="hljs-string">&#x27;需求量&#x27;</span>,<br>concat(round((cnt<span class="hljs-operator">/</span>cnt_all)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;%&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;占比&#x27;</span><br><span class="hljs-keyword">from</span> (<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> companytype_text <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> cnt <span class="hljs-keyword">desc</span>) r <br><span class="hljs-keyword">from</span> (<br><span class="hljs-keyword">select</span> companytype_text,skill,<span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) cnt<br><span class="hljs-keyword">from</span> skill_table <br><span class="hljs-keyword">join</span> data_clean_done <br><span class="hljs-keyword">on</span> data_clean_done.parse2_job_detail <span class="hljs-keyword">like</span> concat(<span class="hljs-string">&#x27;%&#x27;</span>,skill_table.skill,<span class="hljs-string">&#x27;%&#x27;</span>)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> companytype_text,skill<br>)t1<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> <br>(<span class="hljs-keyword">select</span> companytype_text,<span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) cnt_all<br><span class="hljs-keyword">from</span> skill_table <br><span class="hljs-keyword">join</span> data_clean_done <br><span class="hljs-keyword">on</span> data_clean_done.parse2_job_detail <span class="hljs-keyword">like</span> concat(<span class="hljs-string">&#x27;%&#x27;</span>,skill_table.skill,<span class="hljs-string">&#x27;%&#x27;</span>)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> companytype_text<br>)t2<br><span class="hljs-keyword">using</span>(companytype_text)<br>)t3<br><span class="hljs-keyword">where</span> r<span class="hljs-operator">&lt;</span><span class="hljs-number">11</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> companytype_text,cnt <span class="hljs-keyword">desc</span> <br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZ0Vpc3dVMkE4M21jbkRoP2U9TlRLdTdk.png" alt="结果展示图9"> </p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZ3Z0a05jMlV5R29FQUY4P2U9dkxuQzJW.png" alt="图9"></p><ol start="3"><li>   各工作年限的核心技能要求情况</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> data_skill_workyear <span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> workyear<span class="hljs-string">&#x27;工作年限&#x27;</span>,skill<span class="hljs-string">&#x27;技能&#x27;</span>,cnt<span class="hljs-string">&#x27;需求量&#x27;</span>,<br>concat(round((cnt<span class="hljs-operator">/</span>cnt_all)<span class="hljs-operator">*</span><span class="hljs-number">100</span>,<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;%&#x27;</span>) <span class="hljs-keyword">as</span> <span class="hljs-string">&#x27;占比&#x27;</span><br><span class="hljs-keyword">from</span> (<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span>(<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> workyear <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> cnt <span class="hljs-keyword">desc</span>) r <br><span class="hljs-keyword">from</span> (<br><span class="hljs-keyword">select</span> workyear,skill,<span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) cnt<br><span class="hljs-keyword">from</span> skill_table <br><span class="hljs-keyword">join</span> data_clean_done <br><span class="hljs-keyword">on</span> data_clean_done.parse2_job_detail <span class="hljs-keyword">like</span> concat(<span class="hljs-string">&#x27;%&#x27;</span>,skill_table.skill,<span class="hljs-string">&#x27;%&#x27;</span>)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> workyear,skill<br>)t1<br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> <br>(<span class="hljs-keyword">select</span> workyear,<span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) cnt_all<br><span class="hljs-keyword">from</span> skill_table <br><span class="hljs-keyword">join</span> data_clean_done <br><span class="hljs-keyword">on</span> data_clean_done.parse2_job_detail <span class="hljs-keyword">like</span> concat(<span class="hljs-string">&#x27;%&#x27;</span>,skill_table.skill,<span class="hljs-string">&#x27;%&#x27;</span>)<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> workyear<br>)t2<br><span class="hljs-keyword">using</span>(workyear)<br>)t3<br><span class="hljs-keyword">where</span> r<span class="hljs-operator">&lt;</span><span class="hljs-number">11</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> length(workyear),workyear,cnt <span class="hljs-keyword">desc</span> <br></code></pre></td></tr></table></figure><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZ2hnREdTRklUaDU3bVJfP2U9TnNiTGhp.png" alt="结果展示图10"> </p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZ1pHaXJGNEtHNUdlUGMxP2U9RzJoMlc4.png" alt="图10"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZ0lVRVJTUXJOTWVUODJQP2U9emd4QnV2.png" alt="可视化展示：技能-频次-气泡图"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrZ1UtWVUwVTU5Sl9iYzRJP2U9bzhoSmRw.png" alt="仪表板-技能-条形图"></p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><ul><li><p>需求方面</p><ul><li><p>数据分析需求最旺盛的城市是上海</p></li><li><p>数据分析需求最多的企业类型是民营企业</p></li><li><p>数据分析最需要的工作经验是3-5年</p></li></ul></li><li><p>薪资方面</p><ul><li><p>数据分析师的薪资很有竞争力</p></li><li><p>北京的平均工资最高</p></li><li><p>1-3年的平均薪资为9k，10年以上的薪资不具备参考</p></li><li><p>不同企业的平均薪资相差不大</p></li></ul></li><li><p>技能方面</p><ul><li>核心技能为SQL、大数据、Excel、Python、报告、数据挖掘等</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL</tag>
      
      <tag>数据分析</tag>
      
      <tag>TABLEAU</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>营销工程报告</title>
    <link href="/2020/05/21/%E8%90%A5%E9%94%80%E5%B7%A5%E7%A8%8B/"/>
    <url>/2020/05/21/%E8%90%A5%E9%94%80%E5%B7%A5%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p><strong>目 录</strong></p><table><thead><tr><th>实验一</th><th>联合分析</th></tr></thead><tbody><tr><td>实验二</td><td>因子分析</td></tr><tr><td>实验三</td><td>树模型分析</td></tr><tr><td>实验四</td><td>多维尺度分析</td></tr><tr><td>实验五</td><td>多元回归分析</td></tr><tr><td>实验六</td><td>衍生模型</td></tr><tr><td>实验七</td><td>聚类分析（市场细分）</td></tr></tbody></table><table><thead><tr><th>实验一</th><th>联合分析</th><th></th><th></th></tr></thead><tbody><tr><td>实验属性</td><td>综合型</td><td>实验时间</td><td>2020.3.19</td></tr></tbody></table><p>实验目的</p><p>利用数据文件进行联合分析，了解联合分析的方式方法。</p><p>实验内容</p><p>通过最大效用模型将数据的重要性进行排序和对比，分析出对乘客最重要的因素。</p><p>实验步骤和实验结果分析</p><table><thead><tr><th>模型描述</th><th></th><th></th></tr></thead><tbody><tr><td></td><td>水平数</td><td>与排列或得分相关</td></tr><tr><td>warranty</td><td>3</td><td>离散 （大于）</td></tr><tr><td>seats</td><td>2</td><td>离散</td></tr><tr><td>price</td><td>3</td><td>线性</td></tr><tr><td>speed</td><td>3</td><td>线性</td></tr><tr><td>并非所有因子都是正交因子。</td><td></td><td></td></tr></tbody></table><table><thead><tr><th>因子水平的相关性</th><th></th><th></th></tr></thead><tbody><tr><td></td><td>因子 A 的水平</td><td>因子 B 的水平</td></tr><tr><td>1</td><td>warranty &#x3D; 1</td><td>seats &#x3D; 4</td></tr><tr><td>2</td><td>warranty &#x3D; 3</td><td>seats &#x3D; 4</td></tr><tr><td>3</td><td>seats &#x3D; 2</td><td>warranty &#x3D; 5</td></tr><tr><td>左侧的因子水平始终与右侧的因子水平一起出现。</td><td></td><td></td></tr></tbody></table><p>从上面两个表看来，实验设计无误</p><table><thead><tr><th>Cramer 的 V 统计量</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>warranty</td><td>seats</td><td>price</td><td>speed</td></tr><tr><td>warranty</td><td>1</td><td>.866</td><td>.365</td><td>.144</td></tr><tr><td>seats</td><td>.866</td><td>1</td><td>.400</td><td>.122</td></tr><tr><td>price</td><td>.365</td><td>.400</td><td>1</td><td>.412</td></tr><tr><td>speed</td><td>.144</td><td>.122</td><td>.412</td><td>1</td></tr><tr><td>并非所有因子都是正交因子。</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>Waranty与seats存在较强的相关性，因子间不存在强共线性</p><p>以主体 6: 6来分析</p><table><thead><tr><th>实用程序</th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>实用程序估计</td><td>标准误</td><td></td></tr><tr><td>warranty</td><td>1</td><td>-2.448</td><td>2.494</td></tr><tr><td></td><td>3</td><td>1.040</td><td>3.095</td></tr><tr><td></td><td>5</td><td>1.408</td><td>3.940</td></tr><tr><td>seats</td><td>2</td><td>-1.554</td><td>2.966</td></tr><tr><td></td><td>4</td><td>1.554</td><td>2.966</td></tr><tr><td>price</td><td>7000</td><td>-2.853</td><td>4.233</td></tr><tr><td></td><td>10000</td><td>-4.076</td><td>6.048</td></tr><tr><td></td><td>14000</td><td>-5.707</td><td>8.467</td></tr><tr><td>speed</td><td>70</td><td>.027</td><td>4.333</td></tr><tr><td></td><td>100</td><td>.038</td><td>6.190</td></tr><tr><td></td><td>130</td><td>.049</td><td>8.047</td></tr><tr><td>（常数）</td><td>11.865</td><td>7.046</td><td></td></tr></tbody></table><p>上表列出的是受测者6作评价时各属性水平的受欢迎程度，数值越高受欢迎程度越高。对受测者6而言，他喜欢5年担保、4座、1.4万美元、时速为70的汽车。</p><table><thead><tr><th>重要性值</th><th></th></tr></thead><tbody><tr><td>warranty</td><td>39.193</td></tr><tr><td>seats</td><td>31.577</td></tr><tr><td>price</td><td>28.998</td></tr><tr><td>speed</td><td>.232</td></tr></tbody></table><p>表示进行评价时个属性的相对重要程度，担保情况&gt;座位数&gt;价格&gt;时速。</p><table><thead><tr><th>相关性a</th><th></th><th></th></tr></thead><tbody><tr><td></td><td>值</td><td>Sig.</td></tr><tr><td>Pearson 的 R</td><td>.395</td><td>.073</td></tr><tr><td>Kendall 的 tau</td><td>.276</td><td>.076</td></tr><tr><td>a. 已观测偏好和估计偏好之间的相关性</td><td></td><td></td></tr></tbody></table><p>0.073&gt;0.05，模型拟合效果较差，只有＜0.05时，拟合才比较好</p><p>整体统计量</p><table><thead><tr><th>模拟的偏好分数</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>卡编号</td><td>ID</td><td>得分</td><td></td></tr><tr><td>dimension0</td><td>1</td><td>2</td><td>8.434</td></tr><tr><td></td><td>2</td><td>4</td><td>9.441</td></tr><tr><td></td><td>3</td><td>7</td><td>9.081</td></tr><tr><td></td><td>4</td><td>11</td><td>7.538</td></tr><tr><td></td><td>5</td><td>12</td><td>10.333</td></tr><tr><td></td><td>6</td><td>14</td><td>8.030</td></tr></tbody></table><p>相差不大</p><table><thead><tr><th>模拟的偏好概率b</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>卡编号</td><td>ID</td><td>最大效用a</td><td>Bradley-Terry-Luce</td><td>分对数</td><td></td></tr><tr><td>dimension0</td><td>1</td><td>2</td><td>16.7%</td><td>16.0%</td><td>21.7%</td></tr><tr><td></td><td>2</td><td>4</td><td>16.7%</td><td>17.8%</td><td>13.0%</td></tr><tr><td></td><td>3</td><td>7</td><td>.0%</td><td>17.2%</td><td>10.1%</td></tr><tr><td></td><td>4</td><td>11</td><td>16.7%</td><td>14.3%</td><td>13.3%</td></tr><tr><td></td><td>5</td><td>12</td><td>33.3%</td><td>19.5%</td><td>31.5%</td></tr><tr><td></td><td>6</td><td>14</td><td>16.7%</td><td>15.2%</td><td>10.4%</td></tr><tr><td>a. 包括约束模拟</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>b. 由于这些主体的得分都是非负数，因此 Bradley-Terry-Luce 和分对数方法中使用了 6 个主体中的 6 个主体。</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>逆转次数</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>因子</td><td>warranty</td><td>3</td><td></td></tr><tr><td></td><td>speed</td><td>0</td><td></td></tr><tr><td></td><td>price</td><td>0</td><td></td></tr><tr><td></td><td>seats</td><td>0</td><td></td></tr><tr><td>主体</td><td>1</td><td>主体 1</td><td>0</td></tr><tr><td></td><td>2</td><td>主体 2</td><td>1</td></tr><tr><td></td><td>3</td><td>主体 3</td><td>0</td></tr><tr><td></td><td>4</td><td>主体 4</td><td>1</td></tr><tr><td></td><td>5</td><td>主体 5</td><td>1</td></tr><tr><td></td><td>6</td><td>主体 6</td><td>0</td></tr></tbody></table><p><img src="/a818986255d5d80780126d463116eb20.png"></p><p>不同水平对不同个体的效用图，对大多数受測者而言，随着等级的上升，消费者的偏好有增大趋势，其中有两个特殊个体，2的去失物大多数人相反，5则受担保影响不大。</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQ2k2WG5tbVJoYzVzQ0V3P2U9V3hjSUJT.png"></p><p>不同属性对个体平均效用条图。除了3、5受测者，大多数受测者受warranty、seats、price影响，受speed影响较弱。5受speed影响较大，3受warranty影响较大</p><table><thead><tr><th>实验二</th><th>因子分析</th><th></th><th></th></tr></thead><tbody><tr><td>实验属性</td><td>综合型</td><td>实验时间</td><td>2020.4.2</td></tr></tbody></table><p>实验目的</p><p>根据因子分析得出各因子得分以及排序。</p><p>实验内容</p><p>利用各地区平均收入的数据进行因子分析，了解分析内容。</p><p>实验步骤和实验结果分析</p><table><thead><tr><th><strong>KMO 和 Bartlett 的检验</strong></th><th></th><th></th></tr></thead><tbody><tr><td>取样足够度的 Kaiser-Meyer-Olkin 度量。</td><td>.620</td><td></td></tr><tr><td>Bartlett 的球形度检验</td><td>近似卡方</td><td>231.285</td></tr><tr><td></td><td>df</td><td>28</td></tr><tr><td></td><td>Sig.</td><td>.000</td></tr></tbody></table><p>Bartlett 说明可以拒绝各变量独立的假设，可以做银因子分析</p><p>Kmo统计量为0.620.小于0.7，各变量间的信息重叠度不是特别高，做出的因子分析模型可能不是特别完善。</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQXVWMWY3cW50N2MzVUxIP2U9Qkp6bWNL.png"></p><p>显示各个因子的重要性程度，前三个因子在陡坡上，后五个因子坡不高，且特征跟小于1，因此多考虑前三个公因子即可。</p><table><thead><tr><th><strong>公因子方差</strong></th><th></th></tr></thead><tbody><tr><td></td><td>提取</td></tr><tr><td>GDP</td><td>.945</td></tr><tr><td>居民消费水平</td><td>.799</td></tr><tr><td>固定资产投资</td><td>.902</td></tr><tr><td>职工平均工资</td><td>.873</td></tr><tr><td>货物周转量</td><td>.857</td></tr><tr><td>居民消费价格指数</td><td>.957</td></tr><tr><td>商品价格指数</td><td>.928</td></tr><tr><td>工业总产值</td><td>.904</td></tr><tr><td>提取方法：主成份分析。</td><td></td></tr></tbody></table><p>表示原始信息能被提取的公因子所表示的程度，几乎所有变凉都在80%以上，因此提取出的公因子对各变量解释能力较强。</p><table><thead><tr><th><strong>成份矩阵a</strong></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>成份</td><td></td><td></td></tr><tr><td></td><td>1</td><td>2</td><td>3</td></tr><tr><td>GDP</td><td>.884</td><td>.385</td><td>.120</td></tr><tr><td>居民消费水平</td><td>.606</td><td>-.596</td><td>.277</td></tr><tr><td>固定资产投资</td><td>.911</td><td>.163</td><td>.213</td></tr><tr><td>职工平均工资</td><td>.465</td><td>-.725</td><td>.362</td></tr><tr><td>货物周转量</td><td>.486</td><td>.737</td><td>-.279</td></tr><tr><td>居民消费价格指数</td><td>-.510</td><td>.257</td><td>.794</td></tr><tr><td>商品价格指数</td><td>-.621</td><td>.596</td><td>.433</td></tr><tr><td>工业总产值</td><td>.822</td><td>.429</td><td>.210</td></tr><tr><td>提取方法 :主成份。</td><td></td><td></td><td></td></tr><tr><td>a. 已提取了 3 个成份。</td><td></td><td></td><td></td></tr></tbody></table><p>因子表达式为：</p><p>ZX1&#x3D;0.884F1+0.385F2+0.120F3+e1</p><p>ZX2&#x3D;0.606-0.596F2+0.277F3+e2</p><p>………</p><p>ZX8&#x3D;0.822F1+0.492F2+0.210F3+e3</p><table><thead><tr><th><strong>旋转成份矩阵a</strong></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>成份</td><td></td><td></td></tr><tr><td></td><td>1</td><td>2</td><td>3</td></tr><tr><td>GDP</td><td>.955</td><td>.124</td><td>-.131</td></tr><tr><td>工业总产值</td><td>.944</td><td>.109</td><td>-.014</td></tr><tr><td>固定资产投资</td><td>.872</td><td>.351</td><td>-.137</td></tr><tr><td>货物周转量</td><td>.751</td><td>-.507</td><td>-.192</td></tr><tr><td>职工平均工资</td><td>.048</td><td>.925</td><td>-.121</td></tr><tr><td>居民消费水平</td><td>.219</td><td>.841</td><td>-.209</td></tr><tr><td>居民消费价格指数</td><td>-.135</td><td>-.013</td><td>.969</td></tr><tr><td>商品价格指数</td><td>-.104</td><td>-.496</td><td>.819</td></tr><tr><td>提取方法 :主成份。   旋转法 :具有 Kaiser 标准化的正交旋转法。</td><td></td><td></td><td></td></tr><tr><td>a. 旋转在 5 次迭代后收敛。</td><td></td><td></td><td></td></tr></tbody></table><p>第一公因子在X1.X3.X5.X8有较大载荷，命名为总量因子</p><p>第二公因子在X2.X4有较大载荷，命名为消费因子</p><p>第三公因子在X6.X7有较大载荷，命名为价格因子</p><table><thead><tr><th><strong>成份得分系数矩阵</strong></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>成份</td><td></td><td></td></tr><tr><td></td><td>1</td><td>2</td><td>3</td></tr><tr><td>GDP</td><td>.306</td><td>.011</td><td>.047</td></tr><tr><td>居民消费水平</td><td>.025</td><td>.387</td><td>.040</td></tr><tr><td>固定资产投资</td><td>.270</td><td>.129</td><td>.075</td></tr><tr><td>职工平均工资</td><td>-.025</td><td>.451</td><td>.096</td></tr><tr><td>货物周转量</td><td>.248</td><td>-.319</td><td>-.139</td></tr><tr><td>居民消费价格指数</td><td>.070</td><td>.180</td><td>.653</td></tr><tr><td>商品价格指数</td><td>.077</td><td>-.098</td><td>.462</td></tr><tr><td>工业总产值</td><td>.317</td><td>.026</td><td>.123</td></tr><tr><td>提取方法 :主成份。   旋转法 :具有 Kaiser 标准化的正交旋转法。   构成得分。</td><td></td><td></td><td></td></tr></tbody></table><p>F1&#x3D;0.306ZX1+0.025ZX2+0.270ZX3-0.025ZX4+0.248ZX5+0.070ZX6+0.077ZX7+0.317ZX8</p><p>F2&#x3D;0.011ZX1+0.387ZX2+0.129ZX3+0.451ZX4-0.319ZX5+0.180ZX6-0.098ZX7+0.026ZX8</p><p>F3&#x3D;0.047ZX1+0.025ZX2+0.075ZX3+0.096ZX4-0.139ZX5+0.653ZX6+0.462ZX7+0.123ZX8</p><table><thead><tr><th><strong>元件評分係數矩陣</strong></th><th></th></tr></thead><tbody><tr><td></td><td>元件</td></tr><tr><td></td><td>1</td></tr><tr><td>国有经济单位</td><td>.172</td></tr><tr><td>集体经济单位</td><td>.168</td></tr><tr><td>联营经济单位</td><td>.141</td></tr><tr><td>股份制经济单位</td><td>.161</td></tr><tr><td>外商投资经济单位</td><td>.168</td></tr><tr><td>港澳台经济单位</td><td>.174</td></tr><tr><td>其他经济单位</td><td>.141</td></tr><tr><td>擷取方法：主體元件分析。   轉軸方法：具有 Kaiser 正規化的最大變異法。   元件評分。</td><td></td></tr></tbody></table><p>由表中数据可以得到公因子的表达式为</p><p>F1&#x3D;0.172ZX1+0.168ZX2+0.141ZX3+0.161ZX4+0.168ZX5+0.174ZX6+0.141ZX7</p><p>计算因子A&#x3D;5.502*FAC1-2并且按大小排序得到排序结果如下：</p><p><img src="/aca94b43580dd9b1640d6533a7b9e63d.png" alt="IMG_256"></p><p>经济发展最好的是上海、江苏、山东地区；发展较差的是海南、宁夏、安徽</p><table><thead><tr><th>实验三</th><th>树模型分析</th><th></th><th></th></tr></thead><tbody><tr><td>实验属性</td><td>综合型</td><td>实验时间</td><td>2020.4.9</td></tr></tbody></table><p>实验目的</p><p>通过树模型将数据进行分析，了解树模型分析和内容。</p><p>实验内容</p><p>进行树模型分析，</p><p>要求：</p><p>1）基本操作；2）考虑变量的重要性；3）考虑应用模型时的成本与收益；4）剪枝。</p><p>实验步骤和实验结果分<img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQXhPQmd0Yi1RXzVfa1IxP2U9aWV6bUpI.png"></p><table><thead><tr><th><strong>节点的收益</strong></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>节点</td><td>节点</td><td>增益</td><td>响应</td><td>指数</td><td></td><td></td></tr><tr><td></td><td>N</td><td>百分比</td><td>N</td><td>百分比</td><td></td><td></td></tr><tr><td>7</td><td>121</td><td>12.1%</td><td>76</td><td>27.7%</td><td>62.8%</td><td>229.2%</td></tr><tr><td>8</td><td>90</td><td>9.0%</td><td>53</td><td>19.3%</td><td>58.9%</td><td>214.9%</td></tr><tr><td>3</td><td>237</td><td>23.7%</td><td>71</td><td>25.9%</td><td>30.0%</td><td>109.3%</td></tr><tr><td>6</td><td>173</td><td>17.3%</td><td>43</td><td>15.7%</td><td>24.9%</td><td>90.7%</td></tr><tr><td>5</td><td>379</td><td>37.9%</td><td>31</td><td>11.3%</td><td>8.2%</td><td>29.9%</td></tr><tr><td>增长方法:CRT 因变量列表: Churn within last month</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>响应指每个节点中流失的比率；指数是指响应和比率百分比的对比，指数越高，表明响应的提升指数越高，节点的收益率更高</p><table><thead><tr><th><strong>风险</strong></th><th></th><th></th></tr></thead><tbody><tr><td>方法</td><td>估计</td><td>标准 误差</td></tr><tr><td>重新替代</td><td>.227</td><td>.013</td></tr><tr><td>交叉验证</td><td>.229</td><td>.013</td></tr><tr><td>增长方法:CRT 因变量列表: Churn within last month</td><td></td><td></td></tr></tbody></table><p>如果使用重新替代法会有22.7%的案例会在模型中被除分，如果使用交叉验证法会有22.9%的案例会在模型中被除分，两种方法都有误差</p><table><thead><tr><th><strong>分类</strong></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>已观测</td><td>已预测</td><td></td><td></td></tr><tr><td></td><td>No</td><td>Yes</td><td>正确百分比</td></tr><tr><td>No</td><td>644</td><td>82</td><td>88.7%</td></tr><tr><td>Yes</td><td>145</td><td>129</td><td>47.1%</td></tr><tr><td>总计百分比</td><td>78.9%</td><td>21.1%</td><td>77.3%</td></tr><tr><td>增长方法:CRT 因变量列表: Churn within last month</td><td></td><td></td><td></td></tr></tbody></table><p>上表表明了按照构建的树模型进行预测，预测的正确率，显示了预测的正确率为77.3%，实际正确率为47.1%</p><table><thead><tr><th><strong>自变量的重要性</strong></th><th></th><th></th></tr></thead><tbody><tr><td>自变量</td><td>重要性</td><td>标准化的重要性</td></tr><tr><td>Equipment last month</td><td>.066</td><td>100.0%</td></tr><tr><td>Equipment rental</td><td>.065</td><td>98.6%</td></tr><tr><td>Months with service</td><td>.061</td><td>92.0%</td></tr><tr><td>Long distance over tenure</td><td>.057</td><td>85.6%</td></tr><tr><td>Internet</td><td>.052</td><td>78.5%</td></tr><tr><td>Electronic billing</td><td>.045</td><td>67.7%</td></tr><tr><td>Log-long distance</td><td>.036</td><td>54.3%</td></tr><tr><td>Long distance last month</td><td>.036</td><td>54.3%</td></tr><tr><td>Calling card over tenure</td><td>.035</td><td>53.5%</td></tr><tr><td>Age in years</td><td>.031</td><td>47.0%</td></tr><tr><td>Equipment over tenure</td><td>.029</td><td>43.3%</td></tr><tr><td>Years with current employer</td><td>.025</td><td>37.7%</td></tr><tr><td>Years at current address</td><td>.025</td><td>37.3%</td></tr><tr><td>Level of education</td><td>.024</td><td>36.1%</td></tr><tr><td>Calling card service</td><td>.024</td><td>35.8%</td></tr><tr><td>Calling card last month</td><td>.023</td><td>35.6%</td></tr><tr><td>Log-wireless</td><td>.016</td><td>23.9%</td></tr><tr><td>Log-toll free</td><td>.016</td><td>23.6%</td></tr><tr><td>Toll free over tenure</td><td>.013</td><td>19.5%</td></tr><tr><td>Voice mail</td><td>.012</td><td>17.5%</td></tr><tr><td>Wireless last month</td><td>.008</td><td>12.6%</td></tr><tr><td>Wireless over tenure</td><td>.008</td><td>12.5%</td></tr><tr><td>Wireless service</td><td>.007</td><td>11.2%</td></tr><tr><td>Log-equipment</td><td>.007</td><td>10.4%</td></tr><tr><td>Paging service</td><td>.006</td><td>9.0%</td></tr><tr><td>Toll free last month</td><td>.006</td><td>8.9%</td></tr><tr><td>Multiple lines</td><td>.006</td><td>8.6%</td></tr><tr><td>Log-income</td><td>.004</td><td>6.3%</td></tr><tr><td>Household income in thousands</td><td>.004</td><td>6.3%</td></tr><tr><td>Marital status</td><td>.001</td><td>2.3%</td></tr><tr><td>Caller ID</td><td>.001</td><td>1.6%</td></tr><tr><td>Log-calling card</td><td>.001</td><td>1.5%</td></tr><tr><td>Number of people in household</td><td>.001</td><td>1.2%</td></tr><tr><td>增长方法:CRT 因变量列表: Churn within last month</td><td></td><td></td></tr></tbody></table><p>上表表明最重要的是设备上个月的使用情况，第二重要的是设备租用情况，上表中的标准化重要性是将最重要的变量换算为100%</p><p>部分最重要的并没有显示在开始的树模型分支中，表明根据重要性分支不太准确，只能局部最优。</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQjdFZy1zampUYWZqSld4P2U9UWVoc0JY.png"></p><table><thead><tr><th><strong>风险</strong></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>方法</td><td>估计</td><td>标准 误差</td><td></td></tr><tr><td>重新替代</td><td>3.440</td><td>.274</td><td></td></tr><tr><td>交叉验证</td><td>3.690</td><td>.218</td><td></td></tr><tr><td>增长方法:CRT 因变量列表: Churn within last month</td><td></td><td></td><td></td></tr><tr><td><strong>分类</strong></td><td></td><td></td><td></td></tr><tr><td>已观测</td><td>已预测</td><td></td><td></td></tr><tr><td></td><td>No</td><td>Yes</td><td>正确百分比</td></tr><tr><td>No</td><td>348</td><td>378</td><td>47.9%</td></tr><tr><td>Yes</td><td>31</td><td>243</td><td>88.7%</td></tr><tr><td>总计百分比</td><td>37.9%</td><td>62.1%</td><td>59.1%</td></tr><tr><td>增长方法:CRT 因变量列表: Churn within last month</td><td></td><td></td><td></td></tr></tbody></table><p>在设定YES与NO的成本后树模型的总预测正确率由77.3%下降至59.1%，但流失样本的预测正确率上升至88.7%</p><p>该模型适用于预测实际客户流失。</p><table><thead><tr><th><strong>节点的收益汇总</strong></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>节点</td><td>N</td><td>百分比</td><td>利润</td><td>投资回报率</td></tr><tr><td>7</td><td>121</td><td>12.1%</td><td>28.264</td><td>900.0%</td></tr><tr><td>8</td><td>90</td><td>9.0%</td><td>26.500</td><td>900.0%</td></tr><tr><td>3</td><td>237</td><td>23.7%</td><td>13.481</td><td>900.0%</td></tr><tr><td>6</td><td>173</td><td>17.3%</td><td>11.185</td><td>900.0%</td></tr><tr><td>5</td><td>379</td><td>37.9%</td><td>3.681</td><td>900.0%</td></tr><tr><td>增长方法:CRT 因变量列表: Churn within last month</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>由该表看出投资回报率为900%</p><p><strong>剪枝</strong></p><table><thead><tr><th><strong>模型汇总</strong></th><th></th><th></th></tr></thead><tbody><tr><td>指定</td><td>增长方法</td><td>CRT</td></tr><tr><td></td><td>因变量</td><td>Churn within last month</td></tr><tr><td></td><td>自变量</td><td>Geographic indicator, Months with service, Age in years, Marital status, Years at current address, Household income in thousands, Level of education, Years with current employer, Retired, Gender, Number of people in household, Toll free service, Equipment rental, Calling card service, Wireless service, Long distance last month, Toll free last month, Equipment last month, Calling card last month, Wireless last month, Long distance over tenure, Toll free over tenure, Equipment over tenure, Calling card over tenure, Wireless over tenure, Multiple lines, Voice mail, Paging service, Internet, Caller ID, Call waiting, Call forwarding, 3-way calling, Electronic billing, Log-long distance, Log-toll free, Log-equipment, Log-calling card, Log-wireless, Log-income</td></tr><tr><td></td><td>验证</td><td>无</td></tr><tr><td></td><td>最大树深度</td><td>5</td></tr><tr><td></td><td>父节点中的最小个案</td><td>50</td></tr><tr><td></td><td>子节点中的最小个案</td><td>10</td></tr><tr><td>结果</td><td>自变量已包括</td><td>Months with service, Long distance over tenure, Calling card over tenure, Long distance last month, Log-long distance, Log-toll free, Calling card last month, Calling card service, Years with current employer, Log-wireless, Years at current address, Age in years, Toll free over tenure, Log-calling card, Log-equipment, Multiple lines, Household income in thousands, Log-income, Equipment over tenure, Wireless over tenure, Equipment rental, Equipment last month, Toll free last month, Electronic billing, Internet, Number of people in household, Level of education, Marital status, Wireless last month, Wireless service, Paging service, Voice mail</td></tr><tr><td></td><td>节点数</td><td>5</td></tr><tr><td></td><td>终端节点数</td><td>3</td></tr><tr><td></td><td>深度</td><td>2</td></tr></tbody></table><p><img src="/cae2425b1a3a6d1079db46723366e1bb.png"></p><table><thead><tr><th><strong>节点的收益汇总</strong></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>节点</td><td>N</td><td>百分比</td><td>利润</td><td>投资回报率</td></tr><tr><td>1</td><td>448</td><td>44.8%</td><td>20.089</td><td>900.0%</td></tr><tr><td>4</td><td>173</td><td>17.3%</td><td>11.185</td><td>900.0%</td></tr><tr><td>3</td><td>379</td><td>37.9%</td><td>3.681</td><td>900.0%</td></tr><tr><td>增长方法:CRT 因变量列表: Churn within last month</td><td></td><td></td><td></td><td></td></tr><tr><td><strong>风险</strong></td><td></td><td></td><td></td><td></td></tr><tr><td>估计</td><td>标准 误差</td><td></td><td></td><td></td></tr><tr><td>3.440</td><td>.274</td><td></td><td></td><td></td></tr><tr><td>增长方法:CRT 因变量列表: Churn within last month</td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>实验四</th><th>多维尺度分析</th><th></th><th></th></tr></thead><tbody><tr><td>实验属性</td><td>综合型</td><td>实验时间</td><td>2020.4.16</td></tr></tbody></table><p>实验目的</p><p>利用数据文件进行多维尺度分析，了解多维尺度分析模型</p><p>实验内容</p><p>实验数据：</p><p>1、Mds1.Sav</p><p>2、Mds2.Sav</p><p>3、Mds3.Sav</p><p>通过“分析-度量-ASLCAL”和“分析-度量-PROXSCAL-多个矩阵源”进行数据分析</p><p>实验步骤</p><p>非度量MDS模型</p><p>Iteration history for the 2 dimensional solution (in squared distances)</p><p>Young’s S-stress formula 1 is used.</p><p>Iteration S-stress Improvement</p><p>1 .21604</p><p>2 .19665 .01939</p><p>3 .19627 .00039</p><p>Iterations stopped because</p><p>S-stress improvement is less than .001000</p><p>Stress and squared correlation (RSQ) in distances</p><p>RSQ values are the proportion of variance of the scaled data (disparities)</p><p>in the partition (row, matrix, or entire data) which</p><p>is accounted for by their corresponding distances.</p><p>Stress values are Kruskal’s stress formula 1.</p><p>For matrix</p><p>Stress &#x3D; .21371 RSQ &#x3D; .85687</p><p>Configuration derived in 2 dimensions</p><p>Stimulus Coordinates</p><p>Dimension</p><p>Stimulus Stimulus 1 2</p><p>Number Name</p><p>1 北京大学 .7520 .9637</p><p>2 北京师大 -1.5576 -.1711</p><p>3 南京大学 .8157 1.3724</p><p>4 中国科大 1.1139 -.9834</p><p>5 复旦大学 .4676 .7661</p><p>6 华东师大 -1.3944 -.1676</p><p>7 清华大学 .9350 -.6521</p><p>8 上海交大 .7042 -1.1605</p><p>9 东北师大 -1.8364 .0325</p><p>模型的Stress的值为0.21371，RSQ的值为0.85687</p><p>模型的解释程度不是特别好。</p><p><img src="/bf39aec57cbfdb1bfa41e2bcef026295.png"></p><p>9所大学被分成了3个部分：</p><p>南京大学、北京大学、复旦大学（文科类）；</p><p>清华大学、中国科大、上海交大（理科类）；</p><p>东北师大、北京师大、华东师大（师范类）。</p><p>警告 # 14654</p><p>The total number of parameters being estimated (the number of stimulus</p><p>coordinates plus the number of weights, if any) is large relative to the</p><p>number of data values in your data matrix. The results may not be reliable</p><p>since there may not be enough data to precisely estimate the values of the</p><p>parameters. You should reduce the number of parameters (e.g. request fewer</p><p>dimensions) or increase the number of observations.</p><p>Number of parameters is 18. Number of data values is 36</p><p>Iteration history for the 2 dimensional solution (in squared distances)</p><p>Young’s S-stress formula 1 is used.</p><p>Iteration S-stress Improvement</p><p>1 .03999</p><p>2 .02976 .01022</p><p>3 .02344 .00632</p><p>4 .01889 .00455</p><p>5 .01548 .00341</p><p>6 .01315 .00233</p><p>7 .01161 .00154</p><p>8 .01057 .00104</p><p>9 .00983 .00075</p><p>Iterations stopped because</p><p>S-stress improvement is less than .001000</p><p>Stress and squared correlation (RSQ) in distances</p><p>RSQ values are the proportion of variance of the scaled data (disparities)</p><p>in the partition (row, matrix, or entire data) which</p><p>is accounted for by their corresponding distances.</p><p>Stress values are Kruskal’s stress formula 1.</p><p>For matrix</p><p>Stress &#x3D; .01576 RSQ &#x3D; .99873</p><p>Configuration derived in 2 dimensions</p><p>Stimulus Coordinates</p><p>Dimension</p><p>Stimulus Stimulus 1 2</p><p>Number Name</p><p>1 北京大学 .8976 .6594</p><p>2 北京师大 -1.5806 .0057</p><p>3 南京大学 .9032 1.3487</p><p>4 中国科大 1.0973 -.9972</p><p>5 复旦大学 .5568 .4776</p><p>6 华东师大 -1.4993 -.1055</p><p>7 清华大学 .9210 -.2819</p><p>8 上海交大 .6653 -1.1866</p><p>9 东北师大 -1.9612 .0798</p><p>该模型的stress&#x3D;0.01576，RSQ&#x3D;0.99873，其效果比古典模型效果好。</p><p>但在转换过程中会有一些数据的流失，所以无法立即判断出到底是转换后的模型更好，还是原来的模型好。</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsRE5wc2ViUXQwSkhnZE5uP2U9eHo0U1FD.png"></p><p>9所高校仍然被分成了3类，但师范类的距离被缩小了，而文科类和理科类之间的距离却被模糊了。</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQ0NJcjh6dFJNNUx1dzlIP2U9ZGJTdFlW.png"><img src="/dab0699c012099ef8dee1ed02b2a1fa6.png"></p><p>古典MDS模型</p><p>Iteration history for the 2 dimensional solution (in squared distances)</p><p>Young’s S-stress formula 1 is used.</p><p>Iteration S-stress Improvement</p><p>1 .05144</p><p>2 .04720 .00424</p><p>3 .04714 .00005</p><p>Iterations stopped because</p><p>S-stress improvement is less than .001000</p><p>Stress and squared correlation (RSQ) in distances</p><p>RSQ values are the proportion of variance of the scaled data (disparities)</p><p>in the partition (row, matrix, or entire data) which</p><p>is accounted for by their corresponding distances.</p><p>Stress values are Kruskal’s stress formula 1.</p><p>For matrix</p><p>Stress &#x3D; .03678 RSQ &#x3D; .99389</p><p>Configuration derived in 2 dimensions</p><p>Stimulus Coordinates</p><p>Dimension</p><p>Stimulus Stimulus 1 2</p><p>Number Name</p><p>1 北京 1.0964 -1.8824</p><p>2 合肥 .6331 -.2167</p><p>3 长沙 -.4960 .2102</p><p>4 杭州 1.0866 .2964</p><p>5 南昌 .0387 .4026</p><p>6 南京 .9062 -.1710</p><p>7 上海 1.2038 .1377</p><p>8 武汉 -.0744 -.1568</p><p>9 广州 -.6766 1.3132</p><p>10 成都 -1.8158 -.9225</p><p>11 福州 .6795 1.1235</p><p>12 昆明 -2.5815 -.1342</p><p>RSQ系数为0.99389，拟合程度非常好；</p><p>Stress&#x3D;0.03678，说明该多维尺度分析对12个城市之间距离的拟合效果是相当不错的。</p><p><img src="/f11dd54f9e05b71d756838d8e05b57cd.png"></p><p>该图上各城市的绝对位置与地图的排列并不是完全一致的，但它们之间的相对位置与地图上却是一致的，以武汉、广州、长沙和北京为例。</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQlE4ZHh6cTd6XzBMWGNMP2U9YU1vYzZZ.png"></p><p>由散点图可以看出模型的拟合程度较好，但点的分布隐约呈两条直线，这是因为地球是个球体，而我们求的是一个航空距离，转换到平面的二维坐标系难免会有偏差。</p><p>Iteration history for the 1 dimensional solution (in squared distances)</p><p>Young’s S-stress formula 1 is used.</p><p>Iteration S-stress Improvement</p><p>1 .39193</p><p>2 .32290 .06903</p><p>3 .32258 .00032</p><p>Iterations stopped because</p><p>S-stress improvement is less than .001000</p><p>Stress and squared correlation (RSQ) in distances</p><p>RSQ values are the proportion of variance of the scaled data (disparities)</p><p>in the partition (row, matrix, or entire data) which</p><p>is accounted for by their corresponding distances.</p><p>Stress values are Kruskal’s stress formula 1.</p><p>For matrix</p><p>Stress &#x3D; .27030 RSQ &#x3D; .79457</p><p>Configuration derived in 1 dimensions</p><p>Stimulus Coordinates</p><p>Dimension</p><p>Stimulus Stimulus 1</p><p>Number Name</p><p>1 北京 -1.4796</p><p>2 合肥 -.4829</p><p>3 长沙 .4598</p><p>4 杭州 -.8041</p><p>5 南昌 .0455</p><p>6 南京 -.6948</p><p>7 上海 -.9015</p><p>8 武汉 .0576</p><p>9 广州 .9198</p><p>10 成都 1.5077</p><p>11 福州 -.6094</p><p>12 昆明 1.9819</p><p>模型的RSQ系数缩小为0.79457，Stress的值也扩大到了0.27030</p><p>该模型的拟合程度不是很好。</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQzBlVG12Q1ZhN25XXzdqP2U9U1g2dUpo.png"></p><p>一维模型所有的城市都在一条轴上，相比二维模型来说</p><p>它不能很好地反映出各城市之间的航空距离。</p><p>基于最优尺度变换的MDS模型</p><table><thead><tr><th>应力和拟合度量</th><th></th></tr></thead><tbody><tr><td>标准化初始应力</td><td>.04037</td></tr><tr><td>Stress-I</td><td>.20091a</td></tr><tr><td>Stress-II</td><td>.53257a</td></tr><tr><td>S-Stress</td><td>.09675b</td></tr><tr><td>离散所占比例 (D.A.F.)</td><td>.95963</td></tr><tr><td>Tucker 同余系数</td><td>.97961</td></tr><tr><td>PROXSCAL 使“标准化初始应力”最小化。</td><td></td></tr><tr><td>a. 最优定标因子 &#x3D; 1.042。</td><td></td></tr><tr><td>b. 最优定标因子 &#x3D; .975。</td><td></td></tr></tbody></table><p>该表中离散所占比例的值就等于古典MDS模型中的QRS的值</p><p>由表可知其值为0.95963，说明该模型的拟合程度是非常不错的。</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQk43SVRYTjQ5a0JRV2lKP2U9VWtYN210.png"></p><p>9所学校依然分成了3类，分别是</p><p>上海交大、清华大学、中国科大（理科类）；</p><p>复旦大学、北京大学、南京大学（文科类）；</p><p>东北师大、北京师大、华东师大（师范类）。</p><p><img src="/e68cdc4a99c3c76012ce597fd5e2c5f6.png"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQkpHS1pVN3hCWnBCcURzP2U9eTJCY0Iy.png"></p><p>第1维度和第2维度是非常重要的</p><p>第3维度到第8维度相对来说不太重要</p><p>同时也说明了使用二维模型已经能够比较好的说明9所大学之间的结构关系。</p><table><thead><tr><th>实验五</th><th>多元回归分析</th><th></th><th></th></tr></thead><tbody><tr><td>实验属性</td><td>综合型</td><td>实验时间</td><td>2020.4.23</td></tr></tbody></table><p>实验目的</p><p>利用数据文件进行多元回归分析，了解多元回归分析。</p><p>实验内容</p><p>利用数据集reg.sav、waste.sav做回归分析操作和逐步回归分析。</p><p>实验步骤</p><p><img src="/cffd77a6867841eced63de5f19254933.png"></p><p>销售收入与年轻人数、可支配收入间有较强的线性关系。</p><table><thead><tr><th>模型汇总</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>R</td><td>R 方</td><td>调整 R 方</td><td>标准 估计的误差</td></tr><tr><td>1</td><td>.957a</td><td>.917</td><td>.907</td><td>1.10074</td></tr><tr><td>a. 预测变量: (常量), 人均可支配收入, 年轻人人数。</td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>输入／移去的变量b</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>输入的变量</td><td>移去的变量</td><td>方法</td></tr><tr><td>1</td><td>人均可支配收入, 年轻人人数a</td><td>.</td><td>输入</td></tr><tr><td>a. 已输入所有请求的变量。</td><td></td><td></td><td></td></tr><tr><td>b. 因变量: 销售收入</td><td></td><td></td><td></td></tr></tbody></table><p>R、R方很高，拟合很好</p><table><thead><tr><th>Anovab</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>平方和</td><td>df</td><td>均方</td><td>F</td><td>Sig.</td><td></td></tr><tr><td>1</td><td>回归</td><td>240.153</td><td>2</td><td>120.076</td><td>99.103</td><td>.000a</td></tr><tr><td></td><td>残差</td><td>21.809</td><td>18</td><td>1.212</td><td></td><td></td></tr><tr><td></td><td>总计</td><td>261.962</td><td>20</td><td></td><td></td><td></td></tr><tr><td>a. 预测变量: (常量), 人均可支配收入, 年轻人人数。</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>b. 因变量: 销售收入</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>ANOVA表中，回归为ESS，残差为RSS，总计为TSS</p><table><thead><tr><th>系数a</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>非标准化系数</td><td>标准系数</td><td>t</td><td>Sig.</td><td></td><td></td></tr><tr><td></td><td>B</td><td>标准 误差</td><td>试用版</td><td></td><td></td><td></td></tr><tr><td>1</td><td>(常量)</td><td>-6.886</td><td>6.002</td><td></td><td>-1.147</td><td>.266</td></tr><tr><td></td><td>年轻人人数</td><td>1.455</td><td>.212</td><td>.748</td><td>6.868</td><td>.000</td></tr><tr><td></td><td>人均可支配收入</td><td>.009</td><td>.004</td><td>.251</td><td>2.305</td><td>.033</td></tr><tr><td>a. 因变量: 销售收入</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>根据上述结果，可以写出以下回归模型：</p><p>从系数表标准系数中可见，年轻人人数比人均可支配收入对销售收入的影响更大一些</p><table><thead><tr><th>描述统计量</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>N</td><td>极小值</td><td>极大值</td><td>标准差</td></tr><tr><td>销售收入</td><td>21</td><td>13.72</td><td>24.42</td><td>3.61913</td></tr><tr><td>有效的 N （列表状态）</td><td>21</td><td></td><td></td><td></td></tr></tbody></table><p>Y的标准差为3.61913，拟合后的标准差为1.10074，可见拟合后的变异减少，增加变量有意义。</p><p>Cp&#x3D;SSE&#x2F;MSE+2P-N&#x3D;21.809&#x2F;1.212+2*3-21&#x3D;2.99</p><p>P&#x3D;3</p><p>Cp接近p，这是一个很好的模型</p><p><img src="/d14910862ea8db916460f29447405f03.png"><img src="/d14910862ea8db916460f29447405f03.png"></p><p>图中看出，个点基本平均分布在0的两边，没有明显偏正或者偏负的趋势。说明当前考虑的模型的线性关系是没有问题的。</p><table><thead><tr><th>模型汇总b</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>R</td><td>R 方</td><td>调整 R 方</td><td>标准 估计的误差</td><td>Durbin-Watson</td></tr><tr><td>1</td><td>.957a</td><td>.917</td><td>.907</td><td>1.10074</td><td>1.653</td></tr><tr><td>a. 预测变量: (常量), 人均可支配收入, 年轻人人数。</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>b. 因变量: 销售收入</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>DW值为1.653，在0-4之间，残差间相互独立</p><p><img src="/87761ed53b1397c24dd7b16c86beaf64.png"></p><p>较难认同为正态分布</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQ05Xbkd0RjlXNGVXSklsP2U9RVljM2tT.png"></p><p>P-P图显示，散点基本在直线附近，可认同整体呈现一种正态性。</p><p><img src="/ab11e2c6732a27b750f1c549d7e6d00b.png"></p><p>不论也标准化预测值如何变化，标准化残差波动范围基本保持稳定，说明了残差方差齐性</p><p>逐步回归</p><table><thead><tr><th>已输入&#x2F;除去变量a</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>已输入变量</td><td>已除去变量</td><td>方法</td><td></td></tr><tr><td>1</td><td>宾馆、餐饮业用地</td><td>.</td><td>步进（准则：F-to-enter 的概率 &lt;&#x3D; .050，F-to-remove 的概率 &gt;&#x3D; .100）。</td><td></td></tr><tr><td>2</td><td>运输、批发企业用地</td><td>.</td><td>步进（准则：F-to-enter 的概率 &lt;&#x3D; .050，F-to-remove 的概率 &gt;&#x3D; .100）。</td><td></td></tr><tr><td>3</td><td>工业企业用地</td><td>.</td><td>步进（准则：F-to-enter 的概率 &lt;&#x3D; .050，F-to-remove 的概率 &gt;&#x3D; .100）。</td><td></td></tr><tr><td>4</td><td>零售业用地</td><td>.</td><td>步进（准则：F-to-enter 的概率 &lt;&#x3D; .050，F-to-remove 的概率 &gt;&#x3D; .100）。</td><td></td></tr><tr><td>a. 因变量：固体垃圾排放量</td><td></td><td></td><td></td><td></td></tr><tr><td>模型摘要</td><td></td><td></td><td></td><td></td></tr><tr><td>模型</td><td>R</td><td>R 平方</td><td>调整后的 R 平方</td><td>标准估算的错误</td></tr><tr><td>1</td><td>.823a</td><td>.677</td><td>.669</td><td>.20808</td></tr><tr><td>2</td><td>.896b</td><td>.803</td><td>.792</td><td>.16478</td></tr><tr><td>3</td><td>.908c</td><td>.825</td><td>.811</td><td>.15732</td></tr><tr><td>4</td><td>.921d</td><td>.849</td><td>.831</td><td>.14847</td></tr><tr><td>a. 预测变量：（常量），宾馆、餐饮业用地</td><td></td><td></td><td></td><td></td></tr><tr><td>b. 预测变量：（常量），宾馆、餐饮业用地, 运输、批发企业用地</td><td></td><td></td><td></td><td></td></tr><tr><td>c. 预测变量：（常量），宾馆、餐饮业用地, 运输、批发企业用地, 工业企业用地</td><td></td><td></td><td></td><td></td></tr><tr><td>d. 预测变量：（常量），宾馆、餐饮业用地, 运输、批发企业用地, 工业企业用地, 零售业用地</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>调整R方随着自变量增多而升高，剩余标准差随着自变量的增加而降低。</p><table><thead><tr><th>ANOVAa</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>平方和</td><td>自由度</td><td>均方</td><td>F</td><td>显著性</td><td></td></tr><tr><td>1</td><td>回归</td><td>3.450</td><td>1</td><td>3.450</td><td>79.685</td><td>.000b</td></tr><tr><td></td><td>残差</td><td>1.645</td><td>38</td><td>.043</td><td></td><td></td></tr><tr><td></td><td>总计</td><td>5.095</td><td>39</td><td></td><td></td><td></td></tr><tr><td>2</td><td>回归</td><td>4.091</td><td>2</td><td>2.045</td><td>75.329</td><td>.000c</td></tr><tr><td></td><td>残差</td><td>1.005</td><td>37</td><td>.027</td><td></td><td></td></tr><tr><td></td><td>总计</td><td>5.095</td><td>39</td><td></td><td></td><td></td></tr><tr><td>3</td><td>回归</td><td>4.204</td><td>3</td><td>1.401</td><td>56.621</td><td>.000d</td></tr><tr><td></td><td>残差</td><td>.891</td><td>36</td><td>.025</td><td></td><td></td></tr><tr><td></td><td>总计</td><td>5.095</td><td>39</td><td></td><td></td><td></td></tr><tr><td>4</td><td>回归</td><td>4.324</td><td>4</td><td>1.081</td><td>49.037</td><td>.000e</td></tr><tr><td></td><td>残差</td><td>.772</td><td>35</td><td>.022</td><td></td><td></td></tr><tr><td></td><td>总计</td><td>5.095</td><td>39</td><td></td><td></td><td></td></tr><tr><td>a. 因变量：固体垃圾排放量</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>b. 预测变量：（常量），宾馆、餐饮业用地</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>c. 预测变量：（常量），宾馆、餐饮业用地, 运输、批发企业用地</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>d. 预测变量：（常量），宾馆、餐饮业用地, 运输、批发企业用地, 工业企业用地</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>e. 预测变量：（常量），宾馆、餐饮业用地, 运输、批发企业用地, 工业企业用地, 零售业用地</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>统计学上，均显著。 系数a</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>模型</td><td>非标准化系数</td><td>标准系数</td><td>t</td><td>显著性</td><td></td><td></td></tr><tr><td></td><td>B</td><td>标准错误</td><td>贝塔</td><td></td><td></td><td></td></tr><tr><td>1</td><td>（常量）</td><td>.147</td><td>.042</td><td></td><td>3.495</td><td>.001</td></tr><tr><td></td><td>宾馆、餐饮业用地</td><td>.010</td><td>.001</td><td>.823</td><td>8.927</td><td>.000</td></tr><tr><td>2</td><td>（常量）</td><td>.128</td><td>.034</td><td></td><td>3.805</td><td>.001</td></tr><tr><td></td><td>宾馆、餐饮业用地</td><td>.008</td><td>.001</td><td>.675</td><td>8.542</td><td>.000</td></tr><tr><td></td><td>运输、批发企业用地</td><td>.000</td><td>.000</td><td>.384</td><td>4.857</td><td>.000</td></tr><tr><td>3</td><td>（常量）</td><td>.134</td><td>.032</td><td></td><td>4.177</td><td>.000</td></tr><tr><td></td><td>宾馆、餐饮业用地</td><td>.008</td><td>.001</td><td>.689</td><td>9.096</td><td>.000</td></tr><tr><td></td><td>运输、批发企业用地</td><td>.000</td><td>.000</td><td>.449</td><td>5.519</td><td>.000</td></tr><tr><td></td><td>工业企业用地</td><td>-3.736E-5</td><td>.000</td><td>-.165</td><td>-2.142</td><td>.039</td></tr><tr><td>4</td><td>（常量）</td><td>.123</td><td>.031</td><td></td><td>4.014</td><td>.000</td></tr><tr><td></td><td>宾馆、餐饮业用地</td><td>.013</td><td>.002</td><td>1.078</td><td>5.936</td><td>.000</td></tr><tr><td></td><td>运输、批发企业用地</td><td>.000</td><td>.000</td><td>.534</td><td>6.282</td><td>.000</td></tr><tr><td></td><td>工业企业用地</td><td>-5.223E-5</td><td>.000</td><td>-.231</td><td>-2.959</td><td>.006</td></tr><tr><td></td><td>零售业用地</td><td>-.001</td><td>.000</td><td>-.441</td><td>-2.328</td><td>.026</td></tr><tr><td>a. 因变量：固体垃圾排放量</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>系数a</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>模型</td><td>非标准化系数</td><td>标准系数</td><td>t</td><td>显著性</td><td></td><td></td></tr><tr><td></td><td>B</td><td>标准错误</td><td>贝塔</td><td></td><td></td><td></td></tr><tr><td>1</td><td>（常量）</td><td>.147</td><td>.042</td><td></td><td>3.495</td><td>.001</td></tr><tr><td></td><td>宾馆、餐饮业用地</td><td>.010</td><td>.001</td><td>.823</td><td>8.927</td><td>.000</td></tr><tr><td>2</td><td>（常量）</td><td>.128</td><td>.034</td><td></td><td>3.805</td><td>.001</td></tr><tr><td></td><td>宾馆、餐饮业用地</td><td>.008</td><td>.001</td><td>.675</td><td>8.542</td><td>.000</td></tr><tr><td></td><td>运输、批发企业用地</td><td>.000</td><td>.000</td><td>.384</td><td>4.857</td><td>.000</td></tr><tr><td>3</td><td>（常量）</td><td>.134</td><td>.032</td><td></td><td>4.177</td><td>.000</td></tr><tr><td></td><td>宾馆、餐饮业用地</td><td>.008</td><td>.001</td><td>.689</td><td>9.096</td><td>.000</td></tr><tr><td></td><td>运输、批发企业用地</td><td>.000</td><td>.000</td><td>.449</td><td>5.519</td><td>.000</td></tr><tr><td></td><td>工业企业用地</td><td>-3.736E-5</td><td>.000</td><td>-.165</td><td>-2.142</td><td>.039</td></tr><tr><td>4</td><td>（常量）</td><td>.123</td><td>.031</td><td></td><td>4.014</td><td>.000</td></tr><tr><td></td><td>宾馆、餐饮业用地</td><td>.013</td><td>.002</td><td>1.078</td><td>5.936</td><td>.000</td></tr><tr><td></td><td>运输、批发企业用地</td><td>.000</td><td>.000</td><td>.534</td><td>6.282</td><td>.000</td></tr><tr><td></td><td>工业企业用地</td><td>-5.223E-5</td><td>.000</td><td>-.231</td><td>-2.959</td><td>.006</td></tr><tr><td></td><td>零售业用地</td><td>-.001</td><td>.000</td><td>-.441</td><td>-2.328</td><td>.026</td></tr><tr><td>a. 因变量：固体垃圾排放量</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>案例诊断a</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>案例数目</td><td>标准 残差</td><td>固体垃圾排放量</td><td>预测值</td><td>残差</td><td></td></tr><tr><td>dimension0</td><td>1</td><td>-1.125</td><td>.36</td><td>.5244</td><td>-.16696</td></tr><tr><td></td><td>2</td><td>1.791</td><td>1.97</td><td>1.7014</td><td>.26588</td></tr><tr><td></td><td>3</td><td>.055</td><td>.19</td><td>.1780</td><td>.00822</td></tr><tr><td></td><td>4</td><td>.775</td><td>.38</td><td>.2665</td><td>.11506</td></tr><tr><td></td><td>5</td><td>.153</td><td>.15</td><td>.1284</td><td>.02278</td></tr><tr><td></td><td>6</td><td>.107</td><td>.14</td><td>.1290</td><td>.01591</td></tr><tr><td></td><td>7</td><td>-.592</td><td>.47</td><td>.5590</td><td>-.08793</td></tr><tr><td></td><td>8</td><td>-2.105</td><td>.65</td><td>.9637</td><td>-.31253</td></tr><tr><td></td><td>9</td><td>1.456</td><td>.66</td><td>.4462</td><td>.21615</td></tr><tr><td></td><td>10</td><td>1.405</td><td>.35</td><td>.1371</td><td>.20861</td></tr><tr><td></td><td>11</td><td>.506</td><td>.34</td><td>.2604</td><td>.07514</td></tr><tr><td></td><td>12</td><td>.357</td><td>.40</td><td>.3451</td><td>.05306</td></tr><tr><td></td><td>13</td><td>-.197</td><td>.20</td><td>.2337</td><td>-.02928</td></tr><tr><td></td><td>14</td><td>.556</td><td>.30</td><td>.2144</td><td>.08255</td></tr><tr><td></td><td>15</td><td>1.578</td><td>1.15</td><td>.9172</td><td>.23427</td></tr><tr><td></td><td>16</td><td>1.676</td><td>.56</td><td>.3120</td><td>.24886</td></tr><tr><td></td><td>17</td><td>-.531</td><td>.11</td><td>.1892</td><td>-.07880</td></tr><tr><td></td><td>18</td><td>-.416</td><td>.09</td><td>.1481</td><td>-.06181</td></tr><tr><td></td><td>19</td><td>.104</td><td>.20</td><td>.1798</td><td>.01543</td></tr><tr><td></td><td>20</td><td>-.321</td><td>.17</td><td>.2165</td><td>-.04773</td></tr><tr><td></td><td>21</td><td>-1.008</td><td>.08</td><td>.2283</td><td>-.14970</td></tr><tr><td></td><td>22</td><td>-.357</td><td>.10</td><td>.1485</td><td>-.05297</td></tr><tr><td></td><td>23</td><td>-1.214</td><td>.05</td><td>.2288</td><td>-.18017</td></tr><tr><td></td><td>24</td><td>-.571</td><td>.09</td><td>.1715</td><td>-.08480</td></tr><tr><td></td><td>25</td><td>-.326</td><td>.14</td><td>.1887</td><td>-.04838</td></tr><tr><td></td><td>26</td><td>.050</td><td>.38</td><td>.3712</td><td>.00738</td></tr><tr><td></td><td>27</td><td>-.483</td><td>.08</td><td>.1478</td><td>-.07169</td></tr><tr><td></td><td>28</td><td>-1.240</td><td>.89</td><td>1.0768</td><td>-.18407</td></tr><tr><td></td><td>29</td><td>.406</td><td>.36</td><td>.3018</td><td>.06032</td></tr><tr><td></td><td>30</td><td>.278</td><td>.18</td><td>.1346</td><td>.04125</td></tr><tr><td></td><td>31</td><td>.763</td><td>.27</td><td>.1566</td><td>.11328</td></tr><tr><td></td><td>32</td><td>.134</td><td>.28</td><td>.2563</td><td>.01986</td></tr><tr><td></td><td>33</td><td>-1.095</td><td>.32</td><td>.4866</td><td>-.16258</td></tr><tr><td></td><td>34</td><td>-1.063</td><td>.37</td><td>.5315</td><td>-.15781</td></tr><tr><td></td><td>35</td><td>1.077</td><td>.91</td><td>.7515</td><td>.15994</td></tr><tr><td></td><td>36</td><td>-.194</td><td>.26</td><td>.2882</td><td>-.02883</td></tr><tr><td></td><td>37</td><td>1.812</td><td>.43</td><td>.1594</td><td>.26904</td></tr><tr><td></td><td>38</td><td>-.401</td><td>.19</td><td>.2500</td><td>-.05949</td></tr><tr><td></td><td>39</td><td>-.621</td><td>.23</td><td>.3263</td><td>-.09222</td></tr><tr><td></td><td>40</td><td>-1.180</td><td>.78</td><td>.9511</td><td>-.17523</td></tr><tr><td>a. 因变量: 固体垃圾排放量</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>残差均不大于3，无强影响点</p><table><thead><tr><th>实验六</th><th>线性回归衍生模型</th><th></th><th></th></tr></thead><tbody><tr><td>实验属性</td><td>综合型</td><td>实验时间</td><td>2020.4.30</td></tr></tbody></table><p>实验目的</p><p>利用数据文件进行线性回归衍生模型，了解模型的使用。</p><p>实验内容</p><p>通过非直线趋势处理、方差不齐处理、分类变量的数值化等方法进行数据分析。</p><p>实验步骤</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQ0xDX0pNSnJaU3B3U3p5P2U9NWoyaHJs.png"></p><p>通风时间和毒物浓度成指数关系</p><table><thead><tr><th>输入／移去的变量b</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>输入的变量</td><td>移去的变量</td><td>方法</td></tr><tr><td>1</td><td>通风时间(分)a</td><td>.</td><td>输入</td></tr><tr><td>a. 已输入所有请求的变量。</td><td></td><td></td><td></td></tr><tr><td>b. 因变量: lny</td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>模型汇总</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>R</td><td>R 方</td><td>调整 R 方</td><td>标准 估计的误差</td></tr><tr><td>1</td><td>.980a</td><td>.961</td><td>.958</td><td>.29876</td></tr><tr><td>a. 预测变量: (常量), 通风时间(分)。</td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>Anovab</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>平方和</td><td>df</td><td>均方</td><td>F</td><td>Sig.</td><td></td></tr><tr><td>1</td><td>回归</td><td>28.588</td><td>1</td><td>28.588</td><td>320.287</td><td>.000a</td></tr><tr><td></td><td>残差</td><td>1.160</td><td>13</td><td>.089</td><td></td><td></td></tr><tr><td></td><td>总计</td><td>29.749</td><td>14</td><td></td><td></td><td></td></tr><tr><td>a. 预测变量: (常量), 通风时间(分)。</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>b. 因变量: lny</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>系数a</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>非标准化系数</td><td>标准系数</td><td>t</td><td>Sig.</td><td></td><td></td></tr><tr><td></td><td>B</td><td>标准 误差</td><td>试用版</td><td></td><td></td><td></td></tr><tr><td>1</td><td>(常量)</td><td>1.271</td><td>.162</td><td></td><td>7.831</td><td>.000</td></tr><tr><td></td><td>通风时间(分)</td><td>-.320</td><td>.018</td><td>-.980</td><td>-17.897</td><td>.000</td></tr><tr><td>a. 因变量: lny</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>根据上面三个表可以看出，拟合方程的R^2和调整R^2都很高，误差很小，F统计量很高，系数统计量也很显著，表明该方程的拟合度很高。因此可以建立方程如下：</p><p>lny^&#x3D;1.271-0.32time</p><p>将该方程进行反变换得到原始变量的预测方程如下：</p><p>Y^&#x3D;3.564time^(-0.32)</p><p>曲线拟合：</p><table><thead><tr><th>模型描述</th><th></th><th></th></tr></thead><tbody><tr><td>模型名称</td><td>MOD_1</td><td></td></tr><tr><td>因变量</td><td>1</td><td>毒物浓度</td></tr><tr><td>方程</td><td>1</td><td>指数a</td></tr><tr><td>自变量</td><td>通风时间(分)</td><td></td></tr><tr><td>常数</td><td>包含</td><td></td></tr><tr><td>其值在图中标记为观测值的变量</td><td>未指定</td><td></td></tr><tr><td>a. 该模型要求所有非缺失值为正数。</td><td></td><td></td></tr></tbody></table><table><thead><tr><th>个案处理摘要</th><th></th></tr></thead><tbody><tr><td></td><td>N</td></tr><tr><td>个案总数</td><td>15</td></tr><tr><td>已排除的个案a</td><td>0</td></tr><tr><td>已预测的个案</td><td>0</td></tr><tr><td>新创建的个案</td><td>0</td></tr><tr><td>a. 从分析中排除任何变量中带有缺失值的个案。</td><td></td></tr></tbody></table><table><thead><tr><th>变量处理摘要</th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>变量</td><td></td><td></td></tr><tr><td></td><td>因变量</td><td>自变量</td><td></td></tr><tr><td></td><td>毒物浓度</td><td>通风时间(分)</td><td></td></tr><tr><td>正值数</td><td>15</td><td>15</td><td></td></tr><tr><td>零的个数</td><td>0</td><td>0</td><td></td></tr><tr><td>负值数</td><td>0</td><td>0</td><td></td></tr><tr><td>缺失值数</td><td>用户自定义缺失</td><td>0</td><td>0</td></tr><tr><td></td><td>系统缺失</td><td>0</td><td>0</td></tr></tbody></table><table><thead><tr><th>模型汇总</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>R</td><td>R 方</td><td>调整 R 方</td><td>估计值的标准误</td></tr><tr><td>.980</td><td>.961</td><td>.958</td><td>.299</td></tr><tr><td>自变量为 通风时间(分)。</td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>ANOVA</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>平方和</td><td>df</td><td>均方</td><td>F</td><td>Sig.</td></tr><tr><td>回归</td><td>28.588</td><td>1</td><td>28.588</td><td>320.287</td><td>.000</td></tr><tr><td>残差</td><td>1.160</td><td>13</td><td>.089</td><td></td><td></td></tr><tr><td>总计</td><td>29.749</td><td>14</td><td></td><td></td><td></td></tr><tr><td>自变量为 通风时间(分)。</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>系数</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>未标准化系数</td><td>标准化系数</td><td>t</td><td>Sig.</td><td></td></tr><tr><td></td><td>B</td><td>标准误</td><td>Beta</td><td></td><td></td></tr><tr><td>通风时间(分)</td><td>-.320</td><td>.018</td><td>-.980</td><td>-17.897</td><td>.000</td></tr><tr><td>（常数）</td><td>3.565</td><td>.579</td><td></td><td>6.160</td><td>.000</td></tr><tr><td>因变量为 ln(毒物浓度)。</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>拟合方程的R^2和调整R^2都很高，误差很小，F统计量很高，系数统计量也很显著，表明该方程的拟合度很高。</p><p>因此根据指数模型建立方程如下：</p><p>Y^&#x3D;3.565time^(-0.32)</p><p>将建立的方程与上面进行对数变换建立的方程比较，两者几乎一样</p><p><img src="/3611974920a040bd1ed1d96660074c0c.png"></p><p>方差不齐处理：</p><p>对wls.sav文件</p><p>做简单线性回归：</p><table><thead><tr><th>模型汇总</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>R</td><td>R 方</td><td>调整 R 方</td><td>标准 估计的误差</td></tr><tr><td>1</td><td>.987a</td><td>.975</td><td>.973</td><td>.11330</td></tr><tr><td>a. 预测变量: (常量), x。</td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>系数a</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>非标准化系数</td><td>标准系数</td><td>t</td><td>Sig.</td><td></td><td></td></tr><tr><td></td><td>B</td><td>标准 误差</td><td>试用版</td><td></td><td></td><td></td></tr><tr><td>1</td><td>(常量)</td><td>7.454</td><td>.173</td><td></td><td>43.143</td><td>.000</td></tr><tr><td></td><td>x</td><td>-.015</td><td>.001</td><td>-.987</td><td>-22.468</td><td>.000</td></tr><tr><td>a. 因变量: y</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>一份样本和15本样本混合后测量结果等价对待，是不合理的</p><p>加权后：</p><table><thead><tr><th>模型汇总</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>模型</td><td>R</td><td>R 方</td><td>调整 R 方</td><td>标准 估计的误差</td></tr><tr><td>1</td><td>.982a</td><td>.965</td><td>.962</td><td>.29365</td></tr><tr><td>a. 预测变量: (常量), x。</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>R方与之前相比，下降了</p><p>系数必然下降，因此不能用来判断模型的好坏</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQ1dndVZzNWJteEYtTWZZP2U9ZmdGWHFP.png"><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQ3A2Q0NlRGtaTXBMQkE2P2U9OUFzSjBN.png"></p><p>右图所示，加权法的直线更靠近中部哪些混合样本n较大的测量值，而对两端n较小的测量值则比普通回归方程更远一些。</p><p>对最小二乘法的估计：</p><table><thead><tr><th>模型摘要</th><th></th></tr></thead><tbody><tr><td>复相关系数</td><td>.982</td></tr><tr><td>R 方</td><td>.965</td></tr><tr><td>调整 R 方</td><td>.962</td></tr><tr><td>估计的标准误</td><td>.294</td></tr><tr><td>对数似然函数值</td><td>13.883</td></tr></tbody></table><table><thead><tr><th>ANOVA</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>平方和</td><td>df</td><td>均方</td><td>F</td><td>Sig.</td></tr><tr><td>回归</td><td>30.530</td><td>1</td><td>30.530</td><td>354.054</td><td>.000</td></tr><tr><td>残差</td><td>1.121</td><td>13</td><td>.086</td><td></td><td></td></tr><tr><td>总计</td><td>31.651</td><td>14</td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>系数</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>未标准化系数</td><td>标准化系数</td><td>t</td><td>Sig.</td><td></td><td></td></tr><tr><td></td><td>B</td><td>标准误</td><td>试用版</td><td>标准误</td><td></td><td></td></tr><tr><td>（常数）</td><td>7.190</td><td>.188</td><td></td><td></td><td>38.316</td><td>.000</td></tr><tr><td>x</td><td>-.014</td><td>.001</td><td>-.982</td><td>.052</td><td>-18.816</td><td>.000</td></tr></tbody></table><p>得出的模型和刚刚用线性模型中的加权方法进行拟合的模型结果是一致的</p><table><thead><tr><th>幂</th><th>-2.000</th><th>11.565</th></tr></thead><tbody><tr><td></td><td>-1.500</td><td>13.182</td></tr><tr><td></td><td>-1.000</td><td>13.883a</td></tr><tr><td></td><td>-.500</td><td>13.496</td></tr><tr><td></td><td>.000</td><td>12.382</td></tr><tr><td></td><td>.500</td><td>11.099</td></tr><tr><td></td><td>1.000</td><td>9.687</td></tr><tr><td></td><td>1.500</td><td>7.787</td></tr><tr><td></td><td>2.000</td><td>5.277</td></tr><tr><td>a. 选择对应幂以用于进一步分析，因为它可以使对数似然函数最大化。</td><td></td><td></td></tr><tr><td>b. 因变量: y，源变量: n</td><td></td><td></td></tr></tbody></table><p>当指数&#x3D;-1时，对数似然值最高，达到了13.883，因此最终确定指数为-1</p><p>这和数据的实际情况是重合的。</p><table><thead><tr><th>实验七</th><th>聚类分析（市场细分）</th><th></th><th></th></tr></thead><tbody><tr><td>实验属性</td><td>综合型</td><td>实验时间</td><td>2020．5．21</td></tr></tbody></table><p>实验目的</p><p>采用聚类分析对数据进行市场细分。</p><p>实验内容</p><p>telco-extra.sav 和drug.sav</p><p>实验步骤</p><p>一、层次聚类法</p><table><thead><tr><th>案例处理摘要a</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>案例</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>有效</td><td>缺失</td><td>合计</td><td></td><td></td><td></td></tr><tr><td>N</td><td>百分比</td><td>N</td><td>百分比</td><td>N</td><td>百分比</td></tr><tr><td>31</td><td>100.0%</td><td>0</td><td>.0%</td><td>31</td><td>100.0%</td></tr><tr><td>a. 平方 Euclidean 距离 已使用</td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th>聚类表</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>阶</td><td>群集组合</td><td>系数</td><td>首次出现阶群集</td><td>下一阶</td><td></td><td></td></tr><tr><td></td><td>群集 1</td><td>群集 2</td><td></td><td>群集 1</td><td>群集 2</td><td></td></tr><tr><td>1</td><td>3</td><td>17</td><td>.111</td><td>0</td><td>0</td><td>2</td></tr><tr><td>2</td><td>3</td><td>12</td><td>.246</td><td>1</td><td>0</td><td>15</td></tr><tr><td>3</td><td>5</td><td>7</td><td>.407</td><td>0</td><td>0</td><td>4</td></tr><tr><td>4</td><td>5</td><td>8</td><td>.624</td><td>3</td><td>0</td><td>13</td></tr><tr><td>5</td><td>20</td><td>27</td><td>.857</td><td>0</td><td>0</td><td>11</td></tr><tr><td>6</td><td>29</td><td>30</td><td>1.121</td><td>0</td><td>0</td><td>20</td></tr><tr><td>7</td><td>28</td><td>31</td><td>1.390</td><td>0</td><td>0</td><td>20</td></tr><tr><td>8</td><td>4</td><td>14</td><td>1.666</td><td>0</td><td>0</td><td>10</td></tr><tr><td>9</td><td>15</td><td>23</td><td>2.102</td><td>0</td><td>0</td><td>14</td></tr><tr><td>10</td><td>4</td><td>25</td><td>2.751</td><td>8</td><td>0</td><td>21</td></tr><tr><td>11</td><td>20</td><td>24</td><td>3.419</td><td>5</td><td>0</td><td>12</td></tr><tr><td>12</td><td>20</td><td>22</td><td>4.167</td><td>11</td><td>0</td><td>19</td></tr><tr><td>13</td><td>5</td><td>6</td><td>5.010</td><td>4</td><td>0</td><td>19</td></tr><tr><td>14</td><td>15</td><td>16</td><td>6.127</td><td>9</td><td>0</td><td>23</td></tr><tr><td>15</td><td>3</td><td>18</td><td>7.428</td><td>2</td><td>0</td><td>18</td></tr><tr><td>16</td><td>21</td><td>26</td><td>8.813</td><td>0</td><td>0</td><td>21</td></tr><tr><td>17</td><td>11</td><td>19</td><td>10.248</td><td>0</td><td>0</td><td>22</td></tr><tr><td>18</td><td>3</td><td>10</td><td>12.010</td><td>15</td><td>0</td><td>23</td></tr><tr><td>19</td><td>5</td><td>20</td><td>13.835</td><td>13</td><td>12</td><td>25</td></tr><tr><td>20</td><td>28</td><td>29</td><td>16.130</td><td>7</td><td>6</td><td>27</td></tr><tr><td>21</td><td>4</td><td>21</td><td>18.530</td><td>10</td><td>16</td><td>25</td></tr><tr><td>22</td><td>11</td><td>13</td><td>21.298</td><td>17</td><td>0</td><td>28</td></tr><tr><td>23</td><td>3</td><td>15</td><td>24.620</td><td>18</td><td>14</td><td>29</td></tr><tr><td>24</td><td>1</td><td>2</td><td>28.412</td><td>0</td><td>0</td><td>26</td></tr><tr><td>25</td><td>4</td><td>5</td><td>32.928</td><td>21</td><td>19</td><td>27</td></tr><tr><td>26</td><td>1</td><td>9</td><td>41.666</td><td>24</td><td>0</td><td>28</td></tr><tr><td>27</td><td>4</td><td>28</td><td>54.441</td><td>25</td><td>20</td><td>29</td></tr><tr><td>28</td><td>1</td><td>11</td><td>68.972</td><td>26</td><td>22</td><td>30</td></tr><tr><td>29</td><td>3</td><td>4</td><td>87.757</td><td>23</td><td>27</td><td>30</td></tr><tr><td>30</td><td>1</td><td>3</td><td>150.000</td><td>28</td><td>29</td><td>0</td></tr></tbody></table><table><thead><tr><th>群集成员</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>案例</td><td>8 群集</td><td>7 群集</td><td>6 群集</td><td>5 群集</td><td>4 群集</td><td>3 群集</td></tr><tr><td>1:Case 1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr><tr><td>2:Case 2</td><td>2</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr><tr><td>3:Case 3</td><td>3</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td></tr><tr><td>4:Case 4</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>5:Case 5</td><td>5</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>6:Case 6</td><td>5</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>7:Case 7</td><td>5</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>8:Case 8</td><td>5</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>9:Case 9</td><td>6</td><td>5</td><td>4</td><td>1</td><td>1</td><td>1</td></tr><tr><td>10:Case 10</td><td>3</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td></tr><tr><td>11:Case 11</td><td>7</td><td>6</td><td>5</td><td>4</td><td>4</td><td>1</td></tr><tr><td>12:Case 12</td><td>3</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td></tr><tr><td>13:Case 13</td><td>7</td><td>6</td><td>5</td><td>4</td><td>4</td><td>1</td></tr><tr><td>14:Case 14</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>15:Case 15</td><td>3</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td></tr><tr><td>16:Case 16</td><td>3</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td></tr><tr><td>17:Case 17</td><td>3</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td></tr><tr><td>18:Case 18</td><td>3</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td></tr><tr><td>19:Case 19</td><td>7</td><td>6</td><td>5</td><td>4</td><td>4</td><td>1</td></tr><tr><td>20:Case 20</td><td>5</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>21:Case 21</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>22:Case 22</td><td>5</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>23:Case 23</td><td>3</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td></tr><tr><td>24:Case 24</td><td>5</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>25:Case 25</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>26:Case 26</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>27:Case 27</td><td>5</td><td>4</td><td>3</td><td>3</td><td>3</td><td>3</td></tr><tr><td>28:Case 28</td><td>8</td><td>7</td><td>6</td><td>5</td><td>3</td><td>3</td></tr><tr><td>29:Case 29</td><td>8</td><td>7</td><td>6</td><td>5</td><td>3</td><td>3</td></tr><tr><td>30:Case 30</td><td>8</td><td>7</td><td>6</td><td>5</td><td>3</td><td>3</td></tr><tr><td>31:Case 31</td><td>8</td><td>7</td><td>6</td><td>5</td><td>3</td><td>3</td></tr></tbody></table><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQllTV216S3daY0JvVy1GP2U9UWd6TkVV.png"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQ2tOUzNqVFByUWJoUjhGP2U9ZVBKS3FO.png"></p><p>根据上表可得：</p><p>(1)方案一:分成6类或者5类。</p><p>第1类:包含上海1省市;</p><p>第2类:包含北京、天津2省市;</p><p>第3类包含河北、湖北、安徽、湖南、江苏、山东、四川河南等8省市;</p><p>第4类:包含广西、陕西、贵州、重庆、内蒙古、吉林、黑龙江、辽宁、山西、江西、云南、海南、西藏等13省市:</p><p>第5类:包含浙江、广东、福建等3省市;</p><p>第6类:包含。青海、宁夏、甘肃、新疆等4省市。</p><p>其中第1类和第2类可以合并为一类。这时总类别数就是5类。事实上，由于在分成6类时，第1个类别只有上海一个省市，所以在这种聚类方案中，更倾向于将31个省市分成5类。</p><p>(2)方案二:分成3类或者2类。</p><p>第1类:包含上海、天津、北京、浙江、广东、福建等6省市;</p><p>第2类:包含河北、湖北,安徽,湖南、江苏、山东、四川、河南等8省市;</p><p>第3类:包含青海、宁夏、甘肃、新疆、广西、陕西、贵州、重庆、内蒙古、吉林、黑龙江、辽宁、山西、江西、云南、海南、西藏等17省市。</p><p>其中第二类和第二类可以合并为一类，这时总类别数就是二类。但是，由于分成两类区分性不强，所以在这种聚类方案中，常更倾向于将这些省市分成三类。</p><p>二、K均值聚类法</p><p>1.分析-分类-K均值聚类：聚类数：5；变量：加入6个标准化的变量；个案标记依据：客户编号；方法：迭代与分类-迭代：最大迭代次数改为100-选项：在默认基础上勾选“ANONA表”-保存：勾选“聚类成员”-确定的操作后得到下列结果：</p><table><thead><tr><th>初始聚类中心</th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>聚类</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td></tr><tr><td>Zscore: 工作日上班时期电话时长</td><td>3.21791</td><td>-1.16165</td><td>2.64849</td><td>.19729</td><td>1.93001</td></tr><tr><td>Zscore: 工作日下班时期电话时长</td><td>-.65276</td><td>-1.26557</td><td>-1.03058</td><td>3.87339</td><td>-.17204</td></tr><tr><td>Zscore: 周末电话时长</td><td>3.72181</td><td>3.11491</td><td>-.02169</td><td>-.90652</td><td>-1.21281</td></tr><tr><td>Zscore: 国际电话时长</td><td>4.90995</td><td>-1.16636</td><td>.29390</td><td>2.77257</td><td>.53252</td></tr><tr><td>Zscore: 总通话时长</td><td>2.96323</td><td>-1.31226</td><td>2.07308</td><td>1.47340</td><td>1.63709</td></tr><tr><td>Zscore: 平均每次通话时长</td><td>-.51651</td><td>.30760</td><td>5.49282</td><td>-.22792</td><td>12.99993</td></tr><tr><td>最终聚类中心</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td>聚类</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td></tr><tr><td>Zscore: 工作日上班时期电话时长</td><td>1.60559</td><td>-.78990</td><td>.61342</td><td>-.33584</td><td>.37303</td></tr><tr><td>Zscore: 工作日下班时期电话时长</td><td>.46081</td><td>-.58917</td><td>-.49365</td><td>1.18873</td><td>-.29014</td></tr><tr><td>Zscore: 周末电话时长</td><td>-.14005</td><td>-.15010</td><td>.35845</td><td>-.02375</td><td>-.40407</td></tr><tr><td>Zscore: 国际电话时长</td><td>1.68250</td><td>-.64550</td><td>.04673</td><td>.02351</td><td>-.04415</td></tr><tr><td>Zscore: 总通话时长</td><td>1.62690</td><td>-.94040</td><td>.41420</td><td>.10398</td><td>.21627</td></tr><tr><td>Zscore: 平均每次通话时长</td><td>-.06590</td><td>-.14835</td><td>-.05337</td><td>-.14059</td><td>4.87718</td></tr></tbody></table><table><thead><tr><th>ANOVA</th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td>聚类</td><td>误差</td><td>F</td><td>Sig.</td><td></td><td></td></tr><tr><td></td><td>均方</td><td>df</td><td>均方</td><td>df</td><td></td><td></td></tr><tr><td>Zscore: 工作日上班时期电话时长</td><td>582.315</td><td>4</td><td>.314</td><td>3390</td><td>1854.022</td><td>.000</td></tr><tr><td>Zscore: 工作日下班时期电话时长</td><td>468.001</td><td>4</td><td>.449</td><td>3390</td><td>1042.395</td><td>.000</td></tr><tr><td>Zscore: 周末电话时长</td><td>39.060</td><td>4</td><td>.955</td><td>3390</td><td>40.896</td><td>.000</td></tr><tr><td>Zscore: 国际电话时长</td><td>443.179</td><td>4</td><td>.478</td><td>3390</td><td>926.658</td><td>.000</td></tr><tr><td>Zscore: 总通话时长</td><td>605.770</td><td>4</td><td>.286</td><td>3390</td><td>2115.071</td><td>.000</td></tr><tr><td>Zscore: 平均每次通话时长</td><td>463.823</td><td>4</td><td>.454</td><td>3390</td><td>1021.872</td><td>.000</td></tr><tr><td>F 检验应仅用于描述性目的，因为选中的聚类将被用来最大化不同聚类中的案例间的差别。观测到的显著性水平并未据此进行更正，因此无法将其解释为是对聚类均值相等这一假设的检验。</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>为在聚类分析的结果中，各个变量对聚类结果的重要程度排序 为:总通话时长&gt;工作日上班时期电话时长&gt;工作日下班时期电话时长&gt;平均每次通话时长&gt; 国际电话时长&gt;周末电话时长。</p><table><thead><tr><th>每个聚类中的案例数</th><th></th><th></th></tr></thead><tbody><tr><td>聚类</td><td>1</td><td>443.000</td></tr><tr><td></td><td>2</td><td>1239.000</td></tr><tr><td></td><td>3</td><td>831.000</td></tr><tr><td></td><td>4</td><td>806.000</td></tr><tr><td></td><td>5</td><td>76.000</td></tr><tr><td>有效</td><td>3395.000</td><td></td></tr><tr><td>缺失</td><td>.000</td><td></td></tr></tbody></table><p>可见人数最多的是第 类，而最少的是第 类</p><p>从上述表格可以得出：</p><p>第1类:总通话时间长，工作日上班时间通话比例高用户。此类用户数量为443人。该类客户的总通话平均时间是各类客户中最高的，并且工作日，上班时间通话占总通话比例很高(工作日.上班通话平均与全部通话平均之比达到了77. 69%),另外,该类客户国际通话时间也是各类.中最高的。可以叫做“高端商用客户”。</p><p>第2类:总通话时间短，各时段通话时间都短。此类用户数量为1239人。该类客户的总通话平均时间是各类客户中最低的，并且在各个时段通话时间普遍较短。可以叫做“少使用低端客户”</p><p>第3类:总通话时间居中,工作日上班时间通话比例高用户。此类用户数量为831人。该类客户最重要的特征是工作日.上班时间通话比例高(工作日上班通话平均与全部通话平均之比达到了79.01%)。可以叫做“中端商用客户”。</p><p>第4类:总通话时间居中,工作日下班时间通话比例高用户。此类用户数量为806人。该类.客户工作日下班时间通话比例高(工作日下班通话平均与全部通话平均之比达到了47.57%)，远高于其他类别同一比例。可以叫做“中端日常用客户”。</p><p>第5类:每次通话时间长客户。该类用户数量为76人,此类用户数量较少。最大的特征就是平均每次通话时间特别长，每次通话时长平均达到了其他类别每次通话时长平均的5倍以上，而其他方面无明显特征。可以叫做“长聊客户”。</p><p>三、两步聚类法</p><ol><li></li></ol><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQS1hVWk1QVBCSW1BSWNGP2U9bGpleWl5.png" alt="IMG_256"></p><p>从上图可知这四类案例分布得比较均匀</p><p><img src="/4959ed263cff9941b019fcbeed757fff.png" alt="IMG_256"></p><p><img src="/730157fe51cebfd94bac195a9915c815.png" alt="IMG_256"></p><p>从上图可知胆固醇的重要性最高，钾含量的重要性最低</p><p>通过以上分析，尤其是上面各个变量对于聚类结果重要性的分析,我们可以把病人分为4个类别,他们的特征分别如下：</p><p>第1类:高血压、胆固醇浓度正常。此类别病人数量为98人,占病人总数19. 6%。全部为高血压、胆固醇浓度正常的患者,性别无明显特征，血液中钠含量高于平均水平。</p><p>第2类:男性、胆固醇浓度高。此类别病人数量为136 人,占病人总数27.2%。全部为男性胆固醇浓度高的患者,血压无明显特征，并且血液中钠含量低于平均水平。</p><p>第3类:女性、胆固醇浓度高。此类病人数量为134人，占病人总数26.8%。全部女性胆固醇浓度高的患者，血压无明显特征，并且血液中钠含量高于平均水平。</p><p>第4类:非高血压、胆固醇浓度正常。此类病人数量为132 人,占病人总数26.4%。全部为胆固醇浓度正常,无一人为高血压,并且血液中钠含量低于平均水平。</p><p>四、市场细分</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQzZxS0dselJFNnNrZEVWP2U9WHZUSUtK.png"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQ1pDWXdLaVVsUko1VXlkP2U9cldkd0lm.png"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQ2RNcUlKdVZfOGlVUHBvP2U9VUY3Q0Fq.png"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQ3dlQ2xwOHBGMGgxa00yP2U9OHpTS0V1.png"></p><p>2.对因子分析得到的三个重要变量进行聚类分析，进行分析-分类-两步聚类：分类变量：婚姻状况、受教育水平、退休情况、性别，连续性变量：加入三个重要变量及其他相关变量-输出：在默认设置基础上，勾选“创建聚类成员变量”，评估字段为居住地-确定的操作后得到下列结果：</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQTFWSUNkM2QxcG9HaUU3P2U9RGtROElC.png"></p><p><img src="/9274da7500c6a759ee8e0ff919d0419f.png"></p><p>从上图可知这三类案例分布得虽然不算特别均匀但也还可以</p><p><img src="/dd1827a5a9ed8973a133faf57955746d.png"><img src="/89208cb503f4b83ac2397c17ae6877e3.png"></p><p>从上两张图可以看出婚姻状况对分类的影响是最大的，家庭人口数对分类的影响也很大</p><p>3.用判别变量分析结果是否良好，进行分析-分类-判别：分组变量为两步聚类类别号（定义范围为1-3），自变量为三个重要变量及其他相关变量-确定的操作后得到下列结果：</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQ1JsM2ctRng5Nko4UmVqP2U9UVNJSTh1.png"></p><p>两个被抽选出的变量的特征值都大于1，则这两个变量可以很好地代表或者是覆盖其他变量</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQmdHMmdpLUI3TDF2anRjP2U9N3JCRXpl.png"></p><p>两个被抽取的变量都Sig&gt;0，说明两者的结果都显著，都应该要保留在模型当中</p><p><img src="/e08e1e93ad5ddf3aebc29574556e0780.png"></p><table><thead><tr><th>组质心处的函数</th><th></th><th></th></tr></thead><tbody><tr><td>两步聚类类别号</td><td>函数</td><td></td></tr><tr><td></td><td>1</td><td>2</td></tr><tr><td>1</td><td>-2.324</td><td>-.700</td></tr><tr><td>2</td><td>-.634</td><td>1.992</td></tr><tr><td>3</td><td>2.362</td><td>-.349</td></tr><tr><td>在组均值处评估的非标准化典型判别式函数</td><td></td><td></td></tr></tbody></table><p>4.展示图形以获得更为直观的能判断出分类判别结果的图，在步骤4的基础上进行分类：勾选“个案结果”、“摘要表”，取消“合并图”-确定的操作后得到下列结果：</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhsQm9xTGxiRUwyR1YxYU5WP2U9c0QxamJN.png"></p><p>分类1与分类3没有什么太大问题，就是分类2的距离有一点大，但是整体判别效果是不错的</p><p>综上所述，一共可分为三类人</p><p>一类为通话时长较长的顾客。</p><p>二类为设备及网络要求最优的顾客。</p><p>三类为家庭电话卡较多的顾客。</p>]]></content>
    
    
    
    <tags>
      
      <tag>营销工程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Excel数据分析实例</title>
    <link href="/2019/12/25/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E4%BE%8B/"/>
    <url>/2019/12/25/excel%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%AE%9E%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h1><p>bi某教育机构遇到一个问题：近期课程销售量上升，但是计算出来的毛利额在下降。</p><p>如何分析并解决？</p><h1 id="确认问题并拆解指标"><a href="#确认问题并拆解指标" class="headerlink" title="确认问题并拆解指标"></a>确认问题并拆解指标</h1><h2 id="确认毛利额数据异常问题"><a href="#确认毛利额数据异常问题" class="headerlink" title="确认毛利额数据异常问题"></a>确认毛利额数据异常问题</h2><ol><li><p>确认数据源问题——数据缺失、口径异常</p></li><li><p>确认是否是外因所致——用户消费能力下降or行业不景气</p></li><li><p>产品问题</p><ul><li>销量上——低毛利率商品销量上升；高毛利率商品销量下降</li><li>售价上——价格是否下降？是否打折？</li><li>成本上——内容创作成本激增</li></ul></li><li><p>渠道问题——渠道成本激增、渠道质量下降、活动ROI</p></li></ol><h2 id="提升毛利率方案"><a href="#提升毛利率方案" class="headerlink" title="提升毛利率方案"></a>提升毛利率方案</h2><ol><li><p>提升销量</p><ol><li><p>营销优化</p><ul><li>增加优质渠道投放</li><li>优化文案质量</li><li>优化营销活动，避免亏本拉新</li><li>增加体验课、公开课</li><li>精细化用户运营：对用户分层，采用不同的营销方案，提高用户的小课复购率和大课转化</li></ul></li><li><p>产品优化</p><ul><li>优化用户体验</li><li>优化学习流程，增加用户停留时间</li></ul></li><li><p>长远之计——内容优化形成口碑，提高完课率，满意度，就业率</p></li></ol></li><li><p>减少成本——优化渠道</p></li></ol><h1 id="整体框架"><a href="#整体框架" class="headerlink" title="整体框架"></a>整体框架</h1><h2 id="一、通过逻辑树拆解方法，逐步确认各渠道的问题"><a href="#一、通过逻辑树拆解方法，逐步确认各渠道的问题" class="headerlink" title="一、通过逻辑树拆解方法，逐步确认各渠道的问题"></a>一、通过逻辑树拆解方法，逐步确认各渠道的问题</h2><p>定位问题原因为：八月免费渠道做促销活动，导致部分课程亏本销售，导致部分盈利额下降</p><p>解决：优化渠道投放比例，提高课程成交量</p><ol><li>通过综合排名分析法，将渠道排名。找出转化率高、成本低、流量大的渠道</li><li>与营销部门确认方案可行性</li><li>不同渠道预算配比做ABtest</li><li>7日为周期评估实验结果</li></ol><h3 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h3><h4 id="问题拆解——数据涨跌异动分析"><a href="#问题拆解——数据涨跌异动分析" class="headerlink" title="问题拆解——数据涨跌异动分析"></a>问题拆解——数据涨跌异动分析</h4><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrWEdoTGREa3dKYWtOWTNuP2U9QllDZUQ2.png" alt="图1"></p><p>绘制今年各月销售量与毛利额的折线图</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV3hZQy1ua1VubmdES2w5P2U9RkxFVGFE.png" alt="图2"></p><p>结论：发现8月份销售额上升，毛利率下降。要继续看毛利率与毛利率环比查看是否是正常波动</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrVzd3cWdsRUVNeFFTSkNWP2U9dHB6M2k2.png" alt="图3"></p><p>结论：8月毛利率出现异常，确认为异常波动</p><p>渠道类型较多，先找大渠道，再找细分渠道：绘制销售量和利润率的矩阵关联图</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrVzlqYzZsamtaRXhLR2ZfP2U9UzZCaGx3.png" alt="图4"></p><p>结论：8月中的免费渠道是高销售额，但毛利率低</p><p>继续找免费渠道内的详细渠道，继续矩阵关联分析</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrWEI5ejhzQkZpanZsWVpIP2U9RDJtRW0x.png" alt="图5"></p><p>结论：免费渠道下的站内广告位销售额较高，但是毛利率极低； EDM短信的销售额极高且毛利率较低。</p><p>继续查看7、8月份的毛利率对比图</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrWEtWX2lVY0U5Q2ZLZG9tP2U9WXdxQXUw.png" alt="图6"></p><p>结论：发现站内广告、EDM短信、0元体验课都导致8月的毛利率降低。</p><p>查询到：站内广告位渠道在8月17日做了促销活动，当日出现20单毛利额为负的订单。导致该渠道8月毛利率为负值。 </p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV0NYdE5xaHFoYVlyZWg3P2U9aHJRaDNq.png" alt="图7"></p><p>继续查看7、8月份的销售额的对比图</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrVzNjd1BOYk9hQ0dPZExiP2U9TzlpaGVC.png" alt="图8"></p><p>结论：发现站内广告位、社群（站内）、外呼都使销售额上升</p><p>继续考察免费渠道下，不同渠道对销售额涨幅的贡献率</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrVjk5ekJSZTBiMmh4LWJnP2U9bGNqcGhD.png" alt="图9"></p><p>结论：确认站内广告这一渠道对销售额贡献达100%。说明8月份销售额上升，利润率下降主要是由免费渠道中的站内广告销售额上升，毛利额下降导致的。</p><p>该渠道在8 月17日的招生出现了毛利额为负的情况；而由于该活动促销的是本月一门新开大课，课程按本月成本分摊较高，所以出现了毛利额为负的情况，拉低了整体的毛利额。</p><h4 id="综合分析渠道，进行渠道排名"><a href="#综合分析渠道，进行渠道排名" class="headerlink" title="综合分析渠道，进行渠道排名"></a>综合分析渠道，进行渠道排名</h4><blockquote><p>综合分析法 ：将人脑模糊逻辑转化为计算机0&#x2F;1逻辑思维，得出量化结果。</p></blockquote><blockquote><blockquote><p>具体操作方法</p><ol><li>纵坐标上的指标与横坐标上的指标进行对比</li><li>专家投票</li><li>纵坐标比横坐标重要记为1，否则为0</li><li>每行结果相加为综合得分（若有重要指标综合得分为0，可全体+1）</li><li>通过综合得分求出权重</li></ol></blockquote></blockquote><ol><li>对渠道四个指标通过优化矩阵进行权重划分，确定各指标的权重值</li></ol><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV1RFZExOLTNWT0dkN21yP2U9a1RPT0wy.png" alt="图10"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV05YOGtreExtcDlmNEstP2U9UXd2MDYy.png" alt="图11"></p><ol start="2"><li>对渠道各指标进行0-1标准化，去除量纲影响</li><li>利用标准化后的指标与原指标进行成绩求和，得出综合得分</li><li>利用综合得分进行排名</li></ol><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV0xWNDVEQUcwanZqQjEzP2U9YVgxbU9Z.png" alt="图12"></p><p>结论：先有渠道最好的为站内广告位。但是由于投放广告涉及很多因素，如广告复投问题、文案更新问题、转化周期长短问题。</p><p>后续的改进策略还需要进一步与营销部门商议。</p><h2 id="二、优化产品用户体验，提升留电率、进群率、转化率"><a href="#二、优化产品用户体验，提升留电率、进群率、转化率" class="headerlink" title="二、优化产品用户体验，提升留电率、进群率、转化率"></a>二、优化产品用户体验，提升留电率、进群率、转化率</h2><p>解决：</p><ol><li><p>方案——通过漏斗分析，找到需要提升的转化环节是留电环节，之后通过用户调研进一步找到结果，最终提升留电环节转化率22.72pp，提升整体转化率1.52pp。</p></li><li><p>通过现有漏斗转化数据评估改进后的漏斗能够带来的销量提升。</p></li><li><p>做ABtest：客服团队响应的实验和产品改进的实验。</p></li><li><p>7日周期评估实验结果。</p></li><li><p>结案报告并推广。</p></li></ol><h3 id="具体操作-1"><a href="#具体操作-1" class="headerlink" title="具体操作"></a>具体操作</h3><h4 id="漏斗分析，看各环节转化情况"><a href="#漏斗分析，看各环节转化情况" class="headerlink" title="漏斗分析，看各环节转化情况"></a>漏斗分析，看各环节转化情况</h4><blockquote><p>漏斗分析：反映用户行为状态，反应从起点到终点各阶段用户转化率情况。</p></blockquote><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV0hlWnBNNFQ3OGU5VnNTP2U9b1IyWGVl.png" alt="图13"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV1cwNWdTYTh6OXF4WnhoP2U9N3lnOHJo.png" alt="图14"></p><p>从总体最终转化来看低于行业转化水平3%-5%，并且咨询到预留电话环节转化明显较低，考虑是从 客服响应时间或话术方面进行优化。</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV1p4LTNsSkwzc0xablJmP2U9QkNJOXVo.png" alt="图15"></p><p>结论：从人工客服响应时长分析，用户平均响应时长为187秒，约为3分钟。事后通过用户访谈，发现人工等待时间较长的问题也出现在较多反馈问题的区域中(该问题排名为30个中的第四个)。 </p><p>还需要ABtest得出结论，可能需要改进的方面有：</p><ol><li><p>   落地页功能：</p><ul><li>检验落地页打开是否正常；留电弹窗是否正常。</li></ul></li><li><p>   落地页样式：</p><ul><li><p>通过问卷调查调查落地页样式的满意度；</p></li><li><p>设计不同的落地页样式来实验，找到能够提高转化率的落地页样式。</p></li></ul></li><li><p>   落地页页面布局：</p><ul><li><p>同上，调查布局的满意度；</p></li><li><p>并设计不同的布局来实验。</p></li></ul></li><li><p>   课程介绍方式：</p><ul><li><p>问卷调查课程介绍的满意度；</p></li><li><p>通过不同的关键词组合和不同的内容组合方式来优化课程介绍方式；</p></li><li><p>通过实验验证不同组合的优化效果。</p></li></ul></li><li><p>   客服弹窗体验：</p><ul><li><p>问卷调查弹窗满意度；</p></li><li><p>通过实验验证主动弹窗和用户点击弹窗的转化提升情况；</p></li><li><p>设计不同的弹窗方式，验证不同的优化效果。</p></li></ul></li><li><p>   机器人客服体验：</p><ul><li><p>问卷调查机器人满意度；</p></li><li><p>优化机器人问答算法；</p></li><li><p>通过实验对比优化前后的转化率情况。</p></li></ul></li><li><p>   资料下载：</p><ul><li><p>问卷调查资料下载的满意度；</p></li><li><p>按用户反馈改进资料下载。</p></li></ul></li><li><p>   留电页面体验：</p><ul><li>同上。</li></ul></li></ol><h2 id="三、通过精细化运营，增加用户小课转化量"><a href="#三、通过精细化运营，增加用户小课转化量" class="headerlink" title="三、通过精细化运营，增加用户小课转化量"></a>三、通过精细化运营，增加用户小课转化量</h2><ol><li><p>方案——通过RFM模型对小课用户进行分层，最终转化小课两万单</p></li><li><p>通过不同类用户转化量评估完成目标份额</p></li><li><p>随机分层抽样：通过对不同的RMF层级用户抽样，实验设计最有效的转化营销方案</p></li><li><p>7日为周期评估实验结果</p></li><li><p>报告结案</p></li></ol><h3 id="具体操作-2"><a href="#具体操作-2" class="headerlink" title="具体操作"></a>具体操作</h3><h4 id="用户价值分析，RFM建模"><a href="#用户价值分析，RFM建模" class="headerlink" title="用户价值分析，RFM建模"></a>用户价值分析，RFM建模</h4><blockquote><p>RFM客户价值模型：R(recency)黏性，F(frequancy)忠诚度，M(monetary)消费能力。</p></blockquote><p>原始字段和客户分类标准如下：</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV2dtLU9Ibks4YnRiT2NCP2U9Z0twN3Ro.png" alt="图16"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV2ZIbHYtVGJVS2hIY2Y0P2U9VGVoSTVt.png" alt="图17"></p><p>构建出R、F、M列，并将其与均值比较得出RS、FS、MS列，将三列&amp;起来得到辅助列，与客户分类表的辅助列关联起来得到客户类型。</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV3BudVRsNG9IUnYweUk5P2U9bkEzMTg0.png" alt="图18"></p><p>得到客户各类型人数表格和饼状图如下：：</p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV2tHdW0yTll0TXZvX1pWP2U9WXk5VnBm.png" alt="图19"></p><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvcyFBaE8wcUlFYWhLejhrV3VLV0drelNnREFYY2t4P2U9VmhPU0xQ.png" alt="图20"></p><h2 id="四、后续计划"><a href="#四、后续计划" class="headerlink" title="四、后续计划"></a>四、后续计划</h2><ol><li><p>   为学院设计精细化运营方案，利用推荐算法设计出客户的兴趣领域。</p><ul><li><p>重要价值客户——直接推荐大课购买的方案来吸引客户转化</p></li><li><p>重要保持客户——小课促销来吸引客户复购，之后再逐步推荐大课来促进用户转化</p></li><li><p>重要发展客户——可以用大课送会员的方式来吸引客户转化</p></li><li><p>重要挽留客户——小课促销方案来吸引客户复购，之后再逐步用大课送会员方式吸引客户转化</p></li><li><p>一般价值客户——大课限时促销方案吸引客户转化</p></li><li><p>一般发展客户——小课转大课可优惠来吸引用户转化</p></li><li><p>一般保持客户——小课促销来吸引客户复购，之后逐步推荐大课来促进转化</p></li><li><p>一般挽留客户——先做用户召回，逐步开始用小课促销方案吸引用户复购</p></li></ul></li><li><p>   对不同层级学员做运营方案实验</p></li></ol><h2 id="五、最终结论"><a href="#五、最终结论" class="headerlink" title="五、最终结论"></a>五、最终结论</h2><ol><li><p>八月的免费渠道下的站内广告位虽然出现亏损活动，但从1-8月的数据来看，站内广告位仍然是优质渠道（在综合分析的渠道排名中居于第四），后需要重点关注。</p><ul><li><p>通过分析发现8月销售额上升，而毛利额异常下降是由于站内广告位做打折促销引发的。由于折价设置失误导致出现账面亏损，从而引发毛利额下降问题。</p></li><li><p>该问题需反馈营销团队，后续设计价格预警系统，如有类似价格设置失误情况，会及时预警。</p></li><li><p>通过综合分析，对各渠道的ROI、报名人数转化率、跳出率、线索量做综合指数，计算出19年8月的最优渠道为站内广告位渠道。后续需与营销团队依据各渠道特点进一步商议渠道改进方案。</p></li></ul></li><li><p>留电环节为重点优化环节，优化后对整体转化率有1.52pp的提升。</p><ul><li><p>通过漏斗分析，发现用户转化率环节中，留电环节转化率较低。</p></li><li><p>与客服，产品团队商议后制定改进方案。经过一个月的改进，留电环节率从22.57%提升至44.16%，整体转化率有1.52pp的提高。大课转化人数较8月增加330人，按每人人均1600的毛利额计算，预计能提升52.8万的毛利额。按当月浏览人数16034人计算，预计报名人数有586人，预计改进能完成93.76万元的毛利额。</p></li></ul></li><li><p>经过用户精细化运营推广模型后，已转化大课501人，小课3377人。按照小课人均毛利额17元计算，小课预计能完成5.7万毛利额任务。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据分析</tag>
      
      <tag>Excel</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计量经济学笔记</title>
    <link href="/2019/09/02/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    <url>/2019/09/02/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<p><img src="https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBaE8wcUlFYWhLejhrVjJadWpQOEdaTTZ2LUJqP2U9MDNjTVh0.png"></p><p>没想到吧？我竟然还得学计量经济学。</p><h1 id="什么是计量经济学？"><a href="#什么是计量经济学？" class="headerlink" title="什么是计量经济学？"></a>什么是计量经济学？</h1><p>在我看来，计量经济学是应用数学和统计学方法，研究经济现象和经济理论的学科。</p><p>它的研究对象包括各种经济现象，如消费者行为、生产者行为、市场供求关系、经济增长、收入分配等等。</p><p>通过运用统计学和经济学的方法，计量经济学旨在解决经济学领域中的各种问题和争议，如政策制定、市场分析和企业管理等等。</p><h1 id="计量经济学的基本方法"><a href="#计量经济学的基本方法" class="headerlink" title="计量经济学的基本方法"></a>计量经济学的基本方法</h1><p>在计量经济学中，有很多基本的方法和技术，包括描述统计、推论统计、回归分析、时间序列分析等等。其中，回归分析是计量经济学中最为基础和重要的方法之一。</p><p>回归分析是通过建立数学模型来探究变量之间的关系，并且利用实证数据来估计模型的参数。通常情况下，回归分析可以用来解决以下问题：</p><p>预测：通过建立回归模型，可以预测因变量随自变量变化而发生的变化趋势。</p><p>因果关系分析：通过建立回归模型，可以研究因变量与自变量之间的因果关系，即自变量对因变量的影响程度。</p><p>控制变量分析：通过控制其他变量，可以研究某一个变量对因变量的影响。</p><h1 id="计量经济学的应用领域"><a href="#计量经济学的应用领域" class="headerlink" title="计量经济学的应用领域"></a>计量经济学的应用领域</h1><p>计量经济学具有广泛的应用领域，包括宏观经济分析、产业经济分析、劳动经济学、金融经济学、国际贸易等等。在这里，我想重点介绍一下计量经济学在劳动经济学中的应用。</p><p>劳动经济学是研究劳动力市场的经济学分支，它的研究对象包括劳动力供给、工资水平、失业率等等。在劳动经济学中，计量经济学的应用十分广泛。通过建立回归模型，研究不同因素对劳动力市场的影响，如受教育程度、性别、年龄、种族、婚姻状态等等。通过对这些因素的研究，劳动经济学可以为政策制定和市场分析提供重要的参考和决策支持。</p><p>例如，在女性就业和收入不平等问题上，计量经济学可以提供很好的解决方案。通过对女性就业和收入的数据进行回归分析，我们可以发现，性别、教育程度和工作经验等因素对女性的就业和收入水平产生了很大的影响。因此，政策制定者可以通过加强女性教育和培训、改善女性工作条件等方式来推动女性在劳动力市场中的地位和收入水平。</p><h1 id="计量经济学的挑战与展望"><a href="#计量经济学的挑战与展望" class="headerlink" title="计量经济学的挑战与展望"></a>计量经济学的挑战与展望</h1><p>计量经济学的发展历程中，不仅有各种经典方法和技术的不断完善和创新，还有一些新的挑战和展望。</p><p>首先，计量经济学面临的一个重要挑战是数据的质量和可用性。在现实中，经济数据往往存在着不完备、不一致和不准确等问题。因此，如何获取高质量的数据，如何处理和清洗数据，如何充分利用数据，是计量经济学研究的重要难点和挑战。</p><p>其次，随着经济和社会的不断变化和发展，计量经济学也需要不断创新和发展。例如，近年来随着互联网和大数据技术的不断发展，计量经济学也面临着新的机遇和挑战。在这个新的背景下，计量经济学需要更多地运用计算机技术和人工智能算法。</p><h2 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h2><p>数据获取和处理的困难：计量经济学需要大量的数据支持，但是真实的数据并不总是易于获取或处理。有时候，数据质量可能较低或缺失，或者不太适用于特定的研究问题。此外，计量经济学需要运用高级的数理统计和计算机科学技术来处理数据，需要专业的知识和技能支持。</p><p>模型的设定和选择问题：计量经济学需要根据实际问题建立合理的经济模型，并对模型进行推断和检验。但是，经济现象的复杂性使得模型的设定和选择变得十分困难。在实际应用中，计量经济学需要根据不同的情况，采用不同的模型来解决问题。</p><p>数据解释的复杂性：计量经济学得出的结果需要解释和分析，但是，由于经济现象的多元性和复杂性，这些结果的解释和分析往往也是相当困难的。此外，计量经济学得出的结论可能会受到许多其他因素的影响，这些因素需要进行进一步的分析和控制。</p><h2 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h2><p>更广泛的应用范围：计量经济学在经济学理论和实践中的应用范围已经很广泛了，但是，仍有很多未被开发的领域，如环境经济学、卫生经济学、能源经济学等等。这些领域都有着自己的数据和问题，计量经济学可以为这些领域的研究提供有效的方法和技术支持。</p><p>更好的数据支持：数据对于计量经济学研究的重要性不言而喻，因此，数据质量和获取的可靠性至关重要。随着数据科学和人工智能技术的快速发展，计量经济学可以借助这些技术获取更加精准的数据，从而提高研究的精度和效率。</p><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>在学习《计量经济学》的过程中，我深刻认识到了计量经济学的重要性和应用广泛性。</p><p>除了基本的统计学和经济学知识，我还学会了如何运用计量经济学的方法和技术来分析经济问题。</p><p>同时，我也了解到了计量经济学在实际应用中的限制和局限性，例如数据的质量问题、模型设定的合理性等等。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经济学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode入门</title>
    <link href="/2019/08/15/LeetCode/"/>
    <url>/2019/08/15/LeetCode/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>我终于也开始搞Leetcode了耶✌️～但是全英文看起来还是蛮难受的。。</p><p>随便写一点题解填补博客哈哈哈哈</p><h1 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a>两数之和</h1><p>这是一道非常基础的题目，要求在一个数组中找到两个数，它们的和等于一个目标值。</p><p>解题思路：使用一个字典（dictionary）来记录已经遍历过的数值及其下标，然后对于每一个新的数值，判断它与目标值的差是否已经在字典中出现过。如果已经出现过，说明之前已经遍历过与差相等的数值，那么就可以直接返回当前数值和之前的数值下标。</p><p>这样就可以在O(n)的时间复杂度内解决这个问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">twoSum</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], target: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]:<br>        nums_dict = &#123;&#125;<br>        <span class="hljs-keyword">for</span> i, num <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(nums):<br>            <span class="hljs-keyword">if</span> target - num <span class="hljs-keyword">in</span> nums_dict:<br>                <span class="hljs-keyword">return</span> [nums_dict[target - num], i]<br>            nums_dict[num] = i<br>        <span class="hljs-keyword">return</span> []<br></code></pre></td></tr></table></figure><h1 id="盛最多水的容器"><a href="#盛最多水的容器" class="headerlink" title="盛最多水的容器"></a>盛最多水的容器</h1><p>这是一道比较经典的题目，要求在一个数组中找到两个数值，它们的距离与较小的数值之间形成的面积最大。</p><p>解题思路：使用双指针来遍历数组，分别从数组的两端开始，每次计算当前面积，并将较小的那个指针向中心移动一步。这样可以保证每次移动都是移动较小的指针，最终可以得到最大的面积。</p><p>这个算法的时间复杂度为O(n)，空间复杂度为O(1)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">maxArea</span>(<span class="hljs-params">self, height: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        left, right = <span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(height) - <span class="hljs-number">1</span><br>        max_area = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> left &lt; right:<br>            area = <span class="hljs-built_in">min</span>(height[left], height[right]) * (right - left)<br>            max_area = <span class="hljs-built_in">max</span>(max_area, area)<br>            <span class="hljs-keyword">if</span> height[left] &lt; height[right]:<br>                left += <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right -= <span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> max_area<br></code></pre></td></tr></table></figure><h1 id="反转链表"><a href="#反转链表" class="headerlink" title="反转链表"></a>反转链表</h1><p>这是一道链表操作的题目，要求将一个链表反转。</p><p>解题思路：使用两个指针来遍历链表，分别记录当前节点和前一个节点。每次将当前节点指向前一个节点，然后将当前指针往后移动一位，循环遍历整个链表。这样可以实现链表的反转。</p><p>时间复杂度为O(n)，空间复杂度为O(1)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">reverseList</span>(<span class="hljs-params">self, head: <span class="hljs-type">Optional</span>[ListNode]</span>) -&gt; <span class="hljs-type">Optional</span>[ListNode]:<br>        <span class="hljs-keyword">if</span> head <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> head<br>        prev, cur = <span class="hljs-literal">None</span>, head<br>        <span class="hljs-keyword">while</span> cur <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            nx = cur.<span class="hljs-built_in">next</span><br>            cur.<span class="hljs-built_in">next</span> = prev<br>            prev = cur<br>            cur = nx<br>        <span class="hljs-keyword">return</span> prev<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>刷题也是一种成就感（Hi～洛谷）</title>
    <link href="/2019/06/30/%E6%B4%9B%E8%B0%B7%E5%88%B7%E9%A2%98/"/>
    <url>/2019/06/30/%E6%B4%9B%E8%B0%B7%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>学习C语言怎么能不写代码呢～</p><p>不是说好了洛谷是入门吗（<del>怎么这么难</del>）</p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><h2 id="B2002-Hello-World"><a href="#B2002-Hello-World" class="headerlink" title="B2002 Hello,World!"></a>B2002 Hello,World!</h2><p><a href="https://www.luogu.com.cn/problem/B2002">原题链接</a></p><p>输出“Hello,World!”</p><p>不能再简单了～</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hello,World!&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="B2005-字符三角形"><a href="#B2005-字符三角形" class="headerlink" title="B2005 字符三角形"></a>B2005 字符三角形</h2><p><a href="https://www.luogu.com.cn/problem/B2005">原题链接</a></p><p>打印等腰三角形</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> l=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">char</span> z;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%c&quot;</span>,&amp;z);<br>    <span class="hljs-keyword">while</span>(l&lt;<span class="hljs-number">3</span>)&#123;<br>        <span class="hljs-type">int</span> k=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span>(k&lt;=<span class="hljs-number">2</span>-l)&#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>            k++;<br>        &#125;<br>        <span class="hljs-type">int</span> x=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span>(x&lt;=<span class="hljs-number">2</span>*l+<span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,z);<br>            x++;<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>        l++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B2025-输出字符菱形"><a href="#B2025-输出字符菱形" class="headerlink" title="B2025 输出字符菱形"></a>B2025 输出字符菱形</h2><p><a href="https://www.luogu.com.cn/problem/B2025">原题链接</a></p><p>打印字符菱形</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>   <span class="hljs-type">int</span> l=<span class="hljs-number">0</span>;<br>   <span class="hljs-keyword">while</span>(l&lt;<span class="hljs-number">3</span>)&#123;<br>       <span class="hljs-type">int</span> k=<span class="hljs-number">1</span>;<br>       <span class="hljs-keyword">while</span>(k&lt;=<span class="hljs-number">2</span>-l)&#123;<br>           <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>           k++;<br>       &#125;<br>       <span class="hljs-type">int</span> x=<span class="hljs-number">1</span>;<br>       <span class="hljs-keyword">while</span>(x&lt;=<span class="hljs-number">2</span>*l+<span class="hljs-number">1</span>)&#123;<br>           <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*&quot;</span>);<br>           x++;<br>       &#125;<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>       l++;<br>   &#125;<br>   l=<span class="hljs-number">1</span>;<br>   <span class="hljs-keyword">while</span>(l&lt;=<span class="hljs-number">2</span>)&#123;<br>       <span class="hljs-type">int</span> a=<span class="hljs-number">1</span>;<br>       <span class="hljs-keyword">while</span>(a&lt;=l)&#123;<br>           <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>           a++;<br>       &#125;<br>       <span class="hljs-type">int</span> b=<span class="hljs-number">1</span>;<br>       <span class="hljs-keyword">while</span>(b&lt;=<span class="hljs-number">5</span><span class="hljs-number">-2</span>*l)&#123;<br>           <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;*&quot;</span>);<br>           b++;<br>       &#125;<br>       <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    l++;<br>   &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B2029-大象喝水"><a href="#B2029-大象喝水" class="headerlink" title="B2029 大象喝水"></a>B2029 大象喝水</h2><p><a href="https://www.luogu.com.cn/problem/B2029">原题链接</a></p><p>简单计算题。注意C语言中的除法。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> pi 3.14</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> r,h,x;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;h,&amp;r);<br>    <span class="hljs-type">double</span> v=r*pi*r*h;<br>    x=<span class="hljs-number">20000</span>/v+<span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,x);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1001-A-B-Problem"><a href="#P1001-A-B-Problem" class="headerlink" title="P1001 A+B Problem"></a>P1001 A+B Problem</h2><p><a href="https://www.luogu.com.cn/problem/P1001">原题链接</a></p><p>A+B</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>   <span class="hljs-type">int</span> a,b,s;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);<br>    s=a+b;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,s);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1035-NOIP2002-普及组-级数求和"><a href="#P1035-NOIP2002-普及组-级数求和" class="headerlink" title="P1035 [NOIP2002 普及组] 级数求和"></a>P1035 [NOIP2002 普及组] 级数求和</h2><p><a href="https://www.luogu.com.cn/problem/P1035">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> k,i=<span class="hljs-number">0</span>;<br>    <span class="hljs-type">double</span> s=<span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;k);<br>    <span class="hljs-keyword">while</span> (s&lt;k)&#123;<br>        i++;<br>        s+=<span class="hljs-number">1</span>/(<span class="hljs-type">double</span>)i;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (k==<span class="hljs-number">1</span>) i=<span class="hljs-number">2</span>;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,i);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1046-NOIP2005-普及组-陶陶摘苹果"><a href="#P1046-NOIP2005-普及组-陶陶摘苹果" class="headerlink" title="P1046 [NOIP2005 普及组] 陶陶摘苹果"></a>P1046 [NOIP2005 普及组] 陶陶摘苹果</h2><p><a href="https://www.luogu.com.cn/problem/P1046">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a[<span class="hljs-number">10</span>],tth;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++)&#123;<br>        <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;tth);<br>    <span class="hljs-type">int</span> h=tth+<span class="hljs-number">30</span>;<br>    <span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">10</span>;k++)&#123;<br>        <span class="hljs-keyword">if</span> (h&gt;=a[k])<br>        cnt++;<br>    &#125;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,cnt);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1085-NOIP2004-普及组-不高兴的津津"><a href="#P1085-NOIP2004-普及组-不高兴的津津" class="headerlink" title="P1085 [NOIP2004 普及组] 不高兴的津津"></a>P1085 [NOIP2004 普及组] 不高兴的津津</h2><p><a href="https://www.luogu.com.cn/problem/P1085">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> sh,mh,h=<span class="hljs-number">0</span>,d=<span class="hljs-number">0</span>,s=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">8</span>;++i)&#123;<br>        <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;sh,&amp;mh);<br>        h=sh+mh;<br>        <span class="hljs-keyword">if</span> (h&gt;<span class="hljs-number">8</span>)&#123;<br>           <span class="hljs-keyword">if</span> (d==<span class="hljs-number">0</span>) &#123;<br>               d=i,s=h;<br>           &#125;<br>           <span class="hljs-keyword">else</span>&#123;<br>               <span class="hljs-keyword">if</span>(h&gt;s)&#123;<br>               d=i,s=h;&#125;<br>           &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (d==<span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;0&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,d);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1089-NOIP2004-提高组-津津的储蓄计划"><a href="#P1089-NOIP2004-提高组-津津的储蓄计划" class="headerlink" title="P1089 [NOIP2004 提高组] 津津的储蓄计划"></a>P1089 [NOIP2004 提高组] 津津的储蓄计划</h2><p><a href="https://www.luogu.com.cn/problem/P1089">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a[<span class="hljs-number">13</span>],u=<span class="hljs-number">0</span>,s=<span class="hljs-number">0</span>,q=<span class="hljs-number">0</span>;<span class="hljs-comment">//u余额，s存钱，q本月预算</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">13</span>;i++)&#123;<br>        <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;a[i]);<br>    &#125;<br>    <span class="hljs-type">int</span> x=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>  (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">13</span>;i++)&#123;<br>        q=<span class="hljs-number">300</span>+u;<br>        <span class="hljs-keyword">if</span> (q-a[i]&gt;=<span class="hljs-number">0</span>)&#123;<br>           u=q-a[i];<br>           <span class="hljs-keyword">if</span> (u/<span class="hljs-number">100</span>&gt;<span class="hljs-number">0</span>)&#123;<br>               s+=u/<span class="hljs-number">100</span>*<span class="hljs-number">100</span>;<br>               u%=<span class="hljs-number">100</span>;<br>           &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;-%d&quot;</span>,i);<br>            x=<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (x==<span class="hljs-number">0</span>) <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,s*<span class="hljs-number">12</span>/<span class="hljs-number">10</span>+u);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1307-NOIP2011-普及组-数字反转"><a href="#P1307-NOIP2011-普及组-数字反转" class="headerlink" title="P1307 [NOIP2011 普及组] 数字反转"></a>P1307 [NOIP2011 普及组] 数字反转</h2><p><a href="https://www.luogu.com.cn/problem/P1307">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-type">int</span> a;<span class="hljs-comment">//输出</span><br>    <span class="hljs-keyword">if</span> (n&lt;<span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;-&quot;</span>);<span class="hljs-comment">//先输出负号</span><br>        n=-n;&#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n==<span class="hljs-number">0</span>) <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;0&quot;</span>);<br>     <span class="hljs-type">int</span> c=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (n&gt;<span class="hljs-number">0</span>)&#123;<br>        a=n%<span class="hljs-number">10</span>;<br>       <br>        <span class="hljs-keyword">if</span> (a!=<span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,a);<br>            c=<span class="hljs-number">1</span>;<span class="hljs-comment">//a不为0就令c=1</span><br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c==<span class="hljs-number">1</span>) <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,a);<span class="hljs-comment">//a为0 看看之前有没有输出</span><br>        n/=<span class="hljs-number">10</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1420-最长连号"><a href="#P1420-最长连号" class="headerlink" title="P1420 最长连号"></a>P1420 最长连号</h2><p><a href="https://www.luogu.com.cn/problem/P1420">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n,max=<span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d\n&quot;</span>,&amp;n);<br>    <span class="hljs-type">int</span> a[n],c[n];<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;a[<span class="hljs-number">0</span>]);<br>    c[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)&#123;<br>        c[i]=<span class="hljs-number">1</span>;<br>        <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;a[i]);<br>        <span class="hljs-keyword">if</span> (a[i]==a[i<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>)&#123;<br>            c[i]=c[i<span class="hljs-number">-1</span>]+<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (c[i]&gt;max) max=c[i];<br>    &#125;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,max); <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1421-小玉买文具"><a href="#P1421-小玉买文具" class="headerlink" title="P1421 小玉买文具"></a>P1421 小玉买文具</h2><p><a href="https://www.luogu.com.cn/problem/P1421">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a,b;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,(a*<span class="hljs-number">10</span>+b)/<span class="hljs-number">19</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1422-小玉家的电费"><a href="#P1422-小玉家的电费" class="headerlink" title="P1422 小玉家的电费"></a>P1422 小玉家的电费</h2><p><a href="https://www.luogu.com.cn/problem/P1422">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-type">double</span> m,a[<span class="hljs-number">3</span>]=&#123;<span class="hljs-number">0.4463</span>,<span class="hljs-number">0.4663</span>,<span class="hljs-number">0.5663</span>&#125;;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-keyword">if</span> (n&lt;<span class="hljs-number">150</span>) &#123;<br>    m=a[<span class="hljs-number">0</span>]*n;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n&gt;<span class="hljs-number">151</span>&amp;n&lt;<span class="hljs-number">400</span>)&#123;<br>            m=<span class="hljs-number">150</span>*a[<span class="hljs-number">0</span>]+(n<span class="hljs-number">-150</span>)*a[<span class="hljs-number">1</span>];<br>    &#125;<br>    <span class="hljs-keyword">else</span> m=<span class="hljs-number">150</span>*a[<span class="hljs-number">0</span>]+(<span class="hljs-number">400</span><span class="hljs-number">-150</span>)*a[<span class="hljs-number">1</span>]+(n<span class="hljs-number">-400</span>)*a[<span class="hljs-number">2</span>];<br>     <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%.1lf&quot;</span>,m);       <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1423-小玉在游泳"><a href="#P1423-小玉在游泳" class="headerlink" title="P1423 小玉在游泳"></a>P1423 小玉在游泳</h2><p><a href="https://www.luogu.com.cn/problem/P1423">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">const</span> <span class="hljs-type">double</span> k=<span class="hljs-number">0.98</span>;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>   <span class="hljs-type">double</span> s,l=<span class="hljs-number">2</span>,x=<span class="hljs-number">2</span>;<br>   <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%lf&quot;</span>,&amp;s);<br>   <span class="hljs-keyword">if</span> (s==<span class="hljs-number">0</span>) <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;0&quot;</span>);<br>   <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (s&lt;=<span class="hljs-number">2</span>) <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;1&quot;</span>);<br>   <span class="hljs-keyword">else</span>&#123;<br>       <span class="hljs-type">int</span> c=<span class="hljs-number">1</span>;<br>       <span class="hljs-keyword">while</span> (l&lt;s)&#123;<br>           c++;<br>           x*=k;<br>            l+=x;<br>        &#125;<br>   <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,c);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1424-小鱼的航程-改进版"><a href="#P1424-小鱼的航程-改进版" class="headerlink" title="P1424 小鱼的航程(改进版)"></a>P1424 小鱼的航程(改进版)</h2><p><a href="https://www.luogu.com.cn/problem/P1424">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> x,n;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;x,&amp;n);<br>    <span class="hljs-comment">//第一周 5-x,</span><br>    <span class="hljs-type">int</span> fn;<br>    <span class="hljs-keyword">if</span>(x&gt;<span class="hljs-number">5</span>) fn=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">else</span> fn=<span class="hljs-number">5</span>-x+<span class="hljs-number">1</span>;<br>    <br>    <span class="hljs-type">int</span> sn=n-(<span class="hljs-number">8</span>-x);<br>    <span class="hljs-type">int</span> w=sn/<span class="hljs-number">7</span>,sw=sn%<span class="hljs-number">7</span>;<br>    <span class="hljs-comment">//s是有几周 sw=剩的天数</span><br>    <span class="hljs-keyword">if</span> (sw&gt;<span class="hljs-number">5</span>) sw=<span class="hljs-number">5</span>;<br>    <span class="hljs-type">int</span> s=(fn+w*<span class="hljs-number">5</span>+sw)*<span class="hljs-number">250</span>;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,s);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1425-小鱼的游泳时间"><a href="#P1425-小鱼的游泳时间" class="headerlink" title="P1425 小鱼的游泳时间"></a>P1425 小鱼的游泳时间</h2><p><a href="https://www.luogu.com.cn/problem/P1425">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a,b,c,d,e=<span class="hljs-number">0</span>,f=<span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d %d %d %d&quot;</span>,&amp;a,&amp;b,&amp;c,&amp;d);<br>    <span class="hljs-keyword">if</span>(d&gt;=b)&#123;<br>        e=c-a,f=d-b;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>      e=c-a<span class="hljs-number">-1</span>,f=<span class="hljs-number">60</span>-b+d;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,e,f);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1888-三角函数"><a href="#P1888-三角函数" class="headerlink" title="P1888 三角函数"></a>P1888 三角函数</h2><p><a href="https://www.luogu.com.cn/problem/P1888">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a[<span class="hljs-number">3</span>];<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d %d %d&quot;</span>,&amp;a[<span class="hljs-number">0</span>],&amp;a[<span class="hljs-number">1</span>],&amp;a[<span class="hljs-number">2</span>]);<br>    <span class="hljs-type">int</span> minx=a[<span class="hljs-number">0</span>],maxx=a[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span> (a[i]&lt;minx)<br>        minx=a[i];<br>        <span class="hljs-keyword">if</span> (a[i]&gt;maxx)<br>        maxx=a[i];<br>    &#125;<br>    <span class="hljs-type">int</span> x=minx,y=maxx;<br>    <span class="hljs-keyword">while</span> (y%x!=<span class="hljs-number">0</span>)&#123;<br>    <span class="hljs-type">int</span> u=y%x;<br>    y=x,x=u;<br>    &#125;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d/%d&quot;</span>,minx/x,maxx/x);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1909-NOIP2016-普及组-买铅笔"><a href="#P1909-NOIP2016-普及组-买铅笔" class="headerlink" title="P1909 [NOIP2016 普及组] 买铅笔"></a>P1909 [NOIP2016 普及组] 买铅笔</h2><p><a href="https://www.luogu.com.cn/problem/P1909">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n,s[<span class="hljs-number">3</span>],j[<span class="hljs-number">3</span>],m[<span class="hljs-number">3</span>],c[<span class="hljs-number">3</span>];<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<br>        <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;s[i],&amp;j[i]);<br>    &#125;<br>    <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span> (n%s[i]==<span class="hljs-number">0</span>)&#123;<br>            c[i]=n/s[i];<br>        &#125;<span class="hljs-keyword">else</span> c[i]=n/s[i]+<span class="hljs-number">1</span>;<br>        m[i]=j[i]*c[i];<br>    &#125;<br>    <span class="hljs-type">int</span> min=m[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span> (m[i]&lt;min)<br>        min=m[i];<br>    &#125;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,min);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1980-NOIP2013-普及组-计数问题"><a href="#P1980-NOIP2013-普及组-计数问题" class="headerlink" title="P1980 [NOIP2013 普及组] 计数问题"></a>P1980 [NOIP2013 普及组] 计数问题</h2><p><a href="https://www.luogu.com.cn/problem/P1980">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n,x;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;n,&amp;x);<br>   <span class="hljs-comment">// if (n&lt;x) printf (&quot;0&quot;);</span><br>    <span class="hljs-comment">//else&#123;</span><br>        <span class="hljs-type">int</span> c=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            <span class="hljs-type">int</span> t=i;<br>           <span class="hljs-keyword">while</span> (t&gt;<span class="hljs-number">0</span>)&#123;<br>               <span class="hljs-type">int</span> u=t%<span class="hljs-number">10</span>;<br>               <span class="hljs-keyword">if</span> (u==x) c++;<br>               t/=<span class="hljs-number">10</span>;<br>           &#125; <br>        &#125;<br>        <span class="hljs-comment">//if (x!=0) c++;</span><br>        <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,c);<br>    <span class="hljs-comment">//&#125;</span><br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P3954-NOIP2017-普及组-成绩"><a href="#P3954-NOIP2017-普及组-成绩" class="headerlink" title="P3954 [NOIP2017 普及组] 成绩"></a>P3954 [NOIP2017 普及组] 成绩</h2><p><a href="https://www.luogu.com.cn/problem/P3954">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a,b,c;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>,&amp;a,&amp;b,&amp;c);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,(<span class="hljs-type">int</span>)(<span class="hljs-number">0.2</span>*a+<span class="hljs-number">0.3</span>*b+<span class="hljs-number">0.5</span>*c));<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P2669-NOIP2015-普及组-金币"><a href="#P2669-NOIP2015-普及组-金币" class="headerlink" title="P2669 [NOIP2015 普及组] 金币"></a>P2669 [NOIP2015 普及组] 金币</h2><p><a href="https://www.luogu.com.cn/problem/P2669">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> k,s=<span class="hljs-number">0</span>,i=<span class="hljs-number">1</span>,u=<span class="hljs-number">0</span>;<span class="hljs-comment">//s 金币数; i周期;j 天数;u 剩余天数</span><br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;k);<br>    <span class="hljs-keyword">while</span> (i*(i+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>&lt;k)&#123;<br>        s+=i*i;<br><span class="hljs-comment">//        printf (&quot;i:%d s:%d\n&quot;,i,s);</span><br>        i++;<br>    &#125;<br>    u=k-i*(i<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">if</span>(u&gt;<span class="hljs-number">0</span>) s+=u*i;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,s);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P4414-COCI2006-2007-2-ABC"><a href="#P4414-COCI2006-2007-2-ABC" class="headerlink" title="P4414 [COCI2006-2007#2] ABC"></a>P4414 [COCI2006-2007#2] ABC</h2><p><a href="https://www.luogu.com.cn/problem/P4414">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a[<span class="hljs-number">3</span>];<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d %d %d&quot;</span>,&amp;a[<span class="hljs-number">0</span>],&amp;a[<span class="hljs-number">1</span>],&amp;a[<span class="hljs-number">2</span>]);<br>    <span class="hljs-type">char</span> b[<span class="hljs-number">3</span>];<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;\n%c%c%c&quot;</span>,&amp;b[<span class="hljs-number">0</span>],&amp;b[<span class="hljs-number">1</span>],&amp;b[<span class="hljs-number">2</span>]);<br>    <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">3</span>;k++)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">2</span>;i++)&#123;<br>            <span class="hljs-keyword">if</span> (a[i]&gt;a[i+<span class="hljs-number">1</span>])&#123;<br>            <span class="hljs-type">int</span> x=a[i];<br>            a[i]=a[i+<span class="hljs-number">1</span>];<br>            a[i+<span class="hljs-number">1</span>]=x;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">3</span>;j++)&#123;<br>       <span class="hljs-keyword">if</span> (b[j]==<span class="hljs-string">&#x27;A&#x27;</span>)&#123;<br>           <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d &quot;</span>,a[<span class="hljs-number">0</span>]);<br>       &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b[j]==<span class="hljs-string">&#x27;B&#x27;</span>) &#123;<br>           <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d &quot;</span>,a[<span class="hljs-number">1</span>]);<br>       &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b[j]==<span class="hljs-string">&#x27;C&#x27;</span>)&#123;<br>            <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d &quot;</span>,a[<span class="hljs-number">2</span>]);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5703-【深基2-例5】苹果采购"><a href="#P5703-【深基2-例5】苹果采购" class="headerlink" title="P5703 【深基2.例5】苹果采购"></a>P5703 【深基2.例5】苹果采购</h2><p><a href="https://www.luogu.com.cn/problem/P5703">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> a,b,s;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);<br>    s=a*b;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,s);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5704-【深基2-例6】字母转换"><a href="#P5704-【深基2-例6】字母转换" class="headerlink" title="P5704 【深基2.例6】字母转换"></a>P5704 【深基2.例6】字母转换</h2><p><a href="https://www.luogu.com.cn/problem/P5704">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">char</span> a,s;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%c&quot;</span>,&amp;a);<br>    s=<span class="hljs-string">&#x27;A&#x27;</span>-<span class="hljs-string">&#x27;a&#x27;</span>+a;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,s);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5705-【深基2-例7】数字反转"><a href="#P5705-【深基2-例7】数字反转" class="headerlink" title="P5705 【深基2.例7】数字反转"></a>P5705 【深基2.例7】数字反转</h2><p><a href="https://www.luogu.com.cn/problem/P5705">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a,b;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d.%d&quot;</span>,&amp;a,&amp;b);<br>    <span class="hljs-type">int</span> c=a/<span class="hljs-number">100</span>,d=a%<span class="hljs-number">100</span>/<span class="hljs-number">10</span>,e=a%<span class="hljs-number">100</span>%<span class="hljs-number">10</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d.%d&quot;</span>,b,e*<span class="hljs-number">100</span>+d*<span class="hljs-number">10</span>+c);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5708-【深基2-习2】三角形面积"><a href="#P5708-【深基2-习2】三角形面积" class="headerlink" title="P5708 【深基2.习2】三角形面积"></a>P5708 【深基2.习2】三角形面积</h2><p><a href="https://www.luogu.com.cn/problem/P5708">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">double</span> a,b,c;<br>    <span class="hljs-type">double</span> s;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lf %lf %lf&quot;</span>,&amp;a,&amp;b,&amp;c);<br>    <span class="hljs-type">double</span> p=(a+b+c)/<span class="hljs-number">2</span>;<br>    s= <span class="hljs-built_in">sqrt</span>(p*(p-a)*(p-b)*(p-c));<br><span class="hljs-comment">//    s=(int)(s*10+0.5)/10.0;</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.1lf&quot;</span>,s);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5709-【深基2-习6】Apples-Prologue-x2F-苹果和虫子"><a href="#P5709-【深基2-习6】Apples-Prologue-x2F-苹果和虫子" class="headerlink" title="P5709 【深基2.习6】Apples Prologue &#x2F; 苹果和虫子"></a>P5709 【深基2.习6】Apples Prologue &#x2F; 苹果和虫子</h2><p><a href="https://www.luogu.com.cn/problem/P5709">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> m,t,s;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d %d %d&quot;</span>,&amp;m,&amp;t,&amp;s);<br>    <span class="hljs-keyword">if</span>(m*t&gt;s)<br>        <span class="hljs-keyword">if</span> (s%t==<span class="hljs-number">0</span>)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,m-s/t);<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,m-s/t<span class="hljs-number">-1</span>);<br>    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5710-【深基3-例2】数的性质"><a href="#P5710-【深基3-例2】数的性质" class="headerlink" title="P5710 【深基3.例2】数的性质"></a>P5710 【深基3.例2】数的性质</h2><p><a href="https://www.luogu.com.cn/problem/P5710">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span>  <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span>  x;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;x);<br>    <span class="hljs-keyword">if</span> (x%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>&amp;&amp;(x&gt;<span class="hljs-number">4</span>&amp;&amp;x&lt;=<span class="hljs-number">12</span>))<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1&quot;</span>);<br>    <span class="hljs-keyword">else</span>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>    <br>    <span class="hljs-keyword">if</span> (x%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>||(x&gt;<span class="hljs-number">4</span>&amp;&amp;x&lt;=<span class="hljs-number">12</span>))<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1&quot;</span>);<br>    <span class="hljs-keyword">else</span>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>    <br>    <span class="hljs-keyword">if</span> ((x%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>&amp;&amp;!(x&gt;<span class="hljs-number">4</span>&amp;&amp;x&lt;=<span class="hljs-number">12</span>))||(x%<span class="hljs-number">2</span>!=<span class="hljs-number">0</span>&amp;&amp;(x&gt;<span class="hljs-number">4</span>&amp;&amp;x&lt;=<span class="hljs-number">12</span>)))<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1&quot;</span>);<br>    <span class="hljs-keyword">else</span>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>    <br>    <span class="hljs-keyword">if</span>(x%<span class="hljs-number">2</span>!=<span class="hljs-number">0</span>&amp;&amp;!(x&gt;<span class="hljs-number">4</span>&amp;&amp;x&lt;=<span class="hljs-number">12</span>))<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1&quot;</span>);<br>    <span class="hljs-keyword">else</span>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0&quot;</span>);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5711-【深基3-例3】闰年判断"><a href="#P5711-【深基3-例3】闰年判断" class="headerlink" title="P5711 【深基3.例3】闰年判断"></a>P5711 【深基3.例3】闰年判断</h2><p><a href="https://www.luogu.com.cn/problem/P5711">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;a);<br>    <span class="hljs-keyword">if</span> (a%<span class="hljs-number">400</span>==<span class="hljs-number">0</span>||(a%<span class="hljs-number">4</span>==<span class="hljs-number">0</span>&amp;&amp;a%<span class="hljs-number">100</span>!=<span class="hljs-number">0</span>))<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1&quot;</span>);<br>    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0&quot;</span>);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5712-【深基3-例4】Apples"><a href="#P5712-【深基3-例4】Apples" class="headerlink" title="P5712 【深基3.例4】Apples"></a>P5712 【深基3.例4】Apples</h2><p><a href="https://www.luogu.com.cn/problem/P5712">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> x;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;x);<br>    <span class="hljs-keyword">if</span> (x==<span class="hljs-number">1</span>) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Today, I ate 1 apple.&quot;</span>);<br>    <span class="hljs-keyword">if</span> (x==<span class="hljs-number">0</span>) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Today, I ate 0 apple.&quot;</span>);<br>    <span class="hljs-keyword">if</span> (x&gt;<span class="hljs-number">1</span>) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Today, I ate %d apples.&quot;</span>,x);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5713-【深基3-例5】洛谷团队系统"><a href="#P5713-【深基3-例5】洛谷团队系统" class="headerlink" title="P5713 【深基3.例5】洛谷团队系统"></a>P5713 【深基3.例5】洛谷团队系统</h2><p><a href="https://www.luogu.com.cn/problem/P5713">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n,st,lt;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    st=<span class="hljs-number">5</span>*n,lt=<span class="hljs-number">10</span>+<span class="hljs-number">3</span>*n;<br>    <span class="hljs-keyword">if</span>(st&lt;lt)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Local&quot;</span>);<br>    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Luogu&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5715-【深基3-例8】三位数排序"><a href="#P5715-【深基3-例8】三位数排序" class="headerlink" title="P5715 【深基3.例8】三位数排序"></a>P5715 【深基3.例8】三位数排序</h2><p><a href="https://www.luogu.com.cn/problem/P5715">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> a,b,c;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d %d %d&quot;</span>,&amp;a,&amp;b,&amp;c);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;<span class="hljs-number">3</span>;++k)&#123;<br>        <span class="hljs-keyword">if</span> (a&gt;b) &#123;<br>            <span class="hljs-type">int</span> x=a;<br>            a=b,b=x;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (b&gt;c)&#123;<br>            <span class="hljs-type">int</span> x=c;<br>            c=b,b=x;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d %d %d&quot;</span>,a,b,c);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5716-【深基3-例9】月份天数"><a href="#P5716-【深基3-例9】月份天数" class="headerlink" title="P5716 【深基3.例9】月份天数"></a>P5716 【深基3.例9】月份天数</h2><p><a href="https://www.luogu.com.cn/problem/P5716">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> y,m;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;y,&amp;m);<br>    <span class="hljs-keyword">if</span> (m==<span class="hljs-number">2</span>)&#123;<br>        <span class="hljs-keyword">if</span>((y%<span class="hljs-number">4</span>==<span class="hljs-number">0</span>&amp;&amp;y%<span class="hljs-number">100</span>!=<span class="hljs-number">0</span>)||y%<span class="hljs-number">400</span>==<span class="hljs-number">0</span>)<br>        <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;29&quot;</span>);<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;28&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m==<span class="hljs-number">1</span>||m==<span class="hljs-number">3</span>||m==<span class="hljs-number">5</span>||m==<span class="hljs-number">7</span>||m==<span class="hljs-number">8</span>||m==<span class="hljs-number">10</span>||m==<span class="hljs-number">12</span>)<br>            <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;31&quot;</span>);<br>            <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;30&quot;</span>);<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5718-【深基4-例2】找最小值"><a href="#P5718-【深基4-例2】找最小值" class="headerlink" title="P5718 【深基4.例2】找最小值"></a>P5718 【深基4.例2】找最小值</h2><p><a href="https://www.luogu.com.cn/problem/P5718">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">( )</span>&#123;<br>    <span class="hljs-type">int</span> n,a,c=<span class="hljs-number">0x3f3f3f3f</span>;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;++i)&#123;<br>        <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;a);<br>        <span class="hljs-keyword">if</span> (a&lt;c)&#123;<br>            c=a;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,c);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5719-【深基4-例3】分类平均"><a href="#P5719-【深基4-例3】分类平均" class="headerlink" title="P5719 【深基4.例3】分类平均"></a>P5719 【深基4.例3】分类平均</h2><p><a href="https://www.luogu.com.cn/problem/P5719">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span>  <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n,k;<br>    <br>    <span class="hljs-type">double</span> c1=<span class="hljs-number">0</span>,c2=<span class="hljs-number">0</span>,s1=<span class="hljs-number">0</span>,s2=<span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;n,&amp;k);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;++i)&#123;<br>        <span class="hljs-keyword">if</span> (i%k==<span class="hljs-number">0</span>)&#123;<br>            c1++;<br>            s1+=i;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            c2++;<br>            s2+=i; <br>        &#125;<br>    &#125;<br>   <br>    <span class="hljs-built_in">printf</span>  (<span class="hljs-string">&quot;%.1f %.1f&quot;</span>,s1/c1,s2/c2);<br>    <span class="hljs-keyword">return</span>  <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5721-【深基4-例6】数字直角三角形"><a href="#P5721-【深基4-例6】数字直角三角形" class="headerlink" title="P5721 【深基4.例6】数字直角三角形"></a>P5721 【深基4.例6】数字直角三角形</h2><p><a href="https://www.luogu.com.cn/problem/P5721">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-type">int</span> c=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> l=<span class="hljs-number">1</span>;l&lt;=n;l++)&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=n-l;i++)&#123;<br>            <span class="hljs-keyword">if</span> (c&lt;<span class="hljs-number">10</span>) <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;0%d&quot;</span>,c);<br>            <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,c);<br>            c++;<br>        &#125;<br>        <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5722-【深基4-例11】数列求和"><a href="#P5722-【深基4-例11】数列求和" class="headerlink" title="P5722 【深基4.例11】数列求和"></a>P5722 【深基4.例11】数列求和</h2><p><a href="https://www.luogu.com.cn/problem/P5722">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n,s=<span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;++i)&#123;<br>        s+=i;<br>    &#125;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,s);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5724-【深基4-习5】求极差-x2F-最大跨度值"><a href="#P5724-【深基4-习5】求极差-x2F-最大跨度值" class="headerlink" title="P5724 【深基4.习5】求极差 &#x2F; 最大跨度值"></a>P5724 【深基4.习5】求极差 &#x2F; 最大跨度值</h2><p><a href="https://www.luogu.com.cn/problem/P5724">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> inf=<span class="hljs-number">0x3f3f3f3f</span>;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-type">int</span> a[n+<span class="hljs-number">1</span>],max=-inf,min=inf;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;a[i]);<br>        <span class="hljs-keyword">if</span> (a[i]&lt;min) min=a[i];<br>        <span class="hljs-keyword">if</span> (a[i]&gt;max) max=a[i];<br>    &#125;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,max-min);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5725-【深基4-习8】求三角形"><a href="#P5725-【深基4-习8】求三角形" class="headerlink" title="P5725 【深基4.习8】求三角形"></a>P5725 【深基4.习8】求三角形</h2><p><a href="https://www.luogu.com.cn/problem/P5725">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n,c=<span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> l=<span class="hljs-number">1</span>;l&lt;=n;l++)&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>            <span class="hljs-keyword">if</span> (c&lt;<span class="hljs-number">10</span>) <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;0%d&quot;</span>,c);<br>            <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,c);<br>            c++;<br>        &#125;<br>        <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;\n&quot;</span>);<br>    c=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> l=<span class="hljs-number">1</span>;l&lt;=n;l++)&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n-l;i++)&#123;<br>            <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;  &quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;l;i++)&#123;<br>            <span class="hljs-keyword">if</span> (c&lt;<span class="hljs-number">10</span>) <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;0%d&quot;</span>,c);<br>            <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%d&quot;</span>,c);<br>            c++;<br>        &#125;<br>    <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;\n&quot;</span>);    <br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P1055-NOIP2008-普及组-ISBN-号码"><a href="#P1055-NOIP2008-普及组-ISBN-号码" class="headerlink" title="P1055 [NOIP2008 普及组] ISBN 号码"></a>P1055 [NOIP2008 普及组] ISBN 号码</h2><p><a href="https://www.luogu.com.cn/problem/P1055">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">char</span> a[<span class="hljs-number">10</span>];<br>    <span class="hljs-type">char</span> z;<br><span class="hljs-comment">//    scanf (&quot;%d-&quot;,&amp;a[1]);</span><br><span class="hljs-comment">//    for (int i=2;i&lt;5;i++)&#123;</span><br><span class="hljs-comment">//        scanf (&quot;%d&quot;,&amp;a[i]);</span><br><span class="hljs-comment">//    &#125;</span><br><span class="hljs-comment">//    scanf (&quot;-&quot;);</span><br><span class="hljs-comment">//    for (int i=5;i&lt;10;i++)&#123;</span><br><span class="hljs-comment">//        scanf (&quot;%d&quot;,&amp;a[i]);</span><br><span class="hljs-comment">//    &#125;</span><br><span class="hljs-comment">//    scanf (&quot;-%c&quot;,&amp;z);</span><br>    <span class="hljs-built_in">scanf</span> (<span class="hljs-string">&quot;%c-%c%c%c-%c%c%c%c%c-%c&quot;</span>,&amp;a[<span class="hljs-number">1</span>],&amp;a[<span class="hljs-number">2</span>],&amp;a[<span class="hljs-number">3</span>],&amp;a[<span class="hljs-number">4</span>],&amp;a[<span class="hljs-number">5</span>],&amp;a[<span class="hljs-number">6</span>],&amp;a[<span class="hljs-number">7</span>],&amp;a[<span class="hljs-number">8</span>],&amp;a[<span class="hljs-number">9</span>],&amp;z);<br><br>    <span class="hljs-type">int</span> l,s=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">10</span>;i++)&#123;<br>        l=(a[i] - <span class="hljs-string">&#x27;0&#x27;</span>)*i;<br><span class="hljs-comment">//        printf(&quot;a[%d]:%c\n&quot;, i, a[i]);</span><br>        s+=l;<br>    &#125;<br><br><span class="hljs-comment">//    printf(&quot;s:%d\n&quot;, s);</span><br>    s %= <span class="hljs-number">11</span>;<br>    <span class="hljs-keyword">if</span> (s==<span class="hljs-number">10</span>&amp;&amp;z==<span class="hljs-string">&#x27;X&#x27;</span>)&#123;<br>        <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;Right&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (s==(z-<span class="hljs-string">&#x27;0&#x27;</span>))&#123;<br>        <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;Right&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (s==<span class="hljs-number">10</span>&amp;&amp;z!=<span class="hljs-string">&#x27;X&#x27;</span>)&#123;<br>        <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%c-%c%c%c-%c%c%c%c%c-X&quot;</span>,a[<span class="hljs-number">1</span>],a[<span class="hljs-number">2</span>],a[<span class="hljs-number">3</span>],a[<span class="hljs-number">4</span>],a[<span class="hljs-number">5</span>],a[<span class="hljs-number">6</span>],a[<span class="hljs-number">7</span>],a[<span class="hljs-number">8</span>],a[<span class="hljs-number">9</span>]);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (s!=<span class="hljs-number">10</span>&amp;&amp;s!=(z-<span class="hljs-string">&#x27;0&#x27;</span>))&#123;<br>        <span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%c-%c%c%c-%c%c%c%c%c-%d&quot;</span>,a[<span class="hljs-number">1</span>],a[<span class="hljs-number">2</span>],a[<span class="hljs-number">3</span>],a[<span class="hljs-number">4</span>],a[<span class="hljs-number">5</span>],a[<span class="hljs-number">6</span>],a[<span class="hljs-number">7</span>],a[<span class="hljs-number">8</span>],a[<span class="hljs-number">9</span>],s);<br><span class="hljs-comment">//        printf(&quot;\n%d&quot;,s);</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="P5707-【深基2-例12】上学迟到"><a href="#P5707-【深基2-例12】上学迟到" class="headerlink" title="P5707 【深基2.例12】上学迟到"></a>P5707 【深基2.例12】上学迟到</h2><p><a href="https://www.luogu.com.cn/problem/P5707">原题链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> s,v,h=<span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,&amp;s,&amp;v);<br>    <span class="hljs-type">int</span> t=s/v+<span class="hljs-number">10</span>;<br>    <span class="hljs-type">int</span> a,b;<br>    <span class="hljs-keyword">if</span> (s%v!=<span class="hljs-number">0</span>)&#123;t++;&#125;<br>    <span class="hljs-keyword">if</span> (t&lt;=<span class="hljs-number">480</span>)<br>       h=<span class="hljs-number">480</span>-t;<br>    <span class="hljs-keyword">else</span><br>        h=<span class="hljs-number">60</span>*<span class="hljs-number">24</span>-(t<span class="hljs-number">-480</span>);<br>    a=h/<span class="hljs-number">60</span>,b=h%<span class="hljs-number">60</span>;<br>    <br>    <span class="hljs-keyword">if</span>(a&lt;<span class="hljs-number">10</span>) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0%d:&quot;</span>,a);<br>    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d:&quot;</span>,a);<br>    <span class="hljs-keyword">if</span>(b&lt;<span class="hljs-number">10</span>) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0%d&quot;</span>,b);<br>    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,b);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C语言入门～又爱又恨</title>
    <link href="/2019/03/10/C%E8%AF%AD%E8%A8%80%E5%88%9D%E8%A7%81/"/>
    <url>/2019/03/10/C%E8%AF%AD%E8%A8%80%E5%88%9D%E8%A7%81/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>果然，学完了SQL的我又想来霍霍C语言了～</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><ul><li>MacBookPro 2018 13（丐中丐版）+ Mojeve</li><li><code>Xcode</code> (在App Store就可以安装，用Xcode麻烦少很多)</li><li><code>CLion</code>（edu邮箱注册，教育优惠可以免费用一年）</li></ul><h2 id="配置-CLion"><a href="#配置-CLion" class="headerlink" title="配置 CLion"></a>配置 CLion</h2><p>启动<code>CLion</code>后在设置中选择”<code>Build, Execution, Deployment</code>“ -&gt; “<code>Toolchains</code>“，选择 “<code>Xcode</code>“ 作为默认工具链。</p><h2 id="创建新项目"><a href="#创建新项目" class="headerlink" title="创建新项目"></a>创建新项目</h2><p>在 CLion 中选择 “<code>File</code>“ -&gt; “<code>New Project</code>“，在左侧菜单中选择 “<code>C Executable</code>“。在右侧面板中选择项目名称、路径等信息，并设置工具链为 “<code>Xcode</code>“。</p><h2 id="写代码"><a href="#写代码" class="headerlink" title="写代码"></a>写代码</h2><p>创建一个新的<code>.c</code>文件，输入C语言代码。<code>CLion</code>提供了丰富的代码编辑功能，例如语法高亮、自动补全等。</p><h2 id="构建和运行"><a href="#构建和运行" class="headerlink" title="构建和运行"></a>构建和运行</h2><p>在CLion中选择”<code>Run</code>“ -&gt; “<code>Run</code>“来构建和运行程序。运行之后，程序的输出会显示在控制台窗口。</p><p>需要注意的是，如果在<code>Xcode</code>中安装了其他编译器，也可以在<code>CLion</code>中进行配置并使用。只需在<code>CLion</code>的”<code>Toolchains</code>“ 设置中选择其他编译器即可。</p><h1 id="C语言入坑指南"><a href="#C语言入坑指南" class="headerlink" title="C语言入坑指南"></a>C语言入坑指南</h1><p>首先当然是基本语法：</p><ul><li>C语言中的保留字</li><li>变量、常量</li><li>库函数的使用</li><li>输入、输出</li><li>条件控制</li><li>循环语句</li></ul><p>接着学习更复杂的操作：</p><ul><li>子程序设计、递归</li><li>数组</li><li>指针</li><li>结构体</li><li>文件操作</li></ul><p>其实到了这一步，难度都不会是语言本身，而是算法、数据结构以及计算机基础。</p><h1 id="零碎知识点"><a href="#零碎知识点" class="headerlink" title="零碎知识点"></a>零碎知识点</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>整型变量（int）：整型变量用于存储整数值，可以表示正数、负数和零。</p><p>整型变量在内存中占用固定的字节数，通常是4个字节。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> num = <span class="hljs-number">10</span>; <span class="hljs-comment">// 声明一个整型变量num 来存储整数值10。</span><br></code></pre></td></tr></table></figure><p>浮点型变量（float和double）：浮点型变量用于存储实数值，可以表示小数和指数形式的数值。</p><p>浮点型变量在内存中占用的字节数通常比整型变量多，因为它们需要存储小数部分。</p><p>C语言提供了两种浮点型变量，分别是单精度浮点型（float）和双精度浮点型（double）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">double</span> num = <span class="hljs-number">3.14</span>; <span class="hljs-comment">// 声明一个双精度浮点型变量来存储小数值3.14。</span><br></code></pre></td></tr></table></figure><p>字符型变量（char）：字符型变量用于存储单个字符，例如字母、数字或标点符号。</p><p>字符型变量在内存中占用1个字节，因为一个字符通常只需要8个比特位来表示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">char</span> ch = <span class="hljs-string">&#x27;A&#x27;</span>; <span class="hljs-comment">// 声明一个字符型变量来存储字符&#x27;A&#x27;。</span><br></code></pre></td></tr></table></figure><p>长整型变量（long）：长整型变量用于存储较大的整数值，通常占用8个字节。</p><p>它们比普通整型变量更适合用于存储非常大的整数值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">long</span> num = <span class="hljs-number">1234567890</span>; <span class="hljs-comment">// 声明一个长整型变量来存储整数值1234567890。</span><br></code></pre></td></tr></table></figure><p>短整型变量（short）：短整型变量用于存储较小的整数值，通常占用2个字节。</p><p>它们比普通整型变量更适合用于存储非常小的整数值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">short</span> num = <span class="hljs-number">10</span>; <span class="hljs-comment">// 声明一个短整型变量来存储整数值10。</span><br></code></pre></td></tr></table></figure><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>常量是指在程序运行时其值不会发生变化的量，它们可以帮助我们简化代码和提高程序的可读性。常量可以是整数、浮点数、字符或字符串等类型。</p><p>1、整数常量</p><p>整数常量是指不带小数部分的数字，可以是正数、负数或零。在C语言中，整数常量默认是十进制数，也可以使用其他进制表示。下面是几个整数常量的例子：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-number">42</span>   <span class="hljs-comment">// 十进制整数常量</span><br><span class="hljs-number">-15</span>  <span class="hljs-comment">// 负整数常量</span><br><span class="hljs-number">0x7F</span> <span class="hljs-comment">// 十六进制整数常量</span><br><span class="hljs-number">0</span>o57  <span class="hljs-comment">// 八进制整数常量</span><br></code></pre></td></tr></table></figure><p>2、浮点数常量<br>浮点数常量是指带有小数部分的数字，可以是单精度浮点数（float）或双精度浮点数（double）。在C语言中，可以使用小数点或指数形式来表示浮点数常量。下面是几个浮点数常量的例子。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-number">3.14159</span>      <span class="hljs-comment">// 单精度浮点数常量</span><br><span class="hljs-number">2.99792e+8</span>   <span class="hljs-comment">// 科学计数法表示的单精度浮点数常量</span><br><span class="hljs-number">1.234567890</span>  <span class="hljs-comment">// 双精度浮点数常量</span><br><span class="hljs-number">-6.02214076e+23</span> <span class="hljs-comment">// 科学计数法表示的双精度浮点数常量</span><br></code></pre></td></tr></table></figure><p>3、字符常量<br>字符常量是指用单引号括起来的单个字符，例如字母、数字或标点符号。在C语言中，每个字符常量在内存中占用一个字节，可以使用转义字符来表示一些特殊的字符。下面是几个字符常量的例子。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-string">&#x27;A&#x27;</span> <span class="hljs-comment">// 字符常量</span><br><span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-comment">// 数字字符常量</span><br><span class="hljs-string">&#x27;\n&#x27;</span> <span class="hljs-comment">// 换行符</span><br><span class="hljs-string">&#x27;\t&#x27;</span> <span class="hljs-comment">// 制表符</span><br><span class="hljs-string">&#x27;\\&#x27;</span> <span class="hljs-comment">// 反斜杠</span><br><span class="hljs-string">&#x27;\&quot;&#x27;</span> <span class="hljs-comment">// 双引号</span><br></code></pre></td></tr></table></figure><p>4、字符串常量<br>字符串常量是指由一串字符组成的字符数组，用双引号括起来。在C语言中，字符串常量以空字符（’\0’）结尾，占用的内存空间根据字符串的长度而定。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-string">&quot;Hello, world!&quot;</span><br></code></pre></td></tr></table></figure><p>5、const关键字来定义常量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">const</span> <span class="hljs-type">int</span> NUM = <span class="hljs-number">42</span>;<br></code></pre></td></tr></table></figure><p>试图修改这个常量时，编译器会报错</p><p>6、宏定义常量</p><p>使用#define预处理指令来为一个符号（通常是一个常量）定义一个标识符，以后使用该标识符时，预处理器会自动将其替换成所定义的值。下面是一个宏定义常量的例子：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> PI 3.14159</span><br></code></pre></td></tr></table></figure><p>在这个例子中，我们定义了一个名为PI的常量，它的值为3.14159。在程序中，我们可以直接使用PI这个标识符来表示这个常量，例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">float</span> area = PI * radius * radius;<br></code></pre></td></tr></table></figure><p>在预处理之后，这个表达式会被替换成：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">float</span> area = <span class="hljs-number">3.14159</span> * radius * radius;<br></code></pre></td></tr></table></figure><p>需要注意的是，宏定义是一种纯文本替换，没有数据类型，也没有作用域限制，因此它的使用可能会带来一些问题。比如，如果我们定义了一个整数常量：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> SIZE 10</span><br></code></pre></td></tr></table></figure><p>在程序中使用这个常量时，如果不小心将它和一个整数变量相加，就可能会出现不正确的结果：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> a[SIZE + <span class="hljs-number">2</span>]; <span class="hljs-comment">// 正确</span><br><span class="hljs-type">int</span> b[SIZE] + <span class="hljs-number">2</span>; <span class="hljs-comment">// 错误</span><br></code></pre></td></tr></table></figure><p>为了避免这种问题，建议使用const关键字来定义常量，const定义的常量有数据类型和作用域限制，可以更好地保护程序的正确性和可读性。</p><h2 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h2><p>包含头文件。举例，如果要使用数学库中的函数，则需要包含math.h头文件。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br></code></pre></td></tr></table></figure><p>调用库函数。包含math.h头文件后，可以在程序中调用库中的函数。</p><p>可以调用数学库中的sin函数来计算正弦值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">double</span> result = <span class="hljs-built_in">sin</span>(<span class="hljs-number">0.5</span>);<br></code></pre></td></tr></table></figure><p>至于该使用哪些库、哪些函数，可以去查找文档或者直接在百度搜。</p><h2 id="输入输出（IO）"><a href="#输入输出（IO）" class="headerlink" title="输入输出（IO）"></a>输入输出（IO）</h2><p>printf() 函数用于向屏幕输出文本：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hello World!&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>scanf() 函数用于从用户输入中读取值：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> num;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Enter a number: &quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;num);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The number is: %d&quot;</span>, num);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="条件控制"><a href="#条件控制" class="headerlink" title="条件控制"></a>条件控制</h2><p>if-else 语句用于根据条件执行不同的代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> num;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Enter a number: &quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;num);<br>    <span class="hljs-keyword">if</span> (num &gt; <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The number is positive&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;The number is negative&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>switch-case</code>语句也用于根据不同的条件执行不同的代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">char</span> grade;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Enter your grade: &quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%c&quot;</span>, &amp;grade);<br>    <span class="hljs-keyword">switch</span>(grade)<br>    &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;A&#x27;</span>:<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Excellent&quot;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;B&#x27;</span>:<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Good&quot;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;C&#x27;</span>:<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Fair&quot;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;D&#x27;</span>:<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Poor&quot;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Invalid grade&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>for循环用于执行指定次数的代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">10</span>; i++)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, i);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>while</code>和<code>do-while</code>循环用于在条件为真时重复执行代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> num;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Enter a number: &quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;num);<br>    <span class="hljs-keyword">while</span> (num &gt; <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, num);<br>        num--;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> num;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Enter a number: &quot;</span>);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;num);<br>    <span class="hljs-keyword">do</span> &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, num);<br>        num--;<br>    &#125; <span class="hljs-keyword">while</span> (num &gt; <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="子程序设计"><a href="#子程序设计" class="headerlink" title="子程序设计"></a>子程序设计</h2><p>函数是C语言中的一种子程序。函数可以将程序分解为更小、更易于管理的块，从而使代码更易于理解和调试。</p><p>下面是一个例子，展示如何定义和调用一个函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">addNumbers</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> num1 = <span class="hljs-number">5</span>, num2 = <span class="hljs-number">7</span>, sum;<br>    sum = addNumbers(num1, num2);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Sum of %d and %d is %d&quot;</span>, num1, num2, sum);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">addNumbers</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span><br>&#123;<br>    <span class="hljs-type">int</span> result;<br>    result = a + b;<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>递归是一种函数调用自身的技术。它通常用于解决需要重复执行相同或类似操作的问题。</p><p>下面是一个例子，展示如何使用递归来计算阶乘：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">factorial</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> num = <span class="hljs-number">5</span>, fact;<br>    fact = factorial(num);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Factorial of %d is %d&quot;</span>, num, fact);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">factorial</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (n == <span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> n * factorial(n<span class="hljs-number">-1</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在这个例子中，<code>factorial()</code>函数使用递归调用自身来计算n的阶乘。在每个递归调用中，函数将n乘以<code>factorial(n-1)</code>，直到n等于1。最后，递归调用返回到原始函数调用，并将计算的阶乘作为结果返回给主函数。</p><h2 id="数组和指针"><a href="#数组和指针" class="headerlink" title="数组和指针"></a>数组和指针</h2><p>数组</p><ul><li>数组是一种数据结构，可以存储多个相同类型的元素。</li><li>在C语言中，数组的元素可以是任何基本数据类型，如整数、浮点数、字符等。</li><li>在声明数组时，需要指定数组的大小。例如，下面是一个包含10个整数的数组的声明：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> myArray[<span class="hljs-number">10</span>];<br></code></pre></td></tr></table></figure><ul><li>数组元素的访问是通过下标来实现的，下标从0开始，表示数组中的第一个元素。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">myArray[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>; <span class="hljs-comment">// 将第一个元素设置为1</span><br></code></pre></td></tr></table></figure></li><li>数组可以用于存储一系列数据，例如数字、字符串等。</li></ul><p>指针</p><ul><li>指针是一个变量，它存储了一个内存地址。</li><li>指针可以指向任何数据类型，例如整数、字符、数组等。</li><li>指针的声明需要指定指针所指向的数据类型。例如，下面是一个指向整数的指针的声明：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> *myPointer;<br></code></pre></td></tr></table></figure></li><li>指针可以用于访问和修改存储在内存中的变量或数组元素的值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> myArray[<span class="hljs-number">10</span>] = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>&#125;;<br><span class="hljs-type">int</span> *myPointer = &amp;myArray[<span class="hljs-number">0</span>]; <span class="hljs-comment">// 指向数组的第一个元素</span><br>*myPointer = <span class="hljs-number">2</span>; <span class="hljs-comment">// 修改第一个元素的值</span><br></code></pre></td></tr></table></figure></li><li>指针可以用于动态分配内存，例如使用malloc函数来分配内存<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> *myPointer = (<span class="hljs-type">int</span>*)<span class="hljs-built_in">malloc</span>(<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">int</span>)*<span class="hljs-number">10</span>); <span class="hljs-comment">// 分配包含10个整数的内存空间</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><p>在C语言中，结构体是一种自定义的数据类型，它允许程序员将不同类型的数据组合在一起，并赋予这个组合一个自定义的名字。结构体由多个变量组成，每个变量被称为结构体的成员。结构体成员可以是各种数据类型，包括整型、浮点型、字符型等等。</p><p>下面是一个简单的例子，其中定义了一个名为Person的结构体，它包含了三个成员：<code>name</code>表示人名，<code>age</code>表示年龄，<code>gender</code>表示性别。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Person</span> &#123;</span><br>    <span class="hljs-type">char</span> name[<span class="hljs-number">20</span>];<br>    <span class="hljs-type">int</span> age;<br>    <span class="hljs-type">char</span> gender;<br>&#125;;<br></code></pre></td></tr></table></figure><p>定义了这个结构体之后，我们可以使用它来创建一个结构体变量，并访问它的成员。例如，下面的代码创建了一个名为<code>person1</code>的<code>Person</code>类型的变量，并初始化了它的成员。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Person</span> <span class="hljs-title">person1</span> =</span> &#123;<span class="hljs-string">&quot;Alice&quot;</span>, <span class="hljs-number">25</span>, <span class="hljs-string">&#x27;F&#x27;</span>&#125;;<br></code></pre></td></tr></table></figure><p>在这个例子中，我们使用了结构体初始化语法来给<code>person1</code>赋值。也可以通过点号运算符来访问结构体成员，例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Name: %s\n&quot;</span>, person1.name);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Age: %d\n&quot;</span>, person1.age);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Gender: %c\n&quot;</span>, person1.gender);<br></code></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">Name:</span> Alice<br><span class="hljs-symbol">Age:</span> <span class="hljs-number">25</span><br><span class="hljs-symbol">Gender:</span> F<br></code></pre></td></tr></table></figure><h2 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h2><p>当我们需要定义一组相似结构体变量时，可以使用结构体数组。下面是一个例子，其中定义了一个名为<code>Student</code>的结构体，它包含了两个成员：<code>name</code>表示学生姓名，<code>score</code>表示学生的分数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Student</span> &#123;</span><br>    <span class="hljs-type">char</span> name[<span class="hljs-number">20</span>];<br>    <span class="hljs-type">int</span> score;<br>&#125;;<br></code></pre></td></tr></table></figure><p>接下来，我们可以定义一个<code>Student</code>类型的结构体数组，其中包含三个学生的信息。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Student</span> <span class="hljs-title">students</span>[3] =</span> &#123;<br>    &#123;<span class="hljs-string">&quot;Alice&quot;</span>, <span class="hljs-number">90</span>&#125;,<br>    &#123;<span class="hljs-string">&quot;Bob&quot;</span>, <span class="hljs-number">85</span>&#125;,<br>    &#123;<span class="hljs-string">&quot;Charlie&quot;</span>, <span class="hljs-number">95</span>&#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>在这个例子中，我们定义了一个名为<code>students</code>的结构体数组，它包含了三个<code>Student</code>类型的结构体变量，并用结构体初始化语法对它们进行了初始化。</p><p>我们可以通过循环遍历结构体数组，并使用点号运算符来访问每个学生的姓名和分数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++) &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Name: %s, Score: %d\n&quot;</span>, students[i].name, students[i].score);<br>&#125;<br></code></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sqf"><span class="hljs-built_in">Name</span>: Alice, <span class="hljs-built_in">Score</span>: <span class="hljs-number">90</span><br><span class="hljs-built_in">Name</span>: Bob, <span class="hljs-built_in">Score</span>: <span class="hljs-number">85</span><br><span class="hljs-built_in">Name</span>: Charlie, <span class="hljs-built_in">Score</span>: <span class="hljs-number">95</span><br></code></pre></td></tr></table></figure><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p>首先创建一个名为<code>data.txt</code>的文本文件，并将一些数据写入该文件。</p><p>然后，我们将使用C语言中的文件读写函数来读取该文件的内容并打印出来。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-comment">// 创建一个文件指针，并打开 data.txt 文件以进行写操作</span><br>    FILE *fp = fopen(<span class="hljs-string">&quot;data.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>);<br><br>    <span class="hljs-comment">// 写入数据到文件中</span><br>    <span class="hljs-built_in">fprintf</span>(fp, <span class="hljs-string">&quot;Hello, World!\n&quot;</span>);<br>    <span class="hljs-built_in">fprintf</span>(fp, <span class="hljs-string">&quot;This is a test.\n&quot;</span>);<br><br>    <span class="hljs-comment">// 关闭文件指针</span><br>    fclose(fp);<br><br>    <span class="hljs-comment">// 重新打开 data.txt 文件以进行读操作</span><br>    fp = fopen(<span class="hljs-string">&quot;data.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>);<br><br>    <span class="hljs-comment">// 从文件中读取数据，并输出到屏幕上</span><br>    <span class="hljs-type">char</span> buffer[<span class="hljs-number">100</span>];<br>    <span class="hljs-keyword">while</span> (fgets(buffer, <span class="hljs-number">100</span>, fp) != <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, buffer);<br>    &#125;<br><br>    <span class="hljs-comment">// 关闭文件指针</span><br>    fclose(fp);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>首先创建了一个名为<code>data.txt</code>的文本文件，并将两行数据写入该文件中。然后，我们使用<code>fopen()</code>函数打开该文件，将文件指针存储在fp变量中，并使用<code>fprintf()</code>函数将数据写入该文件。</p><p>在写入完数据之后，我们使用<code>fclose()</code>函数关闭文件指针。</p><p>接下来，我们重新打开<code>data.txt</code>文件以进行读操作。使用<code>fopen()</code>函数打开文件时，我们将第二个参数设置为r，表示以只读模式打开文件。然后，我们使用<code>fgets()</code>函数从文件中读取数据，并将读取的数据输出到屏幕上。</p><p>最后，我们再次使用<code>fclose()</code>函数关闭文件指针。</p><p>需要注意的是，在进行文件读写操作时，我们需要确保正确地打开和关闭文件指针，并对可能发生的错误进行适当的处理。</p><h2 id="关于C语言的异常处理"><a href="#关于C语言的异常处理" class="headerlink" title="关于C语言的异常处理"></a>关于C语言的异常处理</h2><p>注意，C语言本身不支持像其他一些语言（如Java和Python）那样的异常处理机制，但我们可以使用C语言中的一些技巧来模拟异常处理。</p><p>一个常见的做法是在代码中使用返回值来指示错误状态，并在发生错误时采取适当的行动。下面是一个简单的例子，演示了如何使用返回值来模拟异常处理。</p><p>在这个例子中，我们将定义一个名为<code>divide()</code>的函数，该函数将两个整数相除，并返回结果。如果第二个参数为零，则表示除法操作不合法，此时我们将返回一个特殊的错误码<code>-1</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">divide</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b, <span class="hljs-type">int</span> *result)</span> &#123;<br>    <span class="hljs-keyword">if</span> (b == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        *result = a / b;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">int</span> a = <span class="hljs-number">10</span>, b = <span class="hljs-number">0</span>, result;<br>    <span class="hljs-type">int</span> status = divide(a, b, &amp;result);<br>    <span class="hljs-keyword">if</span> (status == <span class="hljs-number">-1</span>) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Error: Division by zero.\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d / %d = %d\n&quot;</span>, a, b, result);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们定义了一个名为<code>divide()</code>的函数，它将两个整数a和b相除，并将结果存储在指向<code>result</code>变量的指针中。如果b为零，则函数返回-1，表示除法操作不合法。</p><p>在<code>main()</code>函数中，我们将<code>a</code>设置为10，将<code>b</code>设置为0，并调用<code>divide()</code>函数进行除法操作。如果除法操作不合法，则函数将返回-1，此时我们将打印一条错误消息。否则，我们将打印计算结果。</p><p>通过在代码中使用返回值来模拟异常处理，我们可以在发生错误时采取适当的行动，并对用户提供友好的错误消息。当然，这种做法要求我们对可能出现的错误情况进行仔细的考虑，并在代码中进行适当的处理。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
      <tag>C语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库与大数据技术</title>
    <link href="/2019/01/25/%E5%B8%B8%E7%94%A8%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%BB%84%E4%BB%B6/"/>
    <url>/2019/01/25/%E5%B8%B8%E7%94%A8%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%BB%84%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大数据</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库与大数据技术</title>
    <link href="/2019/01/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3/"/>
    <url>/2019/01/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<p>未完待续</p><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>「大数据」这个词已经火了好几年了，这个熟悉而又陌生的词让我忍不住去调研一番。何为大数据呢？互联网时代，数据的重要性不言而喻，每时每刻都会产生不计其数的数据，数据之大，正来源于此。</p><p>对于大数据，我们可以关心如下几个问题：</p><ul><li>数据从何而来？（数据产生）</li><li>这么多数据，怎么存？（数据存储）</li><li>数据太多，有效信息密度低。（数据分析）</li></ul><h1 id="数据的生命周期"><a href="#数据的生命周期" class="headerlink" title="数据的生命周期"></a>数据的生命周期</h1><h1 id="应对大数据的技术"><a href="#应对大数据的技术" class="headerlink" title="应对大数据的技术"></a>应对大数据的技术</h1><h2 id="数据产生"><a href="#数据产生" class="headerlink" title="数据产生"></a>数据产生</h2><p>ETL</p><h2 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h2><p>传统数据仓库</p><h2 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h2><p>这里的分析不一定是复杂模型运算的</p><p><img src="https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBaE8wcUlFYWhLejhrVXRYRFV0RXRfeXRKd1BzP2U9TGlORlFX.png" alt="Hadoop"></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大数据</tag>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据仓库笔记</title>
    <link href="/2019/01/15/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%AC%94%E8%AE%B0/"/>
    <url>/2019/01/15/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="数据仓库的定义"><a href="#数据仓库的定义" class="headerlink" title="数据仓库的定义"></a>数据仓库的定义</h1><p>数据仓库是一个面向主题的、集成的、相对稳定的、反映历史变化的数据集合，用于支持管理决策。</p><p>数据仓库是一个将源系统数据抽取、清洗、规格化、提交到维度数据存储的系统，为决策的制定提供查询和分析功能的支撑与实现。</p><h1 id="数据仓库的发展"><a href="#数据仓库的发展" class="headerlink" title="数据仓库的发展"></a>数据仓库的发展</h1><h2 id="发展阶段"><a href="#发展阶段" class="headerlink" title="发展阶段"></a>发展阶段</h2><p>1、开源为主、离线处理、数据量小。<br>2、开源+自研、离线+实时处理、元数据管理完善。<br>3、自研为主、完善的数仓理论基础和外围工具、完善的数据共享机制&#x2F;权限管理。</p><h2 id="发展趋势"><a href="#发展趋势" class="headerlink" title="发展趋势"></a>发展趋势</h2><ul><li>平台智能化。</li><li>离线实时一体化。</li><li>数据膨胀。</li></ul><p><img src="https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBaE8wcUlFYWhLejhrVS1BMlVqMFFrc0lJUU13P2U9THlTd2dl.png" alt="数仓模型"></p><h1 id="数据仓库的层级"><a href="#数据仓库的层级" class="headerlink" title="数据仓库的层级"></a>数据仓库的层级</h1><p>数据接入层：数据同步，基本保持与源数据格式一致<br>明细层：标准化、维度补全、异常处理<br>汇总层：单一业务场景<br>集市层：多业务场景<br>维表层：维度统一</p><h1 id="数据中台"><a href="#数据中台" class="headerlink" title="数据中台"></a>数据中台</h1><p>数据中台的定位是偏底层的（采集和计算）。</p><p>联机事务处理（OLAP），事务的ACID（原子性、一致性、孤立性和持久性）<br>联机分析处理（OLTP），分析的维度、度量、下钻&#x2F;上卷（粒度）、切片&#x2F;切块和旋转（行列对调）。</p><p><img src="https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBaE8wcUlFYWhLejhrVTVPdldqZU5kR016V0w1P2U9N2NvQ0hW.png" alt="数仓定位"></p><p>两者的关系：<br>OLAP是数据仓库的一个应用领域，OLTP是数据仓库的一个数据源。<br>OLTP关注原子性、高并发和时延（通常是毫秒级别）等性能需求，针对关系型数据库，主要是基于3NF设计。<br>OLAP不关心高并发和时延，更关心吞吐量等。</p><h1 id="数仓建模"><a href="#数仓建模" class="headerlink" title="数仓建模"></a>数仓建模</h1><p>模型设计阶段：概念模型、逻辑模型和物理模型。<br>概念模型：划分业务主题（粒度比较粗），确定主题之间的关系。也可以基于业务线进行划分。<br>逻辑模型：在概念模型的基础上，定义数据仓库各种实体、属性、关系。建模理论有范式建模和维度建模。<br>范式建模：1NF（原子性，数据不可分割），2NF（唯一性，每行数据均唯一），3NF（独立性，消除传递依赖）。<br>维度建模：星型（事实表+一组维表），雪花型（星型表基础上，基于范式理论，将某些维表拓展成事实表）。</p><h1 id="数仓相关技术栈-x2F-组件"><a href="#数仓相关技术栈-x2F-组件" class="headerlink" title="数仓相关技术栈&#x2F;组件"></a>数仓相关技术栈&#x2F;组件</h1><p>框架：hadoop相关（HDFS、MapReduce）、Flink、Spark，YARN、MESOS（资源调度），docker（容器），Apache Kylin</p><p>查询与数据流：Hive、Spark SQL、Flink SQL。</p><p>数据访问和数据库：cassandra、mongoDB、redis</p><h1 id="范式建模"><a href="#范式建模" class="headerlink" title="范式建模"></a>范式建模</h1><p>范式建模的优点：</p><ul><li>节约存储。</li><li>结构清晰。</li><li>易于理解。</li><li>适合关系型数据库。</li></ul><p>范式建模缺点：</p><ul><li>构建比较复杂。</li><li>查询复杂。</li><li>不适合构建在大数据分布式环境下。</li></ul><p>尽管范式建模有这些缺点，但是仍然需要掌握，因为在数据仓库的上游有相当一部分数据源是业务数据库，这些数据库使用的是关系型数据库（理论基于范式建模），在数据仓库的下游也可能会用到（比如报表系统设计）。另外对数据源的规范定义也需要我们了解范式理论。</p><h1 id="维度建模"><a href="#维度建模" class="headerlink" title="维度建模"></a>维度建模</h1><p>维度建模的四个步骤：选择业务过程、声明粒度、确认维度和确认事实。</p><p><img src="https://link.jscdn.cn/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBaE8wcUlFYWhLejhrVTBESzdiYWZqZmJVWlFGP2U9TzdacXVw.png" alt="维度建模"></p><p>维度建模的优点：</p><ul><li>方便使用。</li><li>适合大数据下的数据处理。</li><li>适合进行OLAP操作。</li></ul><p>缺点：</p><ul><li>维度补全造成的数据存储的浪费。</li><li>维度变化造成的数据更新量大。</li><li>典型的反三范式（与范式理论差异很大，增加了冗余数据）。</li><li>对于传统的关系型数据库，存储非常重要，范式建模有利于存储。大数据下存储相对没那么重要。</li></ul><p>维度建模的过程实际上是将业务抽象成事实和维度两个概念。事实表中的度量分为可加、半可加和不可加三种。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>企业级数据仓库实战</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据仓库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用SQL语句</title>
    <link href="/2019/01/13/%E5%B8%B8%E7%94%A8SQL/"/>
    <url>/2019/01/13/%E5%B8%B8%E7%94%A8SQL/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL简介"><a href="#SQL简介" class="headerlink" title="SQL简介"></a>SQL简介</h1><p>SQL（Structured Query Language）是一种用于管理关系型数据库系统的语言，它支持对数据库进行数据查询、插入、更新、删除等操作。</p><h1 id="常用的SQL语句"><a href="#常用的SQL语句" class="headerlink" title="常用的SQL语句"></a>常用的SQL语句</h1><p>SELECT：用于从一个或多个表中查询数据，并返回结果集。常用于数据查询。</p><p>INSERT INTO：用于向数据库中的表中插入新的数据。</p><p>UPDATE：用于修改数据库中表格的数据。</p><p>DELETE：用于删除数据库中表格的数据。</p><p>CREATE TABLE：用于创建一个新的数据库表格。</p><p>ALTER TABLE：用于修改一个已有的数据库表格。</p><p>DROP TABLE：用于删除一个数据库表格。</p><p>WHERE：用于过滤查询结果，指定查询的条件。</p><p>ORDER BY：用于对查询结果进行排序。</p><p>GROUP BY：用于对查询结果进行分组。</p><p>JOIN：用于将多个表格中的数据连接起来进行查询。</p><h1 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h1><h2 id="创建一个新表"><a href="#创建一个新表" class="headerlink" title="创建一个新表"></a>创建一个新表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> student (<br>  id <span class="hljs-type">INT</span> <span class="hljs-keyword">PRIMARY</span> KEY,<br>  name <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">50</span>),<br>  age <span class="hljs-type">INT</span>,<br>  gender <span class="hljs-type">CHAR</span>(<span class="hljs-number">1</span>)<br>);<br></code></pre></td></tr></table></figure><p>创建了一个名为student的表格，包含了四个列：id、name、age和gender。</p><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> student (id, name, age, gender)<br><span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;Tom&#x27;</span>, <span class="hljs-number">20</span>, <span class="hljs-string">&#x27;M&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> student (id, name, age, gender)<br><span class="hljs-keyword">VALUES</span> (<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;Mary&#x27;</span>, <span class="hljs-number">19</span>, <span class="hljs-string">&#x27;F&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> student (id, name, age, gender)<br><span class="hljs-keyword">VALUES</span> (<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;John&#x27;</span>, <span class="hljs-number">22</span>, <span class="hljs-string">&#x27;M&#x27;</span>);<br></code></pre></td></tr></table></figure><p>插入了三条记录到student表格中。</p><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> student <span class="hljs-keyword">WHERE</span> age <span class="hljs-operator">&gt;</span> <span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure><p>查询了student表格中所有年龄大于20岁的记录，并返回查询结果集。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-code">+----+</span>------<span class="hljs-code">+-----+</span>--------+<br><span class="hljs-section">| id | name | age | gender |</span><br><span class="hljs-section">+----+------+-----+--------+</span><br><span class="hljs-section">|  3 | John |  22 | M      |</span><br><span class="hljs-section">+----+------+-----+--------+</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL</tag>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库概念关键词</title>
    <link href="/2019/01/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%94%E8%AE%B0/"/>
    <url>/2019/01/12/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>各章小结的概念、关键词</p><h1 id="四个部分"><a href="#四个部分" class="headerlink" title="四个部分"></a>四个部分</h1><ul><li>关系型数据库</li><li>数据库设计</li><li>底层物理存储实现</li><li>事务管理和恢复</li></ul><h1 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h1><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>基础概念 在后续章节都有</p><ul><li>关系型数据库</li><li>数据库设计</li><li>底层物理存储实现</li><li>事务管理和恢复</li></ul><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="关系型数据模型"><a href="#关系型数据模型" class="headerlink" title="关系型数据模型"></a>关系型数据模型</h3><ul><li>主码 码 外码</li><li>主码约束（参照性约束如何添加）</li><li>参照完整性约束：其实就是外键约束</li><li>外码的参照关系</li></ul><h3 id="数据库查询语言"><a href="#数据库查询语言" class="headerlink" title="数据库查询语言"></a>数据库查询语言</h3><h4 id="关系代数（面向过程）"><a href="#关系代数（面向过程）" class="headerlink" title="关系代数（面向过程）"></a>关系代数（面向过程）</h4><p>关系代数常用操作</p><ul><li>投影</li><li>连接 </li><li>交并差…</li><li>复杂查询</li><li>关联查询</li></ul><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><p>SQL是面向用户的</p><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h3 id="数据库定义语言（DDL）"><a href="#数据库定义语言（DDL）" class="headerlink" title="数据库定义语言（DDL）"></a>数据库定义语言（DDL）</h3><ul><li>数据库建表</li><li>对表结构的修改</li></ul><h3 id="数据库操作语言（DML）"><a href="#数据库操作语言（DML）" class="headerlink" title="数据库操作语言（DML）"></a>数据库操作语言（DML）</h3><ul><li>增删改查 常见操作</li><li>复杂查询(关联 嵌套)</li></ul><h3 id="完整性约束"><a href="#完整性约束" class="headerlink" title="完整性约束"></a>完整性约束</h3><ul><li>主码约束</li><li>用户自定义约束</li></ul><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><ul><li>完整性约束的类型</li><li>视图和权限</li></ul><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><p>程序里访问SQL语句:</p><ul><li>Python</li><li>Java JDBC</li><li>C++</li></ul><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><p>关系代数与SQL对应关系(查询优化会用到)</p><h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h1><h2 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h2><ul><li>ER图 </li><li>关系模式 （转换）<br>数据库设计包含哪几个阶段？每个过程用来干什么的？ER图在哪个阶段？（概念设计阶段）<br>逻辑阶段（ER图转化为关系模式）<br>给定数据需求， 画出ER图<br>给定ER图，写出关系模式<br>弱实体集如何表示？<br>联系集如何表示？有哪些类型？映射基数如何判定？<br>根据数据需求 判断映射基数 用ER图表示出来<br>外键约束 合并<br>  外键一般放在many那一端<br>多值属性 复合属性如何表示？</li></ul><h2 id="第八章-关系规范化"><a href="#第八章-关系规范化" class="headerlink" title="第八章 关系规范化"></a>第八章 关系规范化</h2><p>各个关系范式：</p><ul><li>1范式 </li><li>2范式 </li><li>3范式 </li><li>BC范式</li></ul><p>如何判定？</p><ul><li>候选码 </li><li>属性闭包</li></ul><p>原则：无损连接分解 函数依赖保持</p><p>合并律 分解律 伪传递律</p><h1 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h1><h2 id="第十章"><a href="#第十章" class="headerlink" title="第十章"></a>第十章</h2><p>存储相关的文件结构：</p><ul><li>堆</li><li>序列</li><li>哈希</li><li>多簇</li></ul><p>索引文件：可用于加速查询。</p><p>索引的类型有哪些？</p><ul><li>顺序索引</li><li>散列索引</li><li>还可以继续细分</li></ul><p>什么场景选择什么类型的索引？</p><p>主索引 聚集索引的原理是什么？</p><p>索引加在哪个属性上可以加速查询（例如select）呢？加在哪会减速？</p><p>什么索引方式是有帮助的？</p><h2 id="十二、十三章："><a href="#十二、十三章：" class="headerlink" title="十二、十三章："></a>十二、十三章：</h2><p>查询处理的过程（P、O、E）</p><ul><li>P：语法分析与翻译</li><li>O：优化</li><li>E：执行</li></ul><p>查询—&gt;语法分析器与翻译器—&gt;关系代数表达式—&gt;优化器—&gt;执行计划—&gt;执行引擎—&gt;查询结果</p><p>代价评估：CPU时间、磁盘存取、并行&#x2F;分布式数据库系统中的通信代价。</p><p>大型数据库中磁盘存取数据的代价是主要的代价。</p><p>查询优化（核心），怎样做查询优化？</p><ul><li>找到等价的表达式，写出优化后的查询树</li><li>基于代价式的优化、基于启发式的优化？</li><li>启发式优化策略</li></ul><p>优化策略：</p><ul><li>选择 投影尽可能先执行（在连接之前执行）</li><li>分配律的使用</li></ul><h1 id="事务管理和事务的调度、并发控制、恢复"><a href="#事务管理和事务的调度、并发控制、恢复" class="headerlink" title="事务管理和事务的调度、并发控制、恢复"></a>事务管理和事务的调度、并发控制、恢复</h1><p>事务的几个特性、每个特性是如何书写的<br>ACID：</p><ul><li>Atomicity</li><li>Consistency</li><li>Isolation</li><li>Durability</li></ul><p>四大特性解析：</p><ul><li>原子性：全或无</li><li>一致性：隔离执行事务</li><li>隔离性：并发（每个事务感觉不到系统中有其他事务在并发地执行）</li><li>持久性：事务完成后 对数据库的改变是永久的</li></ul><p>如何判定事务的调度是有效的？</p><ul><li>冲突可串行化。</li><li>如果调度S可以经过一系列非冲突指令交换转换成S’，我们称S与S’是冲突等价的。</li><li>若一个调度S与一个串行调度冲突等价，则称调度S是冲突可串行化。</li><li>为确定一个调度是否冲突可串行化，可以使用优先图的方法。并且调用环检测算法。</li></ul><p>如何判断事务的调度是可恢复的？说明原因。</p><ul><li>一个可恢复的调度（recoverable schedule）应满足：<br>  对于每对事物Ti和Tj，如果Tj读取了之前由Ti所写的数据项，则Ti先于Tj提交。</li><li>原因：若出现部分调度的情况，后一个事务中读取了前一个事务写的内容，但是前一个事务之后并没有提交并且发生了故障，那么后一个事务无法在故障后正确恢复。</li></ul><h2 id="第十五章：锁"><a href="#第十五章：锁" class="headerlink" title="第十五章：锁"></a>第十五章：锁</h2><p>并发控制</p><p>给一个并发调度，判断是否符合。</p><h2 id="第十六章：事务恢复"><a href="#第十六章：事务恢复" class="headerlink" title="第十六章：事务恢复"></a>第十六章：事务恢复</h2><p>如何写日志</p><p>如何根据日志恢复事务        </p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学了一点数据库</title>
    <link href="/2019/01/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/"/>
    <url>/2019/01/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<!-- # 写在前面其实一直以来总觉得数据库很神秘... --><h1 id="概念区分"><a href="#概念区分" class="headerlink" title="概念区分"></a>概念区分</h1><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>数据库是一种用来存储和组织数据的软件系统。它允许用户通过定义、创建、查询和更新数据来管理信息。数据库可以存储各种类型的数据，包括数字、文本、图像、音频等等。</p><p>数据库通常包含多个表，每个表代表一个实体或对象。每个表由多个列组成，每列定义了表中存储的数据的类型和格式。表中的每一行都代表一个实例或记录，包含该实例的各个属性值。</p><p>数据库使用SQL（Structured Query Language）语言来管理和操作数据，这是一种标准化的语言，用于创建、查询、更新和删除数据。</p><p>数据库有许多不同的类型和应用场景。例如，关系型数据库使用表和关系来组织数据，常用于企业级应用程序和网站；NoSQL数据库则更加灵活，适用于存储非结构化数据和大规模数据集；内存数据库可以提供更快的数据读写速度，适用于实时数据处理等场景。</p><h2 id="数据仓库"><a href="#数据仓库" class="headerlink" title="数据仓库"></a>数据仓库</h2><p>数据仓库是一种专门用于存储大量历史数据并支持数据分析的系统。与传统的操作型数据库不同，数据仓库的目标是支持复杂的分析和决策过程，而不是日常业务操作。</p><p>数据仓库的设计通常涉及到多个源系统的数据集成、数据清洗和转换，以及聚合、汇总等预处理过程。这些数据被组织成多维模型，以便于分析和查询。常见的数据仓库技术包括ETL（提取、转换和加载）、OLAP（联机分析处理）和数据挖掘等。</p><p>与操作型数据库相比，数据仓库通常具有以下几个区别：</p><p>目标不同：操作型数据库旨在支持日常业务操作，而数据仓库旨在支持分析和决策。</p><p>数据特点不同：操作型数据库通常包含实时、更新频繁的数据，而数据仓库则包含历史、相对静态的数据。</p><p>数据结构不同：操作型数据库通常采用规范化的数据结构，以支持高效的事务处理。而数据仓库通常采用多维数据结构，以支持灵活的分析查询。</p><p>数据量不同：操作型数据库通常处理相对较小的数据集，而数据仓库则处理海量的历史数据。</p><p>尽管数据仓库和操作型数据库有所不同，但它们也有许多相似之处。例如，它们都使用SQL语言来查询和管理数据，都需要考虑数据安全和备份等问题。此外，数据仓库和操作型数据库也可以相互补充，共同构成一个完整的数据管理和分析系统。</p><h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><p>大数据是指数据集合的规模非常大，处理和分析这些数据需要使用特殊的技术和工具。这些数据集合通常包含结构化、半结构化和非结构化数据，来自于各种数据源和渠道，包括传感器、社交媒体、日志文件等等。</p><p>与传统的数据仓库和操作型数据库相比，大数据具有以下几个不同之处：</p><p>数据规模：大数据集合通常非常庞大，甚至超出了传统数据仓库和数据库的处理能力。处理这些数据通常需要使用分布式计算和存储技术。</p><p>数据类型：大数据集合通常包含各种类型的数据，包括结构化、半结构化和非结构化数据，需要使用不同的技术和工具来处理。</p><p>处理速度：处理大数据集合需要快速的数据读写和分析能力。传统的数据库和数据仓库通常不能满足这种需求，需要使用专门的技术和工具，如Hadoop、Spark等。</p><p>数据价值：大数据集合通常包含海量的数据，这些数据蕴含着重要的信息和洞见，能够为企业和组织提供更深入的分析和决策支持。</p><p>综上所述，大数据、数据仓库和操作型数据库都是数据管理和分析领域的重要概念，它们在数据处理、存储和分析等方面有着不同的特点和应用场景。大数据可以被视为数据仓库和操作型数据库的补充和扩展，可以使用各种技术和工具来处理不同类型和规模的数据集合。</p><h2 id="SQL与NoSQL"><a href="#SQL与NoSQL" class="headerlink" title="SQL与NoSQL"></a>SQL与NoSQL</h2><p>SQL和NoSQL是两种不同类型的数据库管理系统（DBMS）。</p><p>SQL（Structured Query Language）数据库管理系统是传统的关系型数据库管理系统，使用SQL语言来管理和查询数据。SQL数据库通常采用表格的形式来组织数据，并使用SQL语言来进行数据操作和查询。SQL数据库通常具有较高的数据一致性和可靠性，并且支持复杂的查询操作，如多表关联查询等。</p><p>NoSQL（Not Only SQL）数据库管理系统则是一类非关系型数据库管理系统。NoSQL数据库通常不使用表格的形式来组织数据，而是采用不同的数据模型，如文档型、键值型、列族型、图型等。NoSQL数据库通常具有更高的伸缩性和性能，能够处理海量的数据，但相对来说，数据一致性和可靠性可能不如SQL数据库。</p><p>在数据仓库和大数据方面，SQL和NoSQL都有广泛的应用。传统的数据仓库通常采用SQL数据库，使用ETL工具将不同数据源的数据导入到数据仓库中，并使用SQL语言进行查询和分析。而在大数据领域，NoSQL数据库则被广泛使用，例如Hadoop生态系统中的HBase、Cassandra、MongoDB等。这些NoSQL数据库具有分布式、高可用性、高伸缩性等特点，能够处理海量的非结构化和半结构化数据。</p><p>总的来说，SQL和NoSQL都是数据库管理系统的不同类型，它们在不同场景和应用中都有各自的优缺点和适用性。</p><h1 id="关系数据库"><a href="#关系数据库" class="headerlink" title="关系数据库"></a>关系数据库</h1><p>关系型数据库是一种使用表格（或称为关系）来组织和管理数据的数据库管理系统。在关系型数据库中，数据被组织成一个或多个表格，每个表格包含一组记录（或称为行），每个记录由多个列组成。表格中的列定义了记录可以包含的数据类型，例如文本、数字、日期等。</p><p>关系型数据库通常使用SQL（Structured Query Language）语言来进行数据操作和查询。SQL语言可以用于创建、修改、查询和删除数据，还可以用于定义数据库结构、索引和约束等。SQL语言具有严格的语法和语义，可以确保数据一致性和可靠性。</p><p>关系型数据库具有以下几个特点：</p><p>数据一致性：关系型数据库使用事务来保证数据的一致性和可靠性，即在一个事务中的所有操作要么全部成功，要么全部失败。</p><p>数据结构化：关系型数据库使用表格来组织数据，每个表格都有固定的列和行结构，使得数据易于管理和查询。</p><p>数据模型简单：关系型数据库的数据模型相对来说比较简单，易于理解和使用。</p><p>查询语言标准化：关系型数据库使用SQL语言来进行数据操作和查询，SQL语言是一种标准化的查询语言，可以在不同的数据库系统中使用。</p><p>关系型数据库被广泛应用于企业和组织的数据管理和应用程序开发中。常见的关系型数据库系统包括Oracle、MySQL、SQL Server、PostgreSQL等。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>专业课笔记</title>
    <link href="/2018/11/29/%E4%B8%93%E4%B8%9A%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    <url>/2018/11/29/%E4%B8%93%E4%B8%9A%E8%AF%BE%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PhotoShop手艺活</title>
    <link href="/2018/08/15/PS/"/>
    <url>/2018/08/15/PS/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>自从入坑摄影后，PS这门手艺活也是不得不学了。但是真的不想去买课（留下了贫穷的泪水～）最后还是跟着B站啃下来了hhhh</p><p>记录一些常用的快捷键吧。</p><h1 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h1><p>新建文档：Command + N<br>打开现有文档：Command + O<br>保存文档：Command + S<br>另存为：Shift + Command + S<br>关闭文档：Command + W<br>撤销：Command + Z<br>重做：Shift + Command + Z<br>复制：Command + C<br>剪切：Command + X<br>粘贴：Command + V<br>全选：Command + A<br>取消选择：Command + D<br>放大：Command + +<br>缩小：Command + -<br>转到图层：Command + J<br>向下合并图层：Command + E<br>全屏预览：F<br>打开调整图层对话框：Command + L<br>打开色彩平衡对话框：Command + B<br>打开曲线对话框：Command + M</p><h1 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h1><p>启用自由变换工具：Command + T<br>启用自由变换工具并保持纵横比：Option + Command + T<br>启用变形工具：Command + Shift + T<br>启用图层蒙版：Option + 点击图层蒙版缩略图<br>显示&#x2F;隐藏图层蒙版：Shift + 点击图层蒙版缩略图<br>快速选择工具：W<br>启用笔刷工具：B<br>快速启用橡皮擦工具：E<br>启用裁剪工具：C<br>启用移动工具：V<br>启用矩形选框工具：M<br>启用椭圆选框工具：M，然后按住Shift键绘制<br>启用套索工具：L<br>启用快速选择工具：W<br>启用魔法棒工具：W，然后按住Shift键单击选择更多颜色<br>启用放大镜工具：Z<br>启用手形工具：H</p><h1 id="进阶操作"><a href="#进阶操作" class="headerlink" title="进阶操作"></a>进阶操作</h1><p>启用图层样式对话框：Option + 点击图层样式按钮<br>显示&#x2F;隐藏所有面板：Tab<br>快速启用&#x2F;禁用参考线：Command + ;<br>快速启用&#x2F;禁用网格：Command + ‘<br>启用历史记录画笔工具：Y<br>启用污点修复画笔工具：J<br>启用渐变工具：G<br>启用填充工具：G，然后按住Option键填充选定区域<br>启用文本工具：T<br>启用路径选择工具：A<br>启用直线选择工具：A，然后按住Option键<br>启用自定义形状工具：U<br>启用图像修复工具：S<br>启用切片工具：K</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机智的我竟然学了SPSS</title>
    <link href="/2018/06/10/SPSS%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <url>/2018/06/10/SPSS%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<p>SPSS（Statistical Package for the Social Sciences）是一款IBM研发的统计分析软件，它广泛应用于社会科学、医学和商业领域等各个领域。作为商科的孩子，自然也是逃不掉的（<del>自己选的课</del>）</p><p>对于初学者来说，入门SPSS可能会有些困难。下面是一些入门SPSS的小Tips：</p><h1 id="安装SPSS"><a href="#安装SPSS" class="headerlink" title="安装SPSS"></a>安装SPSS</h1><p>首先，那肯定要安装SPSS软件。</p><p>可以从<a href="https://www.ibm.com/spss">IBM官方网站</a>或其他软件下载网站下载SPSS软件。安装过程可能因用户使用的操作系统而异（不过按照经验直接点下一步就好了）</p><h1 id="熟悉SPSS用户界面"><a href="#熟悉SPSS用户界面" class="headerlink" title="熟悉SPSS用户界面"></a>熟悉SPSS用户界面</h1><p>SPSS的用户界面包括菜单、工具栏和数据编辑器等。</p><p>可以使用菜单或工具栏中的选项来执行特定的任务，如导入数据、创建变量、运行分析等。数据编辑器用于输入、编辑和查看数据。</p><h1 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h1><p>要开始分析数据，需要将数据导入SPSS，这取决于数据的来源。</p><ul><li>数据文件（如Excel文件）：直接将其导入SPSS。</li><li>数据库：使用ODBC连接导入数据。</li><li>手动输入数据。</li></ul><h1 id="数据清理"><a href="#数据清理" class="headerlink" title="数据清理"></a>数据清理</h1><p>导入数据后，还需要进行数据清理。</p><p>数据清理是指检查和纠正数据中的错误和不完整性。可以用SPSS的数据编辑器来查看和编辑数据。当然，还可以使用SPSS中的命令来查找和更正数据中的错误。</p><h1 id="创建变量"><a href="#创建变量" class="headerlink" title="创建变量"></a>创建变量</h1><p>在进行分析之前，需要定义和测量要分析的变量。</p><p>可以使用SPSS的变量视图来创建变量。在变量视图中，还可以为每个变量指定名称、类型、标签和值标签等属性。</p><h1 id="运行分析"><a href="#运行分析" class="headerlink" title="运行分析"></a>运行分析</h1><p>在准备好数据和变量之后，可以使用SPSS进行分析。</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>数据分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Excel笔记</title>
    <link href="/2018/03/20/excel%E7%AC%94%E8%AE%B0/"/>
    <url>/2018/03/20/excel%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Excel</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub本地提交</title>
    <link href="/2018/01/03/GitHub%E6%9C%AC%E5%9C%B0%E6%8F%90%E4%BA%A4/"/>
    <url>/2018/01/03/GitHub%E6%9C%AC%E5%9C%B0%E6%8F%90%E4%BA%A4/</url>
    
    <content type="html"><![CDATA[<p>我好菜～实在是记不住命令，还是保存起来复制粘贴。</p><p>1、进入需要提交的文件夹</p><p><code>cd xxx</code></p><p>2、提交</p><p>.表示全部都添加到提交list里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br></code></pre></td></tr></table></figure><p>-m后面带上提交信息～<br><code>git commit -m &quot;commit-info&quot;</code></p><p>3、执行完commit后还没有提交到远程，还需要执行下面的语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push -u origin master<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客记录</title>
    <link href="/2018/01/02/%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/"/>
    <url>/2018/01/02/%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>突然心血来潮想要拥有一个个人主页，但是不想买服务器和域名（虽然有一台VPS能干很多事），兜兜转转看了一圈，最后!!!我发现GitHub Page配合Hexo的方案。嘻嘻，除了要写markdown就没别的缺点了…算辣，好像markdown也不算难。那就开始吧～</p><h2 id="前提："><a href="#前提：" class="headerlink" title="前提："></a>前提：</h2><p>1、Github账户(相信没有哪个程序猿&#x2F;媛莫得GitHub吧？) </p><p>2、git客户端。下载地址见<a href="https://git-scm.com/">官网</a></p><p>3、node.js、npm<br>在node的<a href="https://nodejs.org/en/">官网</a>下载一个LTS（长期维护版本），双击安装包～</p><p>打开命令行，输入如下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br>npm -v<br></code></pre></td></tr></table></figure><p>均有输出就可以啦～</p><h1 id="GitHub-仓库"><a href="#GitHub-仓库" class="headerlink" title="GitHub 仓库"></a>GitHub 仓库</h1><p>在Github建立一个仓库，名字是: 用户名.github.io</p><p>假如你的用户名是test，那么仓库名就是: test.github.io</p><h1 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH Key"></a>配置SSH Key</h1><p>目的是避免每次提交都输入用户名和密码。按照以下步骤在命令行中输入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/. ssh <span class="hljs-comment">#检查本机已存在的ssh密钥</span><br></code></pre></td></tr></table></figure><p>若提示“No such file or directory”或“系统找不到指定路径或文件”，则说明是首次配置。</p><p><code>ssh-keygen -t rsa -C &quot;你的邮件地址&quot;</code></p><p>输入完成后连续键入三次回车，在用户文件夹下找到.ssh\id_rsa.pub，这是配置SSH时生成的文件，用文本编辑器打开，复制里面的内容。</p><p>然后进入你的GitHub个人主页，进入Setting-&gt;SSH and GPG keys-&gt;New SSH key:</p><p>创建一个新的 SSH Key， 名字可以随意填写（例如还是填写test），内容填入刚才复制的内容。</p><p>在命令行中输入下面的内容测试是否成功。</p><p><code>ssh -T git@github.com # 注意邮箱地址不用改</code></p><p>若此时提示Are you sure you want to continue connecting (yes&#x2F;no)?输入yes。</p><p>输出内容如下：</p><p>Hi test! You’ve successfully authenticated, but GitHub does not provide shell access。</p><p>说明成功了。</p><p>此时还需配置GitHub账户</p><p><code>git config --global user.name  &quot;test&quot;// 你的github用户名，非昵称 </code><br><code>$ git config --global user.email  &quot;aa@bb.com&quot;// 填写你的github注册邮箱</code></p><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>npm install -g hexo</code></p><h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><p>在电脑硬盘中找一个地方创建文件夹（最好命名为hexo）,命令行进入该文件夹</p><p><code>hexo init</code><br>此时hexo会自动下载一些文件到该文件夹中。继续</p><p><code>hexo g # 生成</code><br><code>hexo s # 启动服务</code><br>使用生成命令后hexo会生成一些html文件，博客显示的网页就是在这里生成的</p><p>启动服务后可以通过<a href="http://localhost/4000">http://localhost/4000</a> 访问。有时候无法访问的原因可能是端口4000被占用了。</p><h1 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h1><p>默认的主题也太丑了，可以自行更换。详情见<a href="https://hexo.io/themes/index.html">官网</a>。</p><p>比如我们更换成 hexo-theme-jekyll</p><p>进入hexo文件夹并输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/pinggod/hexo-theme-jekyll themes/yilia<br></code></pre></td></tr></table></figure><p>修改_config.yml文件中的theme: landscape为theme: jekyll<br>并重新输入 <code>hexo g</code></p><p>注意：若生成失败可以输入<code>hexo clean</code>清理文件</p><p>配置_config.yml<br>找到depoly:修改成如下(test改成自己的用户名)</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repository:</span> git@github.com:test/test.github.io.git<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">  branch:</span> master<br></code></pre></td></tr></table></figure><p>此时仍然不能正常运行<code>hexo d</code>通常会报如下错误</p><p>Deployer not found: github 或者 Deployer not found: git</p><p>因为还需要安装hexo-deployer-git这个插件</p><p><code>npm install hexo-deployer-git --save</code></p><h2 id="README-md"><a href="#README-md" class="headerlink" title="README.md"></a>README.md</h2><p>每次生成之后，在上传之前将README.md复制到hexo&#x2F;public中，并删除README.html文件</p><h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><p><code>hexo d</code><br>常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;postName&quot;</span> <span class="hljs-comment">#新建文章</span><br>hexo new page <span class="hljs-string">&quot;pageName&quot;</span> <span class="hljs-comment">#新建页面</span><br>hexo generate <span class="hljs-comment">#生成静态页面至public目录</span><br>hexo server <span class="hljs-comment">#开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br>hexo deploy <span class="hljs-comment">#部署到GitHub</span><br>hexo <span class="hljs-built_in">help</span>  <span class="hljs-comment"># 查看帮助</span><br>hexo version  <span class="hljs-comment">#查看Hexo的版本</span><br></code></pre></td></tr></table></figure><p>常用命令的缩写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo n == hexo new<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy<br></code></pre></td></tr></table></figure><p>常用组合命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s -g <span class="hljs-comment">#生成并本地预览</span><br>hexo d -g <span class="hljs-comment">#生成并上传</span><br></code></pre></td></tr></table></figure><h1 id="更新于2022年"><a href="#更新于2022年" class="headerlink" title="更新于2022年"></a>更新于2022年</h1><p>Hexo最大特点竟然是折腾主题，颜控的我真的花了太多时间在上面了呜呜呜～最后还是用了Fluid。</p>]]></content>
    
    
    <categories>
      
      <category>杂</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
